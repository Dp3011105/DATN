// <auto-generated />
using System;
using BE.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BE.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BE.models.ChatSession", b =>
                {
                    b.Property<int>("ID_Chat_Session")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Chat_Session"));

                    b.Property<int>("ID_Khach_Hang")
                        .HasColumnType("int");

                    b.Property<string>("Tieu_De")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("Trang_Thai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ID_Chat_Session");

                    b.HasIndex("ID_Khach_Hang");

                    b.ToTable("Chat_Session");
                });

            modelBuilder.Entity("BE.models.ChatSessionNhanVien", b =>
                {
                    b.Property<int>("ID_Chat_Session")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ID_Nhan_Vien")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ID_Chat_Session", "ID_Nhan_Vien");

                    b.HasIndex("ID_Nhan_Vien");

                    b.ToTable("Chat_Session_Nhan_Vien");
                });

            modelBuilder.Entity("BE.models.DiaChi", b =>
                {
                    b.Property<int>("ID_Dia_Chi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Dia_Chi"));

                    b.Property<string>("Dia_Chi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ghi_Chu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tinh_Thanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Dia_Chi");

                    b.ToTable("Dia_Chi");
                });

            modelBuilder.Entity("BE.models.DiemDanh", b =>
                {
                    b.Property<int>("ID_Diem_Danh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Diem_Danh"));

                    b.Property<string>("Ca")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<TimeSpan?>("Gio_Bat_Dau")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("Gio_Ket_Thuc")
                        .HasColumnType("time");

                    b.Property<DateTime?>("Ngay_Diem_Danh")
                        .HasColumnType("datetime2");

                    b.Property<int>("NhanVien_ID")
                        .HasColumnType("int");

                    b.Property<string>("Vi_Tri")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Diem_Danh");

                    b.HasIndex("NhanVien_ID");

                    b.ToTable("Diem_Danh");
                });

            modelBuilder.Entity("BE.models.DoNgot", b =>
                {
                    b.Property<int>("ID_DoNgot")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_DoNgot"));

                    b.Property<string>("Ghi_Chu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Muc_Do")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_DoNgot");

                    b.ToTable("DoNgot");
                });

            modelBuilder.Entity("BE.models.GioHangChiTiet_Topping", b =>
                {
                    b.Property<int>("ID_GioHangChiTiet_Topping")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GioHangChiTiet_Topping"));

                    b.Property<int>("ID_GioHang_ChiTiet")
                        .HasColumnType("int");

                    b.Property<int>("ID_Topping")
                        .HasColumnType("int");

                    b.HasKey("ID_GioHangChiTiet_Topping");

                    b.HasIndex("ID_GioHang_ChiTiet");

                    b.HasIndex("ID_Topping");

                    b.ToTable("GioHangChiTiet_Topping");
                });

            modelBuilder.Entity("BE.models.GioHang_ChiTiet", b =>
                {
                    b.Property<int>("ID_GioHang_ChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_GioHang_ChiTiet"));

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ID_Gio_Hang")
                        .HasColumnType("int");

                    b.Property<int?>("ID_LuongDa")
                        .HasColumnType("int");

                    b.Property<int?>("ID_SanPham_DoNgot")
                        .HasColumnType("int");

                    b.Property<int>("ID_San_Pham")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Size")
                        .HasColumnType("int");

                    b.Property<string>("Ma_GioHang_ChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Ngay_Tao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("So_Luong")
                        .HasColumnType("int");

                    b.HasKey("ID_GioHang_ChiTiet");

                    b.HasIndex("ID_Gio_Hang");

                    b.HasIndex("ID_LuongDa");

                    b.HasIndex("ID_SanPham_DoNgot");

                    b.HasIndex("ID_San_Pham");

                    b.HasIndex("ID_Size");

                    b.HasIndex("Ma_GioHang_ChiTiet")
                        .IsUnique();

                    b.ToTable("GioHang_ChiTiet");
                });

            modelBuilder.Entity("BE.models.Gio_Hang", b =>
                {
                    b.Property<int>("ID_Gio_Hang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Gio_Hang"));

                    b.Property<int>("ID_Khach_Hang")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ngay_Cap_Nhat")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("Ngay_Tao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("Trang_Thai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ID_Gio_Hang");

                    b.HasIndex("ID_Khach_Hang");

                    b.ToTable("Gio_Hang");
                });

            modelBuilder.Entity("BE.models.HinhThucThanhToan", b =>
                {
                    b.Property<int>("ID_Hinh_Thuc_Thanh_Toan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Hinh_Thuc_Thanh_Toan"));

                    b.Property<string>("Cong_Thanh_Toan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ghi_Chu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phuong_Thuc_Thanh_Toan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Hinh_Thuc_Thanh_Toan");

                    b.ToTable("Hinh_Thuc_Thanh_Toan");
                });

            modelBuilder.Entity("BE.models.HoaDon", b =>
                {
                    b.Property<int>("ID_Hoa_Don")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Hoa_Don"));

                    b.Property<string>("Dia_Chi_Tu_Nhap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ghi_Chu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ID_Dia_Chi")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Hinh_Thuc_Thanh_Toan")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Khach_Hang")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("ID_Nhan_Vien")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Phi_Ship")
                        .HasColumnType("int");

                    b.Property<string>("Loai_Hoa_Don")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LyDoDonHangCoVanDe")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("LyDoHuyDon")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Ma_Hoa_Don")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ngay_Tao")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Phi_Ship")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tong_Tien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Trang_Thai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID_Hoa_Don");

                    b.HasIndex("ID_Dia_Chi");

                    b.HasIndex("ID_Hinh_Thuc_Thanh_Toan");

                    b.HasIndex("ID_Khach_Hang");

                    b.HasIndex("ID_Nhan_Vien");

                    b.ToTable("Hoa_Don");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTiet", b =>
                {
                    b.Property<int>("ID_HoaDon_ChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HoaDon_ChiTiet"));

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Gia_San_Pham")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Gia_Them_Size")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_Hoa_Don")
                        .HasColumnType("int");

                    b.Property<int?>("ID_LuongDa")
                        .HasColumnType("int");

                    b.Property<int?>("ID_SanPham_DoNgot")
                        .HasColumnType("int");

                    b.Property<int>("ID_San_Pham")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Size")
                        .HasColumnType("int");

                    b.Property<string>("Ma_HoaDon_ChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Ngay_Tao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("So_Luong")
                        .HasColumnType("int");

                    b.Property<decimal>("Tong_Tien")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID_HoaDon_ChiTiet");

                    b.HasIndex("ID_Hoa_Don");

                    b.HasIndex("ID_LuongDa");

                    b.HasIndex("ID_SanPham_DoNgot");

                    b.HasIndex("ID_San_Pham");

                    b.HasIndex("ID_Size");

                    b.ToTable("HoaDon_ChiTiet");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTietThue", b =>
                {
                    b.Property<int>("ID_HoaDon_ChiTiet")
                        .HasColumnType("int");

                    b.Property<int>("ID_Thue")
                        .HasColumnType("int");

                    b.Property<string>("Ghi_Chu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_HoaDon_ChiTiet", "ID_Thue");

                    b.HasIndex("ID_Thue");

                    b.ToTable("HoaDonChiTiet_Thue");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTietTopping", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<decimal?>("Gia_Topping")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_HoaDon_ChiTiet")
                        .HasColumnType("int");

                    b.Property<int>("ID_Topping")
                        .HasColumnType("int");

                    b.Property<int?>("So_Luong")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_HoaDon_ChiTiet");

                    b.HasIndex("ID_Topping");

                    b.ToTable("HoaDonChiTiet_Topping");
                });

            modelBuilder.Entity("BE.models.HoaDonVoucher", b =>
                {
                    b.Property<int>("ID_HoaDonVoucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_HoaDonVoucher"));

                    b.Property<decimal>("Gia_Tri_Giam")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ID_Hoa_Don")
                        .HasColumnType("int");

                    b.Property<int>("ID_Voucher")
                        .HasColumnType("int");

                    b.HasKey("ID_HoaDonVoucher");

                    b.HasIndex("ID_Hoa_Don");

                    b.HasIndex("ID_Voucher");

                    b.ToTable("HoaDonVouchers");
                });

            modelBuilder.Entity("BE.models.KhachHang", b =>
                {
                    b.Property<int>("ID_Khach_Hang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Khach_Hang"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ghi_Chu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Ho_Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("So_Dien_Thoai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Khach_Hang");

                    b.ToTable("Khach_Hang");
                });

            modelBuilder.Entity("BE.models.KhachHangDiaChi", b =>
                {
                    b.Property<int>("ID_Dia_Chi")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("KhachHang_ID")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Dia_Chi", "KhachHang_ID");

                    b.HasIndex("KhachHang_ID");

                    b.ToTable("KhachHang_DiaChi");
                });

            modelBuilder.Entity("BE.models.KhachHangVoucher", b =>
                {
                    b.Property<int>("ID_Khach_Hang")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ID_Voucher")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Ghi_Chu")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasDefaultValue("");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Khach_Hang", "ID_Voucher");

                    b.HasIndex("ID_Voucher");

                    b.ToTable("KhachHang_Voucher");
                });

            modelBuilder.Entity("BE.models.LichSuHoaDon", b =>
                {
                    b.Property<int>("ID_Lich_Su_Hoa_Don")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Lich_Su_Hoa_Don"));

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Hanh_Dong")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ID_Hoa_Don")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Ngay_Cap_Nhat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Ngay_Tao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nguoi_Cap_Nhat")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nguoi_Tao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Lich_Su_Hoa_Don");

                    b.HasIndex("ID_Hoa_Don");

                    b.ToTable("Lich_Su_Hoa_Don");
                });

            modelBuilder.Entity("BE.models.LuongDa", b =>
                {
                    b.Property<int>("ID_LuongDa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_LuongDa"));

                    b.Property<string>("Ten_LuongDa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_LuongDa");

                    b.ToTable("LuongDa");
                });

            modelBuilder.Entity("BE.models.Message", b =>
                {
                    b.Property<int>("ID_Message")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Message"));

                    b.Property<int>("ID_Chat_Session")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Khach_Hang")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Nhan_Vien")
                        .HasColumnType("int");

                    b.Property<string>("Noi_Dung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Thoi_Gian_Gui")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("Trang_Thai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ID_Message");

                    b.HasIndex("ID_Chat_Session");

                    b.HasIndex("ID_Khach_Hang");

                    b.HasIndex("ID_Nhan_Vien");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("BE.models.NhanVien", b =>
                {
                    b.Property<int>("ID_Nhan_Vien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Nhan_Vien"));

                    b.Property<string>("AnhCCCD")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("AnhNhanVien")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Dia_Chi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("GioiTinh")
                        .HasColumnType("bit");

                    b.Property<string>("Ho_Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NamSinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("So_Dien_Thoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Nhan_Vien");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Nhan_Vien");
                });

            modelBuilder.Entity("BE.models.SanPham", b =>
                {
                    b.Property<int>("ID_San_Pham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_San_Pham"));

                    b.Property<decimal?>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Hinh_Anh")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Mo_Ta")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("So_Luong")
                        .HasColumnType("int");

                    b.Property<string>("Ten_San_Pham")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_San_Pham");

                    b.ToTable("San_Pham");
                });

            modelBuilder.Entity("BE.models.SanPhamDoNgot", b =>
                {
                    b.Property<int>("ID_San_Pham")
                        .HasColumnType("int");

                    b.Property<int>("ID_DoNgot")
                        .HasColumnType("int");

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ID_San_Pham", "ID_DoNgot");

                    b.HasIndex("ID_DoNgot");

                    b.ToTable("SanPham_DoNgot");
                });

            modelBuilder.Entity("BE.models.SanPhamLuongDa", b =>
                {
                    b.Property<int>("ID_San_Pham")
                        .HasColumnType("int");

                    b.Property<int>("ID_LuongDa")
                        .HasColumnType("int");

                    b.HasKey("ID_San_Pham", "ID_LuongDa");

                    b.HasIndex("ID_LuongDa");

                    b.ToTable("SanPhamLuongDa");
                });

            modelBuilder.Entity("BE.models.SanPhamSize", b =>
                {
                    b.Property<int>("ID_Size")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ID_San_Pham")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Mo_Ta")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Size", "ID_San_Pham");

                    b.HasIndex("ID_San_Pham");

                    b.ToTable("SanPham_Size");
                });

            modelBuilder.Entity("BE.models.SanPhamTopping", b =>
                {
                    b.Property<int>("ID_Topping")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ID_San_Pham")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Mo_Ta")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID_Topping", "ID_San_Pham");

                    b.HasIndex("ID_San_Pham");

                    b.ToTable("SanPham_Topping");
                });

            modelBuilder.Entity("BE.models.Size", b =>
                {
                    b.Property<int>("ID_Size")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Size"));

                    b.Property<decimal?>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Size");

                    b.ToTable("Size");
                });

            modelBuilder.Entity("BE.models.TaiKhoan", b =>
                {
                    b.Property<int>("ID_Tai_Khoan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Tai_Khoan"));

                    b.Property<int?>("ID_Khach_Hang")
                        .HasColumnType("int");

                    b.Property<int?>("ID_Nhan_Vien")
                        .HasColumnType("int");

                    b.Property<string>("Mat_Khau")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ten_Nguoi_Dung")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Tai_Khoan");

                    b.HasIndex("ID_Khach_Hang");

                    b.HasIndex("ID_Nhan_Vien");

                    b.ToTable("Tai_Khoan");
                });

            modelBuilder.Entity("BE.models.TaiKhoanVaiTro", b =>
                {
                    b.Property<int>("ID_Vai_Tro")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("ID_Tai_Khoan")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("ID_Vai_Tro", "ID_Tai_Khoan");

                    b.HasIndex("ID_Tai_Khoan");

                    b.ToTable("TaiKhoan_VaiTro");
                });

            modelBuilder.Entity("BE.models.Thue", b =>
                {
                    b.Property<int>("ID_Thue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Thue"));

                    b.Property<string>("Mo_Ta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten_Thue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Trang_Thai")
                        .HasColumnType("bit");

                    b.Property<decimal>("Ty_Le")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)");

                    b.HasKey("ID_Thue");

                    b.ToTable("Thue");
                });

            modelBuilder.Entity("BE.models.Topping", b =>
                {
                    b.Property<int>("ID_Topping")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Topping"));

                    b.Property<string>("Ghi_Chu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("Gia")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("So_Luong")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Trang_Thai")
                        .HasColumnType("bit");

                    b.HasKey("ID_Topping");

                    b.ToTable("Topping");
                });

            modelBuilder.Entity("BE.models.VaiTro", b =>
                {
                    b.Property<int>("ID_Vai_Tro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Vai_Tro"));

                    b.Property<string>("Ten_Vai_Tro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID_Vai_Tro");

                    b.ToTable("Vai_Tro");
                });

            modelBuilder.Entity("BE.models.Voucher", b =>
                {
                    b.Property<int>("ID_Voucher")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID_Voucher"));

                    b.Property<decimal?>("Gia_Tri_Giam")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ma_Voucher")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Ngay_Bat_Dau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Ngay_Ket_Thuc")
                        .HasColumnType("datetime2");

                    b.Property<int?>("So_Luong")
                        .HasColumnType("int");

                    b.Property<decimal?>("So_Tien_Dat_Yeu_Cau")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool?>("Trang_Thai")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("ID_Voucher");

                    b.ToTable("Voucher");
                });

            modelBuilder.Entity("BE.models.ChatSession", b =>
                {
                    b.HasOne("BE.models.KhachHang", "KhachHang")
                        .WithMany("ChatSessions")
                        .HasForeignKey("ID_Khach_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("BE.models.ChatSessionNhanVien", b =>
                {
                    b.HasOne("BE.models.ChatSession", "ChatSession")
                        .WithMany("ChatSessionNhanViens")
                        .HasForeignKey("ID_Chat_Session")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.NhanVien", "NhanVien")
                        .WithMany("ChatSessionNhanViens")
                        .HasForeignKey("ID_Nhan_Vien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChatSession");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("BE.models.DiemDanh", b =>
                {
                    b.HasOne("BE.models.NhanVien", "NhanVien")
                        .WithMany("DiemDanhs")
                        .HasForeignKey("NhanVien_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("BE.models.GioHangChiTiet_Topping", b =>
                {
                    b.HasOne("BE.models.GioHang_ChiTiet", "GioHang_ChiTiet")
                        .WithMany("GioHangChiTiet_Toppings")
                        .HasForeignKey("ID_GioHang_ChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Topping", "Topping")
                        .WithMany("GioHangChiTiet_Toppings")
                        .HasForeignKey("ID_Topping")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GioHang_ChiTiet");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("BE.models.GioHang_ChiTiet", b =>
                {
                    b.HasOne("BE.models.Gio_Hang", "Gio_Hang")
                        .WithMany("GioHang_ChiTiets")
                        .HasForeignKey("ID_Gio_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.LuongDa", "LuongDa")
                        .WithMany("GioHang_ChiTiets")
                        .HasForeignKey("ID_LuongDa");

                    b.HasOne("BE.models.DoNgot", "DoNgot")
                        .WithMany("GioHang_ChiTiets")
                        .HasForeignKey("ID_SanPham_DoNgot");

                    b.HasOne("BE.models.SanPham", "San_Pham")
                        .WithMany("GioHang_ChiTiets")
                        .HasForeignKey("ID_San_Pham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Size", "Size")
                        .WithMany("GioHang_ChiTiets")
                        .HasForeignKey("ID_Size");

                    b.Navigation("DoNgot");

                    b.Navigation("Gio_Hang");

                    b.Navigation("LuongDa");

                    b.Navigation("San_Pham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("BE.models.Gio_Hang", b =>
                {
                    b.HasOne("BE.models.KhachHang", "Khach_Hang")
                        .WithMany("Gio_Hangs")
                        .HasForeignKey("ID_Khach_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khach_Hang");
                });

            modelBuilder.Entity("BE.models.HoaDon", b =>
                {
                    b.HasOne("BE.models.DiaChi", "DiaChi")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_Dia_Chi");

                    b.HasOne("BE.models.HinhThucThanhToan", "HinhThucThanhToan")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_Hinh_Thuc_Thanh_Toan");

                    b.HasOne("BE.models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_Khach_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("ID_Nhan_Vien");

                    b.Navigation("DiaChi");

                    b.Navigation("HinhThucThanhToan");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTiet", b =>
                {
                    b.HasOne("BE.models.HoaDon", "HoaDon")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ID_Hoa_Don")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.LuongDa", "LuongDa")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ID_LuongDa");

                    b.HasOne("BE.models.DoNgot", "DoNgot")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ID_SanPham_DoNgot");

                    b.HasOne("BE.models.SanPham", "SanPham")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ID_San_Pham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Size", "Size")
                        .WithMany("HoaDonChiTiets")
                        .HasForeignKey("ID_Size");

                    b.Navigation("DoNgot");

                    b.Navigation("HoaDon");

                    b.Navigation("LuongDa");

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTietThue", b =>
                {
                    b.HasOne("BE.models.HoaDonChiTiet", "HoaDonChiTiet")
                        .WithMany("HoaDonChiTietThues")
                        .HasForeignKey("ID_HoaDon_ChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Thue", "Thue")
                        .WithMany("HoaDonChiTietThues")
                        .HasForeignKey("ID_Thue")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonChiTiet");

                    b.Navigation("Thue");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTietTopping", b =>
                {
                    b.HasOne("BE.models.HoaDonChiTiet", "HoaDonChiTiet")
                        .WithMany("HoaDonChiTietToppings")
                        .HasForeignKey("ID_HoaDon_ChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Topping", "Topping")
                        .WithMany("HoaDonChiTietToppings")
                        .HasForeignKey("ID_Topping")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDonChiTiet");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("BE.models.HoaDonVoucher", b =>
                {
                    b.HasOne("BE.models.HoaDon", "HoaDon")
                        .WithMany("HoaDonVouchers")
                        .HasForeignKey("ID_Hoa_Don")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Voucher", "Voucher")
                        .WithMany("HoaDonVouchers")
                        .HasForeignKey("ID_Voucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("BE.models.KhachHangDiaChi", b =>
                {
                    b.HasOne("BE.models.DiaChi", "DiaChi")
                        .WithMany("KhachHangDiaChis")
                        .HasForeignKey("ID_Dia_Chi")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.KhachHang", "KhachHang")
                        .WithMany("KhachHangDiaChis")
                        .HasForeignKey("KhachHang_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DiaChi");

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("BE.models.KhachHangVoucher", b =>
                {
                    b.HasOne("BE.models.KhachHang", "KhachHang")
                        .WithMany("KhachHangVouchers")
                        .HasForeignKey("ID_Khach_Hang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Voucher", "Voucher")
                        .WithMany("KhachHangVouchers")
                        .HasForeignKey("ID_Voucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("BE.models.LichSuHoaDon", b =>
                {
                    b.HasOne("BE.models.HoaDon", "HoaDon")
                        .WithMany("LichSuHoaDons")
                        .HasForeignKey("ID_Hoa_Don")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("BE.models.Message", b =>
                {
                    b.HasOne("BE.models.ChatSession", "ChatSession")
                        .WithMany("Messages")
                        .HasForeignKey("ID_Chat_Session")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.KhachHang", "KhachHang")
                        .WithMany("Messages")
                        .HasForeignKey("ID_Khach_Hang");

                    b.HasOne("BE.models.NhanVien", "NhanVien")
                        .WithMany("Messages")
                        .HasForeignKey("ID_Nhan_Vien");

                    b.Navigation("ChatSession");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("BE.models.SanPhamDoNgot", b =>
                {
                    b.HasOne("BE.models.DoNgot", "DoNgot")
                        .WithMany("SanPhamDoNgots")
                        .HasForeignKey("ID_DoNgot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.SanPham", "SanPham")
                        .WithMany("SanPhamDoNgots")
                        .HasForeignKey("ID_San_Pham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DoNgot");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BE.models.SanPhamLuongDa", b =>
                {
                    b.HasOne("BE.models.LuongDa", "LuongDa")
                        .WithMany("SanPhamLuongDas")
                        .HasForeignKey("ID_LuongDa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.SanPham", "SanPham")
                        .WithMany("SanPhamLuongDas")
                        .HasForeignKey("ID_San_Pham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LuongDa");

                    b.Navigation("SanPham");
                });

            modelBuilder.Entity("BE.models.SanPhamSize", b =>
                {
                    b.HasOne("BE.models.SanPham", "SanPham")
                        .WithMany("SanPhamSizes")
                        .HasForeignKey("ID_San_Pham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Size", "Size")
                        .WithMany("SanPhamSizes")
                        .HasForeignKey("ID_Size")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("BE.models.SanPhamTopping", b =>
                {
                    b.HasOne("BE.models.SanPham", "SanPham")
                        .WithMany("SanPhamToppings")
                        .HasForeignKey("ID_San_Pham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.Topping", "Topping")
                        .WithMany("SanPhamToppings")
                        .HasForeignKey("ID_Topping")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SanPham");

                    b.Navigation("Topping");
                });

            modelBuilder.Entity("BE.models.TaiKhoan", b =>
                {
                    b.HasOne("BE.models.KhachHang", "KhachHang")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("ID_Khach_Hang");

                    b.HasOne("BE.models.NhanVien", "NhanVien")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("ID_Nhan_Vien");

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("BE.models.TaiKhoanVaiTro", b =>
                {
                    b.HasOne("BE.models.TaiKhoan", "TaiKhoan")
                        .WithMany("TaiKhoanVaiTros")
                        .HasForeignKey("ID_Tai_Khoan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BE.models.VaiTro", "VaiTro")
                        .WithMany("TaiKhoanVaiTros")
                        .HasForeignKey("ID_Vai_Tro")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");

                    b.Navigation("VaiTro");
                });

            modelBuilder.Entity("BE.models.ChatSession", b =>
                {
                    b.Navigation("ChatSessionNhanViens");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("BE.models.DiaChi", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("KhachHangDiaChis");
                });

            modelBuilder.Entity("BE.models.DoNgot", b =>
                {
                    b.Navigation("GioHang_ChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamDoNgots");
                });

            modelBuilder.Entity("BE.models.GioHang_ChiTiet", b =>
                {
                    b.Navigation("GioHangChiTiet_Toppings");
                });

            modelBuilder.Entity("BE.models.Gio_Hang", b =>
                {
                    b.Navigation("GioHang_ChiTiets");
                });

            modelBuilder.Entity("BE.models.HinhThucThanhToan", b =>
                {
                    b.Navigation("HoaDons");
                });

            modelBuilder.Entity("BE.models.HoaDon", b =>
                {
                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("HoaDonVouchers");

                    b.Navigation("LichSuHoaDons");
                });

            modelBuilder.Entity("BE.models.HoaDonChiTiet", b =>
                {
                    b.Navigation("HoaDonChiTietThues");

                    b.Navigation("HoaDonChiTietToppings");
                });

            modelBuilder.Entity("BE.models.KhachHang", b =>
                {
                    b.Navigation("ChatSessions");

                    b.Navigation("Gio_Hangs");

                    b.Navigation("HoaDons");

                    b.Navigation("KhachHangDiaChis");

                    b.Navigation("KhachHangVouchers");

                    b.Navigation("Messages");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("BE.models.LuongDa", b =>
                {
                    b.Navigation("GioHang_ChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamLuongDas");
                });

            modelBuilder.Entity("BE.models.NhanVien", b =>
                {
                    b.Navigation("ChatSessionNhanViens");

                    b.Navigation("DiemDanhs");

                    b.Navigation("HoaDons");

                    b.Navigation("Messages");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("BE.models.SanPham", b =>
                {
                    b.Navigation("GioHang_ChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamDoNgots");

                    b.Navigation("SanPhamLuongDas");

                    b.Navigation("SanPhamSizes");

                    b.Navigation("SanPhamToppings");
                });

            modelBuilder.Entity("BE.models.Size", b =>
                {
                    b.Navigation("GioHang_ChiTiets");

                    b.Navigation("HoaDonChiTiets");

                    b.Navigation("SanPhamSizes");
                });

            modelBuilder.Entity("BE.models.TaiKhoan", b =>
                {
                    b.Navigation("TaiKhoanVaiTros");
                });

            modelBuilder.Entity("BE.models.Thue", b =>
                {
                    b.Navigation("HoaDonChiTietThues");
                });

            modelBuilder.Entity("BE.models.Topping", b =>
                {
                    b.Navigation("GioHangChiTiet_Toppings");

                    b.Navigation("HoaDonChiTietToppings");

                    b.Navigation("SanPhamToppings");
                });

            modelBuilder.Entity("BE.models.VaiTro", b =>
                {
                    b.Navigation("TaiKhoanVaiTros");
                });

            modelBuilder.Entity("BE.models.Voucher", b =>
                {
                    b.Navigation("HoaDonVouchers");

                    b.Navigation("KhachHangVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
