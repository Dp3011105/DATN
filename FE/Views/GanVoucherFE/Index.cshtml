@model FE.Models.GanVoucherViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Gán Voucher Cho Khách Hàng";
}

<div class="container-fluid">
    <div class="row">
        <!-- Cột chính -->
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title">@ViewData["Title"]</h3>
                </div>

                <!-- Hiển thị thông báo -->
                @if (TempData["Result"] != null)
                {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <div class="d-flex align-items-start">
                            <i class="fas fa-check-circle me-2 mt-1 text-success"></i>
                            <div class="flex-grow-1">
                                <strong>🎉 Kết quả gán voucher:</strong>
                                <div class="result-content mt-2">
                                    <pre style="white-space: pre-line; margin: 0; background: rgba(255,255,255,0.2); padding: 12px; border-radius: 6px; font-size: 14px; border-left: 4px solid #28a745;">@TempData["Result"]</pre>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["Warning"] != null)
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <div class="d-flex align-items-start">
                            <i class="fas fa-exclamation-triangle me-2 mt-1 text-warning"></i>
                            <div class="flex-grow-1">
                                <strong>⚠️ Cảnh báo:</strong>
                                <div class="warning-content mt-2">
                                    <pre style="white-space: pre-line; margin: 0; background: rgba(255,255,255,0.2); padding: 12px; border-radius: 6px; font-size: 14px; border-left: 4px solid #ffc107;">@TempData["Warning"]</pre>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                @if (TempData["Error"] != null)
                {
                    <div class="alert alert-danger alert-dismissible fade show" role="alert">
                        <div class="d-flex align-items-start">
                            <i class="fas fa-exclamation-triangle me-2 mt-1 text-danger"></i>
                            <div class="flex-grow-1">
                                <strong>❌ Có lỗi xảy ra:</strong>
                                <div class="error-content mt-2">
                                    <div class="error-message bg-white bg-opacity-25 p-3 rounded border-start border-danger border-4">
                                        @{
                                            var errorMessage = TempData["Error"].ToString();
                                            if (errorMessage.Contains("An error occurred while saving the entity changes"))
                                            {
                                                <div class="mb-2">
                                                    <strong>🔧 Lỗi lưu dữ liệu:</strong>
                                                    <p class="mb-1 text-dark">Có lỗi xảy ra khi lưu thông tin gán voucher vào cơ sở dữ liệu.</p>
                                                </div>
                                                <details class="mt-2">
                                                    <summary class="btn btn-sm btn-outline-secondary">📋 Chi tiết lỗi kỹ thuật</summary>
                                                    <div class="mt-2 p-2 bg-light rounded">
                                                        <code class="text-danger small">@errorMessage</code>
                                                    </div>
                                                </details>
                                                <div class="mt-3">
                                                    <strong>💡 Gợi ý khắc phục:</strong>
                                                    <ul class="mb-0 small text-dark">
                                                        <li>Kiểm tra kết nối cơ sở dữ liệu</li>
                                                        <li>Đảm bảo voucher còn đủ số lượng</li>
                                                        <li>Kiểm tra khách hàng có tồn tại không</li>
                                                        <li>Thử lại với số lượng ít hơn</li>
                                                    </ul>
                                                </div>
                                            }
                                            else
                                            {
                                                <pre style="white-space: pre-line; margin: 0; font-size: 14px;">@errorMessage</pre>
                                            }
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                }

                <div class="card-body">
                    <form asp-action="GanVoucher" method="post" id="ganVoucherForm">
                        <div class="row">
                            <!-- Chọn voucher TRƯỚC -->
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label>
                                        <strong>Chọn Voucher:</strong>
                                        <small class="text-muted">(Checkbox để chọn nhiều)</small>
                                    </label>

                                    <!-- Tìm kiếm và điều khiển -->
                                    <div class="mb-2 d-flex gap-2">
                                        <input type="text" id="searchVoucher" class="form-control"
                                               placeholder="🔍 Tìm kiếm voucher theo tên hoặc mã..." />
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="toggleAllVouchers()">
                                            <i class="fas fa-check-double"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="clearAllVouchers()">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>

                                    <!-- Container voucher với checkbox -->
                                    <div class="voucher-list border rounded p-2" style="max-height: 250px; overflow-y: auto;">
                                        @foreach (var voucher in Model.Vouchers)
                                        {
                                            <div class="form-check voucher-item"
                                                 data-name="@(voucher.Ten?.ToLower().Trim() ?? "")"
                                                 data-code="@(voucher.Ma_Voucher?.ToLower().Trim() ?? "")"
                                                 data-voucher-id="@voucher.ID_Voucher"
                                                 data-quantity="@voucher.So_Luong">
                                                <input class="form-check-input voucher-checkbox" type="checkbox"
                                                       name="ID_Voucher" value="@voucher.ID_Voucher"
                                                       id="voucher_@voucher.ID_Voucher" />
                                                <label class="form-check-label w-100" for="voucher_@voucher.ID_Voucher">
                                                    <div class="d-flex justify-content-between align-items-start">
                                                        <div class="flex-grow-1">
                                                            <div class="d-flex gap-2 align-items-center">
                                                                <strong>@voucher.Ten</strong>
                                                                <span class="badge bg-success">@voucher.Gia_Tri_Giam%</span>
                                                            </div>
                                                            <div class="small text-muted">
                                                                Mã: <code>@voucher.Ma_Voucher</code> • Còn: <strong>@voucher.So_Luong</strong>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </label>
                                            </div>
                                        }
                                    </div>
                                    <small class="text-muted">
                                        Đã chọn: <span id="selectedVouchers">0</span> voucher
                                        <span id="filteredVoucherInfo" class="text-info"></span>
                                    </small>
                                </div>
                            </div>

                            <!-- Chọn khách hàng -->
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label>
                                        <strong>Chọn Khách Hàng:</strong>
                                        <small class="text-muted">(Checkbox để chọn nhiều)</small>
                                    </label>

                                    <!-- Tìm kiếm và điều khiển -->
                                    <div class="mb-2 d-flex gap-2">
                                        <input type="text" id="searchCustomer" class="form-control"
                                               placeholder="🔍 Tìm kiếm theo tên hoặc email..." />
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="toggleAllCustomers()">
                                            <i class="fas fa-check-double"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-secondary" onclick="clearAllCustomers()">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>

                                    <!-- Container khách hàng với checkbox -->
                                    <div class="customer-list border rounded p-2" style="max-height: 250px; overflow-y: auto;">
                                        @{
                                            var sortedKhachHangs = Model.KhachHangs.OrderByDescending(kh =>
                                            Model.TopVipKhachHangs?.Any(vip => vip.ID_Khach_Hang == kh.ID_Khach_Hang) == true)
                                            .ThenBy(kh => kh.Ho_Ten).ToList();
                                        }

                                        @foreach (var kh in sortedKhachHangs)
                                        {
                                            var isVip = Model.TopVipKhachHangs?.Any(vip => vip.ID_Khach_Hang == kh.ID_Khach_Hang) == true;
                                            <div class="form-check customer-item @(isVip ? "vip-customer" : "")"
                                                 data-name="@(kh.Ho_Ten?.ToLower().Trim() ?? "")"
                                                 data-email="@(kh.Email?.ToLower().Trim() ?? "")"
                                                 data-customer-id="@kh.ID_Khach_Hang"
                                                 data-is-vip="@isVip.ToString().ToLower()">
                                                <input class="form-check-input customer-checkbox" type="checkbox"
                                                       name="ID_Khach_Hang" value="@kh.ID_Khach_Hang"
                                                       id="customer_@kh.ID_Khach_Hang" />
                                                <label class="form-check-label w-100" for="customer_@kh.ID_Khach_Hang">
                                                    <div class="d-flex justify-content-between align-items-start">
                                                        <div>
                                                            <div class="d-flex align-items-center gap-2">
                                                                <strong>@kh.Ho_Ten</strong>
                                                                @if (isVip)
                                                                {
                                                                    <span class="badge bg-warning text-dark">👑 VIP</span>
                                                                }
                                                            </div>
                                                            <small class="text-muted">@(kh.Email ?? "Chưa có email")</small>
                                                        </div>
                                                    </div>
                                                </label>
                                            </div>
                                        }
                                    </div>
                                    <small class="text-muted">
                                        Đã chọn: <span id="selectedCustomers">0</span> khách hàng
                                        <span id="filteredCustomerInfo" class="text-info"></span>
                                    </small>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <!-- Ghi chú -->
                            <div class="col-md-12">
                                <div class="form-group mb-3">
                                    <label asp-for="GhiChu"><strong>Ghi Chú:</strong></label>
                                    <textarea asp-for="GhiChu" class="form-control" rows="3"
                                              placeholder="Nhập ghi chú (bắt buộc)" maxlength="500" required></textarea>
                                    <span asp-validation-for="GhiChu" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <!-- Nút thực hiện -->
                        <div class="row">
                            <div class="col-12">
                                <div class="form-group text-center mb-3">
                                    <button type="submit" class="btn btn-primary btn-lg me-2" id="btnSubmit">
                                        <i class="fas fa-gift"></i> Gán Voucher
                                    </button>
                                    <button type="button" class="btn btn-secondary btn-lg" onclick="clearForm()">
                                        <i class="fas fa-sync-alt"></i> Làm mới
                                    </button>
                                </div>
                            </div>
                        </div>

                        <!-- Thông tin tóm tắt -->
                        <div class="row mt-3">
                            <div class="col-12">
                                <div class="alert alert-info">
                                    <strong>Tóm tắt:</strong>
                                    <ul class="mb-0">
                                        <li>Số khách hàng được chọn: <span id="summaryCustomers">0</span></li>
                                        <li>Số voucher được chọn: <span id="summaryVouchers">0</span></li>
                                        <li>Tổng số lượt gán dự kiến: <span id="totalAssignments">0</span></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Cột Top 10 VIP -->
        <div class="col-md-4">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h4><i class="fas fa-crown"></i> Top 10 KH VIP</h4>
                    <small>Nhiều đơn hoàn thành trong tuần</small>
                </div>
                <div class="card-body p-0">
                    <!-- Nút chọn tất cả VIP -->
                    <div class="p-3 border-bottom bg-light">
                        <div class="d-flex gap-2">
                            <button type="button" class="btn btn-sm btn-success flex-fill" onclick="selectAllVipCustomers()">
                                <i class="fas fa-check-double"></i> Chọn tất cả VIP
                            </button>
                            <button type="button" class="btn btn-sm btn-outline-secondary flex-fill" onclick="clearVipSelection()">
                                <i class="fas fa-times"></i> Bỏ chọn
                            </button>
                        </div>
                    </div>

                    @if (Model.TopVipKhachHangs != null && Model.TopVipKhachHangs.Any())
                    {
                        <div class="list-group list-group-flush">
                            @for (int i = 0; i < Model.TopVipKhachHangs.Count; i++)
                            {
                                var kh = Model.TopVipKhachHangs[i];
                                var rank = i + 1;
                                var medal = rank == 1 ? "🥇" : rank == 2 ? "🥈" : rank == 3 ? "🥉" : $"#{rank}";

                                <div class="list-group-item d-flex justify-content-between align-items-center vip-customer-item" data-customer-id="@kh.ID_Khach_Hang">
                                    <div class="flex-grow-1">
                                        <span class="me-2">@medal</span>
                                        <strong>@(kh.Ho_Ten ?? "Chưa cập nhật")</strong>
                                        <br>
                                        <small class="text-muted">@(kh.Email ?? "Chưa có email")</small>
                                    </div>
                                    <div class="d-flex gap-1">
                                        <button type="button" class="btn btn-sm btn-primary toggle-customer-btn"
                                                onclick="toggleCustomerSelection(@kh.ID_Khach_Hang, '@kh.Ho_Ten')">
                                            <i class="fas fa-plus"></i>
                                        </button>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center p-3">
                            <p class="text-muted">Không có dữ liệu KH VIP</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    // Variables to track assigned vouchers
    var customerVoucherAssignments = {};

    $(document).ready(function() {
        resetSubmitButton();
        updateSelectionCounters();
        loadCustomerVoucherAssignments();
    });

    // Reset submit button
    function resetSubmitButton() {
        $('#btnSubmit').prop('disabled', false)
            .html('<i class="fas fa-gift"></i> Gán Voucher');
    }

    // Update selection counters
    function updateSelectionCounters() {
        var selectedCustomers = $('.customer-checkbox:checked').length;
        var selectedVouchers = $('.voucher-checkbox:checked').length;

        $('#selectedCustomers, #summaryCustomers').text(selectedCustomers);
        $('#selectedVouchers, #summaryVouchers').text(selectedVouchers);
        $('#totalAssignments').text(selectedCustomers * selectedVouchers);

        updateVipButtonStates();
    }

    // Update VIP button states
    function updateVipButtonStates() {
        $('.vip-customer-item').each(function() {
            var customerId = $(this).data('customer-id');
            var $button = $(this).find('.toggle-customer-btn');
            var isSelected = $(`#customer_${customerId}`).prop('checked');

            if (isSelected) {
                $button.removeClass('btn-primary').addClass('btn-warning')
                    .html('<i class="fas fa-check"></i>');
                $(this).addClass('bg-light');
            } else {
                $button.removeClass('btn-warning').addClass('btn-primary')
                    .html('<i class="fas fa-plus"></i>');
                $(this).removeClass('bg-light');
            }
        });
    }

    // Filter customers based on selected vouchers
    function filterCustomersBySelectedVouchers() {
        var selectedVoucherIds = [];
        $('.voucher-checkbox:checked').each(function() {
            selectedVoucherIds.push($(this).val());
        });

        var hiddenCount = 0;
        var totalCount = $('.customer-item').length;

        $('.customer-item').each(function() {
            var customerId = $(this).data('customer-id');
            var shouldHide = false;

            if (selectedVoucherIds.length > 0) {
                selectedVoucherIds.forEach(function(voucherId) {
                    if (customerVoucherAssignments[customerId] &&
                        customerVoucherAssignments[customerId].includes(voucherId)) {
                        shouldHide = true;
                    }
                });
            }

            if (shouldHide) {
                $(this).hide();
                $(this).find('.customer-checkbox').prop('checked', false);
                hiddenCount++;
            } else {
                var searchTerm = $('#searchCustomer').val().toLowerCase().trim();
                if (searchTerm === '' || $(this).text().toLowerCase().includes(searchTerm)) {
                    $(this).show();
                }
            }
        });

        if (hiddenCount > 0 && selectedVoucherIds.length > 0) {
            $('#filteredCustomerInfo').text(`(Đã ẩn ${hiddenCount}/${totalCount} KH đã có voucher)`);
        } else {
            $('#filteredCustomerInfo').text('');
        }

        updateSelectionCounters();
    }

    // Event listeners
    $(document).on('change', '.customer-checkbox', updateSelectionCounters);
    $(document).on('change', '.voucher-checkbox', function() {
        updateSelectionCounters();
        filterCustomersBySelectedVouchers();
    });

    // Search customers
    $('#searchCustomer').on('input', function() {
        var searchTerm = $(this).val().toLowerCase().trim();

        $('.customer-item').each(function() {
            var $item = $(this);
            var customerId = $item.data('customer-id');

            var hiddenByVoucherFilter = false;
            var selectedVoucherIds = [];
            $('.voucher-checkbox:checked').each(function() {
                selectedVoucherIds.push($(this).val());
            });

            if (selectedVoucherIds.length > 0) {
                selectedVoucherIds.forEach(function(voucherId) {
                    if (customerVoucherAssignments[customerId] &&
                        customerVoucherAssignments[customerId].includes(voucherId)) {
                        hiddenByVoucherFilter = true;
                    }
                });
            }

            if (hiddenByVoucherFilter) {
                $item.hide();
                $item.find('.customer-checkbox').prop('checked', false);
                return;
            }

            var itemText = $item.text().toLowerCase();
            var isMatch = searchTerm === '' || itemText.includes(searchTerm);

            if (isMatch) {
                $item.show();
            } else {
                $item.hide();
                $item.find('.customer-checkbox').prop('checked', false);
            }
        });

        updateSelectionCounters();
    });

    // Search vouchers
    $('#searchVoucher').on('input', function() {
        var searchTerm = $(this).val().toLowerCase().trim();

        $('.voucher-item').each(function() {
            var $item = $(this);
            var fullText = $item.text().toLowerCase().replace(/\s+/g, ' ').trim();
            var isMatch = searchTerm === '' || fullText.indexOf(searchTerm) !== -1;

            if (isMatch) {
                $item.show();
            } else {
                $item.hide();
                $item.find('.voucher-checkbox').prop('checked', false);
            }
        });

        updateSelectionCounters();
        filterCustomersBySelectedVouchers();
    });

    // Toggle functions
    function toggleAllCustomers() {
        var visibleCustomers = $('.customer-item:visible .customer-checkbox');
        var allChecked = visibleCustomers.length === visibleCustomers.filter(':checked').length;
        visibleCustomers.prop('checked', !allChecked);
        updateSelectionCounters();
    }

    function clearAllCustomers() {
        $('.customer-checkbox').prop('checked', false);
        updateSelectionCounters();
    }

    function toggleAllVouchers() {
        var visibleVouchers = $('.voucher-item:visible .voucher-checkbox');
        var allChecked = visibleVouchers.length === visibleVouchers.filter(':checked').length;
        visibleVouchers.prop('checked', !allChecked);
        updateSelectionCounters();
        filterCustomersBySelectedVouchers();
    }

    function clearAllVouchers() {
        $('.voucher-checkbox').prop('checked', false);
        updateSelectionCounters();
        filterCustomersBySelectedVouchers();
    }

    // VIP customer selection
    function toggleCustomerSelection(customerId, customerName) {
        var $checkbox = $(`#customer_${customerId}`);

        if ($checkbox.length > 0) {
            var $customerItem = $checkbox.closest('.customer-item');
            if ($customerItem.is(':hidden')) {
                showToast(`⚠️ ${customerName} đã có voucher được chọn, không thể chọn!`, 'warning');
                return;
            }

            var isCurrentlyChecked = $checkbox.prop('checked');
            $checkbox.prop('checked', !isCurrentlyChecked);
            updateSelectionCounters();

            var message = isCurrentlyChecked
                ? `✅ Đã bỏ chọn: ${customerName}`
                : `✅ Đã chọn: ${customerName}`;
            showToast(message);
        } else {
            showToast(`❌ Không tìm thấy khách hàng: ${customerName}`, 'error');
        }
    }

    function selectAllVipCustomers() {
        var selectedCount = 0;
        var totalVip = 0;
        var blockedCount = 0;

        $('.vip-customer-item').each(function() {
            var customerId = $(this).data('customer-id');
            var $checkbox = $(`#customer_${customerId}`);

            if ($checkbox.length > 0) {
                totalVip++;
                var $customerItem = $checkbox.closest('.customer-item');

                if ($customerItem.is(':hidden')) {
                    blockedCount++;
                } else if (!$checkbox.prop('checked')) {
                    $checkbox.prop('checked', true);
                    selectedCount++;
                }
            }
        });

        updateSelectionCounters();

        var message = '';
        if (selectedCount > 0) {
            message = `✅ Đã chọn ${selectedCount}/${totalVip} khách hàng VIP`;
        } else if (blockedCount > 0) {
            message = `⚠️ ${blockedCount}/${totalVip} KH VIP đã có voucher được chọn`;
        } else {
            message = `ℹ️ Tất cả ${totalVip} khách hàng VIP đã được chọn`;
        }

        showToast(message, selectedCount > 0 ? 'success' : 'info');
    }

    function clearVipSelection() {
        var deselectedCount = 0;

        $('.vip-customer-item').each(function() {
            var customerId = $(this).data('customer-id');
            var $checkbox = $(`#customer_${customerId}`);

            if ($checkbox.length > 0 && $checkbox.prop('checked')) {
                $checkbox.prop('checked', false);
                deselectedCount++;
            }
        });

        updateSelectionCounters();

        if (deselectedCount > 0) {
            showToast(`✅ Đã bỏ chọn ${deselectedCount} khách hàng VIP`, 'success');
        } else {
            showToast('ℹ️ Không có khách hàng VIP nào được chọn', 'info');
        }
    }

    // Clear form
    function clearForm() {
        $('.customer-checkbox, .voucher-checkbox').prop('checked', false);
        $('#GhiChu').val('');
        $('#searchCustomer, #searchVoucher').val('');
        $('.customer-item, .voucher-item').show();
        $('#filteredCustomerInfo, #filteredVoucherInfo').text('');

        updateSelectionCounters();
        resetSubmitButton();
        showToast('✅ Form đã được làm mới!', 'success');
    }

    // Form submission
    $('#ganVoucherForm').submit(function(e) {
        var customerCount = $('.customer-checkbox:checked').length;
        var voucherCount = $('.voucher-checkbox:checked').length;
        var totalAssignments = customerCount * voucherCount;
        var ghiChu = $('#GhiChu').val().trim();

        resetSubmitButton();

        if (customerCount === 0) {
            showToast('❌ Vui lòng chọn ít nhất một khách hàng!', 'error');
            e.preventDefault();
            return false;
        }

        if (voucherCount === 0) {
            showToast('❌ Vui lòng chọn ít nhất một voucher!', 'error');
            e.preventDefault();
            return false;
        }

        if (ghiChu === '' || ghiChu.length < 5) {
            showToast('❌ Ghi chú phải có ít nhất 5 ký tự!', 'error');
            $('#GhiChu').focus();
            e.preventDefault();
            return false;
        }

        var hasInsufficientStock = false;
        $('.voucher-checkbox:checked').each(function() {
            var availableQuantity = parseInt($(this).closest('.voucher-item').data('quantity')) || 0;
            var neededQuantity = customerCount;
            var voucherName = $(this).closest('.voucher-item').find('strong').text();

            if (availableQuantity < neededQuantity) {
                hasInsufficientStock = true;
                showToast(`❌ Voucher "${voucherName}" không đủ số lượng! Còn: ${availableQuantity}, cần: ${neededQuantity}`, 'error');
            }
        });

        if (hasInsufficientStock) {
            e.preventDefault();
            return false;
        }

        if (totalAssignments > 100) {
            if (!confirm(`⚠️ CẢNH BÁO: Bạn sắp thực hiện ${totalAssignments} lượt gán voucher!\n\nBạn có chắc chắn muốn tiếp tục?`)) {
                e.preventDefault();
                return false;
            }
        }

        $('#btnSubmit').prop('disabled', true)
            .html('<i class="fas fa-spinner fa-spin"></i> Đang xử lý...');

        showToast(`🚀 Bắt đầu gán ${totalAssignments} voucher...`, 'info');
        return true;
    });

    // Load customer-voucher assignments
    function loadCustomerVoucherAssignments() {
        var customerIds = [];
        $('.customer-item').each(function() {
            customerIds.push($(this).data('customer-id'));
        });

        var loadPromises = customerIds.map(function(customerId) {
            return $.ajax({
                url: `/api/GanVoucher/vouchers-by-customer/${customerId}`,
                method: 'GET',
                dataType: 'json'
            }).done(function(vouchers) {
                var voucherIds = vouchers.map(function(v) { return v.ID_Voucher.toString(); });
                customerVoucherAssignments[customerId] = voucherIds;
            }).fail(function() {
                customerVoucherAssignments[customerId] = [];
            });
        });

        Promise.all(loadPromises).finally(function() {
            filterCustomersBySelectedVouchers();
        });
    }

    // Toast notification
    function showToast(message, type = 'success') {
        $('.custom-toast').remove();

        var alertClass = 'alert-success';
        if (type === 'error') alertClass = 'alert-danger';
        else if (type === 'info') alertClass = 'alert-info';
        else if (type === 'warning') alertClass = 'alert-warning';

        var toast = $(`
            <div class="alert ${alertClass} alert-dismissible fade show custom-toast" role="alert" style="position: fixed; top: 20px; right: 20px; z-index: 9999; min-width: 300px;">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            </div>
        `);

        $('body').append(toast);

        setTimeout(function() {
            toast.fadeOut('slow', function() {
                $(this).remove();
            });
        }, 3000);
    }

    // Reset button if server error
    @if (TempData["Error"] != null || TempData["Warning"] != null)
    {
            <text>
            setTimeout(function() {
                resetSubmitButton();
            }, 100);
            </text>
    }

    setTimeout(function() {
        $('.alert').not('.custom-toast').fadeOut('slow');
    }, 10000);
</script>

<style>
    .customer-list, .voucher-list {
        background-color: #f8f9fa;
    }

    .form-check {
        padding: 8px 12px;
        margin-bottom: 0;
        border-bottom: 1px solid #e9ecef;
        transition: all 0.2s ease;
    }

        .form-check:hover {
            background-color: #e3f2fd;
        }

        .form-check:last-child {
            border-bottom: none;
        }

    .form-check-input:checked + .form-check-label {
        background-color: #d4edda;
        border-radius: 4px;
        padding: 4px 8px;
        margin: -4px -8px;
    }

    .form-check-label {
        cursor: pointer;
        user-select: none;
    }

    .customer-item[style*="display: none"],
    .voucher-item[style*="display: none"] {
        display: none !important;
    }

    .vip-customer {
        background-color: #fff9e6;
        border-left: 3px solid #ffd700;
    }

        .vip-customer:hover {
            background-color: #fff3cd;
        }

    .badge {
        font-size: 0.7em;
        padding: 0.25em 0.5em;
    }

        .badge.bg-warning {
            color: #000 !important;
        }

    #searchCustomer, #searchVoucher {
        border: 2px solid #e9ecef;
        transition: all 0.3s ease;
        font-size: 14px;
    }

        #searchCustomer:focus, #searchVoucher:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
            outline: none;
        }

    .btn-sm {
        font-size: 0.8em;
    }

    .alert {
        border-radius: 12px;
        border: none;
        box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        margin-bottom: 20px;
    }

    .alert-success {
        background: linear-gradient(135deg, #d4edda 0%, #c3e6cb 100%);
        border-left: 5px solid #28a745;
    }

    .alert-warning {
        background: linear-gradient(135deg, #fff3cd 0%, #ffeeba 100%);
        border-left: 5px solid #ffc107;
    }

    .alert-danger {
        background: linear-gradient(135deg, #f8d7da 0%, #f5c6cb 100%);
        border-left: 5px solid #dc3545;
    }

    .alert-info {
        background: linear-gradient(135deg, #d1ecf1 0%, #bee5eb 100%);
        border-left: 5px solid #17a2b8;
    }

    .vip-customer-item {
        transition: all 0.3s ease;
    }

        .vip-customer-item.bg-light {
            background-color: #e7f3ff !important;
            border-left: 4px solid #007bff;
        }

    .toggle-customer-btn {
        transition: all 0.2s ease;
        min-width: 35px;
    }

        .toggle-customer-btn:hover {
            transform: scale(1.1);
        }

    .custom-toast {
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        border-radius: 8px;
    }

    code {
        background-color: #e9ecef;
        padding: 2px 4px;
        border-radius: 3px;
        font-size: 0.85em;
    }

    @@media (max-width: 768px) {
        .col-md-6

    {
        width: 100%;
        margin-bottom: 10px;
    }

    .customer-list, .voucher-list {
        max-height: 200px !important;
    }

    .custom-toast {
        position: fixed !important;
        top: 10px !important;
        left: 10px !important;
        right: 10px !important;
        min-width: auto !important;
    }

    .d-flex.gap-2 {
        flex-direction: column;
        gap: 0.5rem !important;
    }

    .flex-fill {
        width: 100% !important;
    }

    }
</style>