@model IEnumerable<BE.models.NhanVien>
@{
    ViewData["Title"] = "Danh sách nhân viên";
    Layout = "_AdminLayout";
}

<style>
    .card-nhanvien {
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .table-nhanvien {
        font-size: 0.9rem;
        margin-bottom: 0;
    }

    .table-nhanvien thead {
        background: linear-gradient(180deg, #1e3a8a, #3b82f6);
        color: white;
    }

    .table-nhanvien tr {
        transition: background-color 0.3s ease, transform 0.2s ease;
    }

    .table-nhanvien tbody tr:hover {
        background-color: rgba(59, 130, 246, 0.1);
        transform: translateX(5px);
    }

    .btn-sm {
        padding: 0.25rem 0.5rem;
        font-size: 0.8rem;
        transition: all 0.3s ease;
    }

    .btn-sm:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    }

    .btn-success, .btn-info, .btn-warning, .btn-danger {
        border: none;
    }

    .badge {
        font-size: 0.75rem;
        padding: 0.4em 0.6em;
    }

    .text-primary {
        color: #1e3a8a !important;
    }

    .card-header {
        background: linear-gradient(180deg, #1e3a8a, #3b82f6);
        color: white;
        border-bottom: none;
    }

    /* Search and Filter Styles */
    .search-filter {
        margin-bottom: 1rem;
        display: flex;
        gap: 1rem;
    }

    /* Modal styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 1000;
    }

    .modal-content {
        background-color: white;
        margin: 15% auto;
        padding: 20px;
        border-radius: 8px;
        width: 40%;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        position: relative;
    }

    .close {
        position: absolute;
        right: 10px;
        top: 10px;
        font-size: 24px;
        cursor: pointer;
    }
</style>

<div class="card card-nhanvien">
    <div class="card-header">
        <h2 class="text-center my-2">Danh sách nhân viên</h2>
    </div>
    <div class="card-body p-3">
        <div class="search-filter mb-3">
            <input type="text" id="searchTerm" class="form-control" placeholder="Tìm theo họ tên..." value="@ViewBag.SearchTerm" />
            <button id="filterBtn" class="btn btn-primary btn-sm">Lọc</button>
            <a asp-action="Create" class="btn btn-success btn-sm ms-auto"><i class="fas fa-plus me-1"></i> Thêm nhân viên</a>
        </div>
        <table class="table table-striped table-hover table-bordered table-nhanvien">
            <thead class="text-center">
                <tr>
                    <th>Họ tên</th>
                    <th>Email</th>
                    <th>SĐT</th>
                    <th>Giới tính</th>
                    <th>Năm sinh</th>
                    <th>Trạng thái</th>
                    <th>Ảnh</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody class="align-middle">
                @if (Model.Any())
                {
                    @foreach (var nv in Model)
                    {
                        <tr data-id="@nv.ID_Nhan_Vien" class="detail-trigger">
                            <td>@nv.Ho_Ten</td>
                            <td>@nv.Email</td>
                            <td>@nv.So_Dien_Thoai</td>
                            <td>@(nv.GioiTinh == true ? "Nam" : nv.GioiTinh == false ? "Nữ" : "Khác")</td>
                            <td>@(nv.NamSinh)</td>
                            <td class="text-center">
                                <span class="badge bg-@(nv.Trang_Thai == true ? "success" : "secondary")">
                                    @(nv.Trang_Thai == true ? "Đang làm" : "Nghỉ")
                                </span>
                            </td>
                            <td class="text-center">
                                @if (!string.IsNullOrEmpty(nv.AnhNhanVien))
                                {
                                    <img src="@nv.AnhNhanVien" alt="Ảnh nhân viên" style="width: 40px; height: 40px; object-fit: cover; border-radius: 50%;" />
                                }
                                else
                                {
                                    <span class="text-muted">Chưa có</span>
                                }
                            </td>
                            <td class="text-center">
                                <a asp-action="Edit" asp-route-id="@nv.ID_Nhan_Vien" class="btn btn-sm btn-warning"><i class="fas fa-edit"></i> Sửa</a>
                                <form asp-action="Delete" asp-route-id="@nv.ID_Nhan_Vien" method="post" style="display:inline-block" onsubmit="return confirm('Bạn có chắc muốn xoá?');">
                                    <button class="btn btn-sm btn-danger"><i class="fas fa-trash"></i> Xoá</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
        <!-- Pagination Controls -->
        @{
            var totalPages = ViewBag.TotalPages ?? 1;
            var currentPage = ViewBag.CurrentPage ?? 1;
            var pageSize = ViewBag.PageSize ?? 10;
            var searchTerm = ViewBag.SearchTerm ?? "";
            var statusFilter = ViewBag.StatusFilter;
        }
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center mt-3">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchTerm, statusFilter, page = currentPage - 1, pageSize })">Trước</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { searchTerm, statusFilter, page = i, pageSize })">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchTerm, statusFilter, page = currentPage + 1, pageSize })">Sau</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Modal -->
<div id="detailModal" class="modal">
    <div class="modal-content">
        <span class="close">&times;</span>
        <h3>Thông tin chi tiết</h3>
        <div id="modalBody"></div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const modal = document.getElementById('detailModal');
            const closeBtn = document.querySelector('.close');
            const detailTriggers = document.querySelectorAll('.detail-trigger');
            const searchInput = document.getElementById('searchTerm');
            const statusFilter = document.getElementById('statusFilter');
            const filterBtn = document.getElementById('filterBtn');

            detailTriggers.forEach(trigger => {
                trigger.addEventListener('click', function () {
                    const id = this.getAttribute('data-id');
                    document.getElementById('modalBody').innerHTML = "Đang tải...";
                    fetch(`/NhanVien/Details/${id}`)
                        .then(response => response.text())
                        .then(data => {
                            document.getElementById('modalBody').innerHTML = data;
                            modal.style.display = 'block';
                        })
                        .catch(error => console.error('Lỗi:', error));
                });
            });

            closeBtn.addEventListener('click', function () {
                modal.style.display = 'none';
            });

            window.addEventListener('click', function (event) {
                if (event.target == modal) {
                    modal.style.display = 'none';
                }
            });

            filterBtn.addEventListener('click', function () {
                const searchTerm = searchInput.value;
                const statusFilterValue = statusFilter.value === "" ? null : statusFilter.value === "true";
                window.location.href = `@Url.Action("Index", "NhanVien")?searchTerm=${searchTerm}&statusFilter=${statusFilterValue}&page=1&pageSize=${@pageSize}`;
            });

            searchInput.addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                    filterBtn.click();
                }
            });
        });
    </script>
}
