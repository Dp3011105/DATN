@* 
@model List<FE.Models.DonHangTK>

@{
    ViewData["Title"] = "Quản Lý Đơn Hàng";
    var statusDisplay = new Dictionary<string, string>
    {
        { "Chua_Xac_Nhan", "Chưa Xác Nhận" },
        { "Da_Xac_Nhan", "Đã Xác Nhận" },
        { "Dang_Giao_Hang", "Đang Giao Hàng" },
        { "Hoan_Thanh", "Hoàn Thành" },
        { "Huy_Don", "Hủy Đơn" }
    };
    var currentStatus = ViewBag.CurrentStatus as string;
    var idKhachHang = ViewBag.ID_Khach_Hang;
}

<div class="container mt-5">
    <h2 class="text-center mb-4 fw-bold text-primary">Quản Lý Đơn Hàng Cá Nhân</h2>

    <!-- Filter Section -->
    <div class="card mb-4 shadow-sm border-0 rounded">
        <div class="card-body">
            <h5 class="mb-3">Lọc theo trạng thái:</h5>
            <div class="btn-group d-flex flex-wrap gap-2" role="group">
                <a class="btn btn-outline-primary @(string.IsNullOrEmpty(currentStatus) ? "active" : "")" asp-action="Index">Tất cả</a>
                @foreach (var status in statusDisplay)
                {
                    <a class="btn btn-outline-primary @(currentStatus == status.Key ? "active" : "")" asp-action="Index" asp-route-status="@status.Key">@status.Value</a>
                }
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="card shadow-sm border-0 rounded">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="bg-primary text-white">
                            <tr>
                                <th class="ps-4">Mã Đơn Hàng</th>
                                <th>Ngày Tạo</th>
                                <th>Tổng Tiền</th>
                                <th>Trạng Thái</th>
                                <th>Phương Thức Thanh Toán</th>
                                <th class="pe-4">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td class="ps-4">@order.Ma_Hoa_Don</td>
                                    <td>@order.Ngay_Tao.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@order.Tong_Tien.ToString("N0") VNĐ</td>
                                    <td>@(statusDisplay.ContainsKey(order.Trang_Thai) ? statusDisplay[order.Trang_Thai] : order.Trang_Thai)</td>
                                    <td>@order.Phuong_Thuc_Thanh_Toan</td>
                                    <td class="pe-4">
                                        <a class="btn btn-primary btn-sm me-2" asp-action="Details" asp-route-id="@order.ID_Hoa_Don">
                                            <i class="fas fa-eye me-1"></i> Chi tiết
                                        </a>
                                        @if (order.Trang_Thai == "Chua_Xac_Nhan")
                                        {
                                            <button class="btn btn-danger btn-sm cancel-order-btn" data-id="@order.ID_Hoa_Don" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">
                                                <i class="fas fa-times me-1"></i> Hủy đơn Hàng 
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm border-0 rounded">
            <div class="card-body text-center text-muted">
                <p>Bạn chưa có đơn hàng nào trong trạng thái này.</p>
            </div>
        </div>
    }
</div>

<!-- Modal for Cancel Order -->
<div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="cancelOrderModalLabel">Hủy Đơn Hàng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="cancelOrderForm">
                    <input type="hidden" id="orderId" name="idHoaDon" />
                    <input type="hidden" id="idKhachHang" name="idKhachHang" value="@idKhachHang" />
                    <div class="mb-3">
                        <label for="lyDoHuyDon" class="form-label">Lý do hủy đơn hàng</label>
                        <textarea class="form-control" id="lyDoHuyDon" name="lyDoHuyDon" rows="4" placeholder="Vui lòng nhập lý do hủy..." required></textarea>
                    </div>
                    <button type="submit" class="btn btn-danger w-100">
                        <i class="fas fa-check me-1"></i> Xác nhận hủy
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.cancel-order-btn').click(function () {
                const orderId = $(this).data('id');
                $('#orderId').val(orderId);
            });

            $('#cancelOrderForm').submit(function (e) {
                e.preventDefault();
                const orderId = $('#orderId').val();
                const idKhachHang = $('#idKhachHang').val();
                const lyDoHuyDon = $('#lyDoHuyDon').val();

                // Kiểm tra dữ liệu đầu vào
                if (!lyDoHuyDon) {
                    alert('Vui lòng nhập lý do hủy đơn hàng.');
                    return;
                }

                if (!idKhachHang || isNaN(parseInt(idKhachHang))) {
                    alert('Không thể xác định ID Khách Hàng. Vui lòng đăng nhập lại.');
                    return;
                }

                if (!orderId || isNaN(parseInt(orderId))) {
                    alert('Không thể xác định ID Đơn Hàng. Vui lòng thử lại.');
                    return;
                }

                const data = {
                    iD_Hoa_Don: parseInt(orderId),
                    iD_Khach_Hang: parseInt(idKhachHang),
                    lyDoHuyDon: lyDoHuyDon
                };

                $.ajax({
                    url: 'https://localhost:7169/api/DonHangTK/huy',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        alert('Hủy đơn hàng thành công!');
                        $('#cancelOrderModal').modal('hide');
                        location.reload();
                    },
                    error: function (xhr) {
                        const errorMessage = xhr.responseJSON?.message || 'Đã có lỗi xảy ra khi hủy đơn hàng.';
                        alert(errorMessage);
                    }
                });
            });
        });
    </script>
}

<style>
    .table th, .table td {
        vertical-align: middle;
    }

    .table thead {
        background: linear-gradient(135deg, #007bff, #00c4ff);
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .btn-outline-primary.active {
        background-color: #007bff;
        color: white;
        border-color: #007bff;
    }

    .card {
        transition: transform 0.2s ease;
    }

        .card:hover {
            transform: translateY(-5px);
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
        }

    .btn-sm {
        padding: 0.25rem 0.75rem;
        font-size: 0.875rem;
    }

    .modal-content {
        border-radius: 10px;
    }

    .modal-header {
        border-top-left-radius: 10px;
        border-top-right-radius: 10px;
    }
</style> *@






@model List<FE.Models.DonHangTK>

@{
    ViewData["Title"] = "Quản Lý Đơn Hàng";
    var statusDisplay = new Dictionary<string, string>
    {
        { "Chua_Xac_Nhan", "Chưa Xác Nhận" },
        { "Da_Xac_Nhan", "Đã Xác Nhận" },
        { "Dang_Giao_Hang", "Đang Giao Hàng" },
        { "Hoan_Thanh", "Hoàn Thành" },
        { "Huy_Don", "Hủy Đơn" },
        { "Chua_Thanh_Toan", "Chưa Thanh Toán" }
    };
    var currentStatus = ViewBag.CurrentStatus as string;
    var idKhachHang = ViewBag.ID_Khach_Hang;
}

<div class="container mt-5">
    <h2 class="text-center mb-4 fw-bold text-primary">Quản Lý Đơn Hàng Cá Nhân</h2>

    <!-- Filter Section -->
    <div class="card mb-4 shadow-sm border-0 rounded-3">
        <div class="card-body">
            <h5 class="mb-3 text-dark fw-semibold">Lọc theo trạng thái:</h5>
            <div class="btn-group d-flex flex-wrap gap-2" role="group">
                <a class="btn btn-outline-primary rounded-pill px-4 py-2 @(string.IsNullOrEmpty(currentStatus) ? "active" : "")" asp-action="Index">Tất cả</a>
                @foreach (var status in statusDisplay.Where(s => s.Key != "Chua_Thanh_Toan"))
                {
                    <a class="btn btn-outline-primary rounded-pill px-4 py-2 @(currentStatus == status.Key ? "active" : "")" asp-action="Index" asp-route-status="@status.Key">@status.Value</a>
                }
            </div>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="card shadow-sm border-0 rounded-3">
            <div class="card-body p-0">
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="bg-gradient text-white">
                            <tr>
                                <th class="ps-4">Mã Đơn Hàng</th>
                                <th>Ngày Tạo</th>
                                <th>Tổng Tiền</th>
                                <th>Trạng Thái</th>
                                <th>Phương Thức Thanh Toán</th>
                                <th class="pe-4">Thao Tác</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var order in Model)
                            {
                                <tr>
                                    <td class="ps-4">@order.Ma_Hoa_Don</td>
                                    <td>@order.Ngay_Tao.ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@order.Tong_Tien.ToString("N0") VNĐ</td>
                                    <td>
                                        <span class="badge @GetBadgeClass(order.Trang_Thai)">
                                            @(statusDisplay.ContainsKey(order.Trang_Thai) ? statusDisplay[order.Trang_Thai] : order.Trang_Thai)
                                        </span>
                                    </td>
                                    <td>@order.Phuong_Thuc_Thanh_Toan</td>
                                    <td class="pe-4">
                                        <a class="btn btn-primary btn-sm me-2 rounded-pill" asp-action="Details" asp-route-id="@order.ID_Hoa_Don">
                                            <i class="fas fa-eye me-1"></i> Chi tiết
                                        </a>
                                        @if (order.Trang_Thai == "Chua_Xac_Nhan")
                                        {
                                            <button class="btn btn-danger btn-sm rounded-pill cancel-order-btn" data-id="@order.ID_Hoa_Don" data-bs-toggle="modal" data-bs-target="#cancelOrderModal">
                                                <i class="fas fa-times me-1"></i> Hủy Đơn
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card shadow-sm border-0 rounded-3 text-center">
            <div class="card-body py-5 text-muted">
                <i class="fas fa-shopping-cart fa-2x mb-3 text-primary"></i>
                <p class="fs-5">Bạn chưa có đơn hàng nào trong trạng thái này.</p>
            </div>
        </div>
    }

    <!-- Toast Notification -->
    <div class="toast-container position-fixed top-0 end-0 p-3" style="margin-top: 80px; z-index: 1055;">
        <div id="successToast" class="toast align-items-center text-white bg-success border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-check-circle me-2"></i> Hủy đơn hàng thành công!
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
        <div id="errorToast" class="toast align-items-center text-white bg-danger border-0" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="d-flex">
                <div class="toast-body">
                    <i class="fas fa-exclamation-circle me-2"></i> <span id="errorMessage">Đã có lỗi xảy ra khi hủy đơn hàng.</span>
                </div>
                <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
        </div>
    </div>
</div>

<!-- Modal for Cancel Order -->
<div class="modal fade" id="cancelOrderModal" tabindex="-1" aria-labelledby="cancelOrderModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content rounded-3">
            <div class="modal-header bg-danger text-white rounded-top-3">
                <h5 class="modal-title fw-bold" id="cancelOrderModalLabel">Hủy Đơn Hàng</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-4">
                <form id="cancelOrderForm">
                    <input type="hidden" id="orderId" name="idHoaDon" />
                    <input type="hidden" id="idKhachHang" name="idKhachHang" value="@idKhachHang" />
                    <div class="mb-3">
                        <label for="lyDoHuyDon" class="form-label fw-semibold">Lý do hủy đơn hàng</label>
                        <textarea class="form-control rounded-3" id="lyDoHuyDon" name="lyDoHuyDon" rows="4" placeholder="Vui lòng nhập lý do hủy..." required></textarea>
                    </div>
                    <button type="submit" class="btn btn-danger w-100 rounded-pill" id="submitCancelBtn">
                        <span id="btnText"><i class="fas fa-check me-2"></i> Xác nhận hủy</span>
                        <span id="btnLoading" style="display: none;">
                            <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span> Đang xử lý...
                        </span>
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.cancel-order-btn').click(function () {
                const orderId = $(this).data('id');
                $('#orderId').val(orderId);
            });

            $('#cancelOrderForm').submit(function (e) {
                e.preventDefault();
                const orderId = $('#orderId').val();
                const idKhachHang = $('#idKhachHang').val();
                const lyDoHuyDon = $('#lyDoHuyDon').val();
                const submitBtn = $('#submitCancelBtn');
                const btnText = $('#btnText');
                const btnLoading = $('#btnLoading');

                if (!lyDoHuyDon) {
                    showErrorToast('Vui lòng nhập lý do hủy đơn hàng.');
                    return;
                }

                if (!idKhachHang || isNaN(parseInt(idKhachHang))) {
                    showErrorToast('Không thể xác định ID Khách Hàng. Vui lòng đăng nhập lại.');
                    return;
                }

                if (!orderId || isNaN(parseInt(orderId))) {
                    showErrorToast('Không thể xác định ID Đơn Hàng. Vui lòng thử lại.');
                    return;
                }

                // Show loading state
                submitBtn.prop('disabled', true);
                btnText.hide();
                btnLoading.show();

                const data = {
                    iD_Hoa_Don: parseInt(orderId),
                    iD_Khach_Hang: parseInt(idKhachHang),
                    lyDoHuyDon: lyDoHuyDon
                };

                $.ajax({
                    url: 'https://localhost:7169/api/DonHangTK/huy',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function (response) {
                        showSuccessToast();
                        $('#cancelOrderModal').modal('hide');
                        setTimeout(() => location.reload(), 1500);
                    },
                    error: function (xhr) {
                        const errorMessage = xhr.responseJSON?.message || 'Đã có lỗi xảy ra khi hủy đơn hàng.';
                        showErrorToast(errorMessage);
                    },
                    complete: function () {
                        // Reset button state
                        submitBtn.prop('disabled', false);
                        btnText.show();
                        btnLoading.hide();
                    }
                });
            });

            function showSuccessToast() {
                const toast = new bootstrap.Toast(document.getElementById('successToast'), { animation: true, autohide: true, delay: 3000 });
                toast.show();
            }

            function showErrorToast(message) {
                $('#errorMessage').text(message);
                const toast = new bootstrap.Toast(document.getElementById('errorToast'), { animation: true, autohide: true, delay: 3000 });
                toast.show();
            }
        });
    </script>
}

<style>
    .bg-gradient {
        background: linear-gradient(135deg, #007bff, #00c4ff);
    }

    .table th, .table td {
        vertical-align: middle;
        padding: 12px;
    }

    .table tbody tr:hover {
        background-color: #f8f9fa;
    }

    .btn-outline-primary {
        border-width: 2px;
        transition: background-color 0.3s ease, color 0.3s ease;
    }

        .btn-outline-primary:hover, .btn-outline-primary.active {
            background-color: #007bff;
            color: white;
            border-color: #007bff;
        }

    .btn-primary, .btn-danger {
        transition: background-color 0.3s ease;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .btn-danger:hover {
            background-color: #c82333;
        }

    .card {
        transition: box-shadow 0.3s ease;
    }

        .card:hover {
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

    .modal-content {
        border-radius: 8px;
        overflow: hidden;
    }

    .modal-header {
        border: none;
    }

    .badge {
        padding: 6px 10px;
        font-size: 0.85rem;
        font-weight: 500;
        border-radius: 12px;
    }

    .badge-chua-xac-nhan {
        background-color: #ffc107;
        color: #333;
    }

    .badge-da-xac-nhan {
        background-color: #17a2b8;
        color: white;
    }

    .badge-dang-giao-hang {
        background-color: #fd7e14;
        color: white;
    }

    .badge-hoan-thanh {
        background-color: #28a745;
        color: white;
    }

    .badge-huy-don {
        background-color: #dc3545;
        color: white;
    }

    .badge-chua-thanh-toan {
        background-color: #6c757d;
        color: white;
    }

    .toast {
        transition: transform 0.3s ease;
        transform: translateX(100%);
    }

        .toast.show {
            transform: translateX(0);
        }

    import url('https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css');
</style>

@functions {
    string GetBadgeClass(string status)
    {
        return status switch
        {
            "Chua_Xac_Nhan" => "badge-chua-xac-nhan",
            "Da_Xac_Nhan" => "badge-da-xac-nhan",
            "Dang_Giao_Hang" => "badge-dang-giao-hang",
            "Hoan_Thanh" => "badge-hoan-thanh",
            "Huy_Don" => "badge-huy-don",
            "Chua_Thanh_Toan" => "badge-chua-thanh-toan",
            _ => "badge-secondary"
        };
    }
}