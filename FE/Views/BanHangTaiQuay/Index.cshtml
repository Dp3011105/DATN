@using System.Text.Json
@using FE.Models
@{
    ViewData["Title"] = "Bán hàng tại quầy";

    // Giữ nguyên tên property như từ BE
    var jsonOpt = new JsonSerializerOptions { PropertyNamingPolicy = null, WriteIndented = false };

    var productsJson = JsonSerializer.Serialize(ViewBag.Products ?? new List<SanPham>(), jsonOpt);
    var doNgotsJson = JsonSerializer.Serialize(ViewBag.DoNgots ?? new List<DoNgot>(), jsonOpt);
    var luongDasJson = JsonSerializer.Serialize(ViewBag.LuongDas ?? new List<LuongDa>(), jsonOpt);
    var toppingsJson = JsonSerializer.Serialize(ViewBag.Toppings ?? new List<Topping>(), jsonOpt);
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .pos-wrap {
        display: grid;
        grid-template-columns: 1fr 420px;
        gap: 1rem
    }

    .product-card {
        border: 1px solid #eee;
        border-radius: 10px;
        padding: .5rem;
        cursor: pointer;
        transition: .2s
    }

        .product-card:hover {
            box-shadow: 0 2px 10px rgba(0,0,0,.08)
        }

    .product-img {
        width: 100%;
        aspect-ratio: 1/1;
        object-fit: cover;
        border-radius: 8px;
        background: #f7f7f7
    }

    .cart-item {
        border-bottom: 1px dashed #e5e5e5;
        padding: .5rem 0
    }

    .chip {
        display: inline-block;
        border: 1px solid #ddd;
        border-radius: 999px;
        padding: .1rem .5rem;
        margin-right: .25rem;
        font-size: .8rem
    }

    .money {
        font-weight: 600
    }
</style>

<div class="container-fluid py-3">
    <h3 class="mb-3">Bán hàng tại quầy</h3>

    <div class="pos-wrap">
        <!-- LEFT: danh sách sản phẩm -->
        <div>
            <div class="d-flex gap-2 mb-2">
                <input id="txtSearch" class="form-control" style="max-width:360px" placeholder="Tìm sản phẩm... (tên/mã)">
                <button class="btn btn-secondary" onclick="searchProducts(1)">Tìm</button>
                <button class="btn btn-outline-secondary" onclick="resetSearch()">Xoá</button>
            </div>
            <div id="gridProducts" class="row g-2"></div>
            <div class="mt-2 d-flex align-items-center gap-2">
                <button class="btn btn-sm btn-outline-primary" onclick="prevPage()">«</button>
                <span id="lblPage" class="small text-muted"></span>
                <button class="btn btn-sm btn-outline-primary" onclick="nextPage()">»</button>
            </div>
        </div>

        <!-- RIGHT: giỏ hàng -->
        <div>
            <div class="card p-3">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Giỏ hàng</h5>
                    <button class="btn btn-sm btn-outline-danger" onclick="clearCart()">Xoá giỏ</button>
                </div>

                <div id="cartList" class="mt-2"></div>

                <div class="mt-2">
                    <div class="mb-2">
                        <label class="form-label mb-1">Mã voucher</label>
                        <div class="d-flex gap-2">
                            <input id="txtVoucher" class="form-control" placeholder="Nhập mã voucher">
                            <button class="btn btn-outline-primary" onclick="applyVoucher()">Áp dụng</button>
                        </div>
                        <small id="voucherMsg" class="text-muted"></small>
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">SĐT khách (tuỳ chọn)</label>
                        <input id="txtPhone" class="form-control" placeholder="VD: 09xxxxxxxx">
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Hình thức thanh toán</label>
                        <!-- GIÁ TRỊ 1/2/3 PHẢI TRÙNG DB -->
                        <select id="selPay" class="form-select">
                            <option value="1">Tiền mặt</option>
                            <option value="2">Thẻ</option>
                            <option value="3">Chuyển khoản</option>
                        </select>
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Loại hoá đơn</label>
                        <select id="selLoai" class="form-select">
                            <option value="TaiQuay" selected>Tại quầy</option>
                            <option value="Online">Online</option>
                            <option value="GiaoHang">Giao hàng</option>
                        </select>
                    </div>

                    <div class="mb-2">
                        <label class="form-label mb-1">Ghi chú</label>
                        <textarea id="txtNote" class="form-control" rows="2" placeholder="Ghi chú đơn..."></textarea>
                    </div>

                    <div class="d-flex justify-content-between">
                        <span>Tạm tính</span><span class="money" id="lblTamTinh">0</span>
                    </div>
                    <div class="d-flex justify-content-between">
                        <span>Giảm</span><span class="money text-danger" id="lblGiam">0</span>
                    </div>
                    <div class="d-flex justify-content-between fs-5 mt-1">
                        <strong>Thanh toán</strong><strong id="lblThanhToan">0</strong>
                    </div>

                    <button class="btn btn-success w-100 mt-3" onclick="taoHoaDon()">Tạo hoá đơn</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal cấu hình item -->
<div class="modal fade" id="modalItem" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable">
        <div class="modal-content">
            <div class="modal-header">
                <h5 id="mdlTitle" class="modal-title">Tùy chọn</h5>
                <button class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="mdlIndex" />
                <div class="mb-2">
                    <label class="form-label">Độ ngọt</label>
                    <select id="mdlDoNgot" class="form-select"></select>
                </div>
                <div class="mb-2">
                    <label class="form-label">Lượng đá</label>
                    <select id="mdlLuongDa" class="form-select"></select>
                </div>
                <div class="mb-2">
                    <label class="form-label">Topping</label>
                    <div id="mdlToppings" class="d-flex flex-wrap gap-2"></div>
                </div>
                <div class="mb-2">
                    <label class="form-label">Số lượng</label>
                    <input id="mdlQty" type="number" min="1" class="form-control" />
                </div>
                <div class="text-end">
                    <div>Đơn giá: <span class="money" id="mdlDonGia">0</span></div>
                    <div>Topping: <span class="money" id="mdlTienTop">0</span></div>
                    <div>Tạm tính: <span class="money" id="mdlTamTinh">0</span></div>
                </div>
            </div>
            <div class="modal-footer">
                <button class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button class="btn btn-primary" onclick="saveItemConfig()">Lưu</button>
            </div>
        </div>
    </div>
</div>

<script>
    // ===== seed từ server
    window.__DATA = {
      products: @Html.Raw(productsJson),
      doNgots : @Html.Raw(doNgotsJson),
      luongDas: @Html.Raw(luongDasJson),
      toppings: @Html.Raw(toppingsJson)
    };
</script>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    const BE_BASE = "https://localhost:7169";
    const imgUrl = path => {
      if (!path) return "https://placehold.co/400x400?text=Drink";
      path = String(path).replace(/^~\//, "/");
      if (path.startsWith("http")) return path;
      return BE_BASE + (path.startsWith("/") ? "" : "/") + path;
    };

    // ===== STATE
    let PAGE=1, PAGE_SIZE=12, TOTAL=0;
    let SOURCE   = window.__DATA.products || [];
    let FILTERED = SOURCE.slice();
    const OPTIONS = {
      doNgots : window.__DATA.doNgots  || [],
      luongDas: window.__DATA.luongDas || [],
      toppings: window.__DATA.toppings || []
    };
    let CART = [];
    let VOUCHER=null, DISCOUNT=0;

    // ===== UTILS
    const fmtVND = n => { try { return (n||0).toLocaleString('vi-VN',{style:'currency',currency:'VND'}) } catch { return n } };
    const resetSearch = ()=>{ document.getElementById('txtSearch').value=''; searchProducts(1); };
    const prevPage = ()=>{ if(PAGE>1) searchProducts(PAGE-1) };
    const nextPage = ()=>{ if(PAGE<Math.ceil(TOTAL/PAGE_SIZE)) searchProducts(PAGE+1) };

    // ===== GRID
    function searchProducts(page){
      PAGE = page||1;
      const q = (document.getElementById('txtSearch').value||'').trim().toLowerCase();

      FILTERED = !q ? SOURCE.slice() :
        SOURCE.filter(p =>
          (p.Ten_San_Pham||'').toLowerCase().includes(q) ||
          ((p.Ma_San_Pham||('SP'+p.ID_San_Pham))).toLowerCase().includes(q)
        );

      TOTAL = FILTERED.length;
      const grid = document.getElementById('gridProducts');
      grid.innerHTML = '';
      const start=(PAGE-1)*PAGE_SIZE;

      FILTERED.slice(start,start+PAGE_SIZE).forEach(p=>{
        const col = document.createElement('div'); col.className='col-6 col-md-4 col-lg-3';
        const gia = p.Gia ?? 0;
        const ma  = p.Ma_San_Pham || ('SP' + p.ID_San_Pham);
        const img = imgUrl(p.Hinh_Anh || p.Hinh || p.ImageUrl);

        col.innerHTML = `
          <div class="product-card" onclick='addToCart(${JSON.stringify(p.ID_San_Pham)},${JSON.stringify(p.Ten_San_Pham)},${JSON.stringify(gia)})'>
            <img class="product-img" src="${img}" onerror="this.src='https://placehold.co/400x400?text=Drink';" />
            <div class="mt-1 fw-semibold">${p.Ten_San_Pham||''}</div>
            <div class="text-muted small">${ma}</div>
            <div class="money">${fmtVND(gia)}</div>
          </div>`;
        grid.appendChild(col);
      });

      document.getElementById('lblPage').textContent = `Trang ${PAGE} / ${Math.max(1, Math.ceil(TOTAL/PAGE_SIZE))}`;
    }

    // ===== CART
    function addToCart(id, name, price){
      CART.push({ sanPhamId:id, ten:name, donGia:price, soLuong:1, doNgotId:null, luongDaId:null, toppingIds:[], tienTopping:0 });
      renderCart();
    }
    const removeItem = i => { CART.splice(i,1); renderCart(); };
    const decQty = i => { if(CART[i].soLuong>1){ CART[i].soLuong--; renderCart(); } };
    const incQty = i => { CART[i].soLuong++; renderCart(); };
    const setQty = (i,val) => { let v=parseInt(val)||1; if(v<1)v=1; CART[i].soLuong=v; renderCart(); };

    function openConfig(idx){
      const it = CART[idx];
      document.getElementById('mdlIndex').value = idx;
      document.getElementById('mdlTitle').textContent = it.ten;

      // Độ ngọt
      const selSweet = document.getElementById('mdlDoNgot');
      selSweet.innerHTML = (OPTIONS.doNgots||[]).map(d=>`<option value="${d.ID_DoNgot}" ${it.doNgotId==d.ID_DoNgot?'selected':''}>${d.Muc_Do}</option>`).join('');

      // Lượng đá
      const selIce = document.getElementById('mdlLuongDa');
      selIce.innerHTML = (OPTIONS.luongDas||[]).map(d=>{
        const label = d.Ten_LuongDa || d.Muc_Da || '';
        return `<option value="${d.ID_LuongDa}" ${it.luongDaId==d.ID_LuongDa?'selected':''}>${label}</option>`;
      }).join('');

      // Topping
      const topWrap = document.getElementById('mdlToppings');
      topWrap.innerHTML = '';
      (OPTIONS.toppings||[]).forEach(t=>{
        const gia = t.Gia ?? t.Gia_Topping ?? 0;
        const name= t.Ten ?? t.Ten_Topping ?? '';
        const div = document.createElement('div');
        div.innerHTML = `
          <label class="chip">
            <input type="checkbox" class="form-check-input me-1" value="${t.ID_Topping}" data-price="${gia}" ${it.toppingIds.includes(t.ID_Topping)?'checked':''}>
            ${name} (+${fmtVND(gia)})
          </label>`;
        topWrap.appendChild(div);
      });

      document.getElementById('mdlQty').value = it.soLuong;
      calcModalMoney();
      new bootstrap.Modal(document.getElementById('modalItem')).show();
    }

    function calcModalMoney(){
      const idx = +document.getElementById('mdlIndex').value;
      const it  = CART[idx];
      const qty = +document.getElementById('mdlQty').value || 1;
      let top = 0;
      document.querySelectorAll('#mdlToppings input[type="checkbox"]').forEach(ch=>{
        if(ch.checked){ top += parseFloat(ch.getAttribute('data-price')||'0'); }
      });
      document.getElementById('mdlDonGia').textContent  = fmtVND(it.donGia);
      document.getElementById('mdlTienTop').textContent = fmtVND(top);
      document.getElementById('mdlTamTinh').textContent = fmtVND((it.donGia + top) * qty);
    }
    document.addEventListener('change', e=>{
      if(e.target.closest('#mdlToppings') || e.target.id==='mdlQty'){ calcModalMoney(); }
    });

    function saveItemConfig(){
      const idx = +document.getElementById('mdlIndex').value;
      const it  = CART[idx];
      it.doNgotId  = parseInt(document.getElementById('mdlDoNgot').value)||null;
      it.luongDaId = parseInt(document.getElementById('mdlLuongDa').value)||null;

      const topIds=[]; let topMoney=0;
      document.querySelectorAll('#mdlToppings input[type="checkbox"]').forEach(ch=>{
        if(ch.checked){ topIds.push(parseInt(ch.value)); topMoney += parseFloat(ch.getAttribute('data-price')||'0'); }
      });
      it.toppingIds = topIds; it.tienTopping = topMoney;
      it.soLuong = parseInt(document.getElementById('mdlQty').value)||1;

      bootstrap.Modal.getInstance(document.getElementById('modalItem')).hide();
      renderCart();
    }

    function findName(arr, idKey, nameKey, id){
      const o = (arr||[]).find(x=>x[idKey]==id);
      return o ? (o[nameKey]||'') : '';
    }

    function renderCart(){
      const wrap = document.getElementById('cartList');
      wrap.innerHTML='';
      if(CART.length===0){ wrap.innerHTML='<div class="text-muted">Chưa có sản phẩm</div>'; recalcTotals(); return; }

      CART.forEach((it,idx)=>{
        const optChips = `
          ${it.doNgotId?`<span class='chip'>Ngọt: ${findName(OPTIONS.doNgots,'ID_DoNgot','Muc_Do',it.doNgotId)}</span>`:''}
          ${it.luongDaId?`<span class='chip'>Đá: ${findName(OPTIONS.luongDas,'ID_LuongDa','Ten_LuongDa',it.luongDaId) || findName(OPTIONS.luongDas,'ID_LuongDa','Muc_Da',it.luongDaId)}</span>`:''}
          ${(it.toppingIds||[]).length>0?`<span class='chip'>${(it.toppingIds||[]).length} topping</span>`:''}
        `;
        const line=document.createElement('div'); line.className='cart-item';
        line.innerHTML=`
          <div class="d-flex justify-content-between align-items-start">
            <div>
              <div class="fw-semibold">${it.ten}</div>
              <div class="text-muted small">${optChips}</div>
              <div class="text-muted small">Đơn giá: ${fmtVND(it.donGia)} + topping ${fmtVND(it.tienTopping)}</div>
            </div>
            <div class="text-end">
              <div class="input-group input-group-sm">
                <button class="btn btn-outline-secondary" onclick="decQty(${idx})">-</button>
                <input class="form-control text-center" style="width:60px" value="${it.soLuong}" onblur="setQty(${idx}, this.value)">
                <button class="btn btn-outline-secondary" onclick="incQty(${idx})">+</button>
              </div>
              <div class="money mt-1">${fmtVND((it.donGia + it.tienTopping) * it.soLuong)}</div>
              <div class="mt-2 d-flex gap-1 justify-content-end">
                <button class="btn btn-sm btn-outline-primary" onclick="openConfig(${idx})">Tùy chọn</button>
                <button class="btn btn-sm btn-outline-danger" onclick="removeItem(${idx})">Xoá</button>
              </div>
            </div>
          </div>`;
        wrap.appendChild(line);
      });
      recalcTotals();
    }

    // ===== Voucher
    function recalcTotals(){
      const tam = CART.reduce((s,it)=> s + (it.donGia + it.tienTopping)*it.soLuong, 0);
      let giam = Math.min(DISCOUNT, tam*0.5);
      document.getElementById('lblTamTinh').textContent  = fmtVND(tam);
      document.getElementById('lblGiam').textContent     = `- ${fmtVND(giam)}`;
      document.getElementById('lblThanhToan').textContent= fmtVND(Math.max(0, tam - giam));
    }
    function applyVoucher(){
      const code = (document.getElementById('txtVoucher').value||'').trim().toUpperCase();
      const tam  = CART.reduce((s,it)=> s + (it.donGia + it.tienTopping)*it.soLuong, 0);
      const msg  = document.getElementById('voucherMsg');

      if(!code){ VOUCHER=null; DISCOUNT=0; msg.textContent=''; recalcTotals(); return; }

      let giam=0;
      if(code.startsWith('SALE') && code.length>=6 && !isNaN(+code.substring(4))){
        const pct=+code.substring(4); if(pct<=100) giam=tam*(pct/100);
      }else if(code==='SALE100'){ giam=100000; }
      const max=tam*0.5; if(giam>max) giam=Math.floor(max);

      if(giam>0){ VOUCHER={id:0, code}; DISCOUNT=giam; msg.textContent=`Áp dụng thành công. Giảm ${fmtVND(giam)}.`; }
      else { VOUCHER=null; DISCOUNT=0; msg.textContent='Voucher không hợp lệ.'; }
      recalcTotals();
    }
    const clearCart = ()=>{ CART=[]; VOUCHER=null; DISCOUNT=0; document.getElementById('txtVoucher').value=''; document.getElementById('voucherMsg').textContent=''; renderCart(); };

    // ===== Tạo hoá đơn
    async function taoHoaDon(){
      if(CART.length===0){ alert('Giỏ hàng trống.'); return; }

      const tam  = CART.reduce((s,it)=> s + (it.donGia + it.tienTopping)*it.soLuong, 0);
      const giam = Math.min(DISCOUNT, tam*0.5);

      const payload = {
        HinhThucThanhToanId: parseInt(document.getElementById('selPay').value,10) || 1,
        LoaiHoaDon: document.getElementById('selLoai').value,
        KhachHang_SDT: (document.getElementById('txtPhone').value||'').trim() || null,
        GhiChu: (document.getElementById('txtNote').value||'').trim() || null,
        VoucherId: VOUCHER?.id || null,
        TongTien: tam,
        TienGiam: giam,
        Items: CART.map(it=>({
          SanPhamId: it.sanPhamId,
          SoLuong: it.soLuong,
          DonGia: it.donGia,
          DoNgotId: it.doNgotId,
          LuongDaId: it.luongDaId,
          ToppingIds: it.toppingIds
        }))
      };

      try{
        const res = await fetch('/BanHangTaiQuay/TaoHoaDonTaiQuay', {
          method:'POST',
          headers:{'Content-Type':'application/json'},
          body: JSON.stringify(payload)
        });

        const text = await res.text();
        let data; try{ data = JSON.parse(text) } catch { data = { success:false, message:text } }

        if (!res.ok || !data.success){
          alert(data.message || `Lỗi ${res.status}: ${res.statusText}\n${text}`);
          return;
        }

        alert('Tạo hoá đơn thành công!');
        clearCart();
      }catch(e){
        alert('Lỗi gọi API FE: ' + (e?.message || e));
      }
    }

    // ===== INIT
    window.addEventListener('DOMContentLoaded', ()=>{
      searchProducts(1);
      renderCart();
      console.log('[Seed]', window.__DATA);
    });
</script>
