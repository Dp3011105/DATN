@model List<FE.Models.SanPham>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Danh sách sản phẩm";

    var sortedProducts = Model.OrderByDescending(p => p.ID_San_Pham).ToList();
    var activeProducts = sortedProducts.Where(p => p.Trang_Thai).ToList();
    var inactiveProducts = sortedProducts.Where(p => !p.Trang_Thai).ToList();

    TimeZoneInfo vnTimeZone;
    try
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");
    }
    catch
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Ho_Chi_Minh");
    }
    var currentDate = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, vnTimeZone);

    var productsWithPromotion = sortedProducts.Where(p => p.KhuyenMais != null && p.KhuyenMais.Any(km => currentDate >= km.Ngay_Bat_Dau && currentDate <= km.Ngay_Ket_Thuc)).ToList();
    var productsWithoutPromotion = sortedProducts.Except(productsWithPromotion).ToList();
    var productsUnder100 = sortedProducts.Where(p => p.So_Luong < 3).ToList();
    var productsOver1000 = sortedProducts.Where(p => p.So_Luong > 100).ToList();

    int pageSize = 10;
    int activePage = ViewBag.ActivePage != null ? (int)ViewBag.ActivePage : 1;
    int inactivePage = ViewBag.InactivePage != null ? (int)ViewBag.InactivePage : 1;
    int totalActivePages = (int)Math.Ceiling((double)activeProducts.Count / pageSize);
    int totalInactivePages = (int)Math.Ceiling((double)inactiveProducts.Count / pageSize);
    var pagedActiveProducts = activeProducts.Skip((activePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedInactiveProducts = inactiveProducts.Skip((inactivePage - 1) * pageSize).Take(pageSize).ToList();
}

<style>
    /* Card container */
    .card-container {
        background: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 0.5rem;
        padding: 20px;
        margin-bottom: 20px;
    }

    /* Thống kê */
    .stats-container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 15px;
        margin-bottom: 20px;
    }

    .stat-card {
        padding: 20px;
        border-radius: 0.5rem;
        text-align: center;
        font-weight: 500;
        font-size: 0.9rem;
        color: #fff;
        cursor: pointer;
        transition: transform 0.3s ease;
    }

        .stat-card i {
            font-size: 1.5rem;
            margin-bottom: 8px;
        }

        .stat-card strong {
            display: block;
            font-size: 1.3rem;
            margin-top: 5px;
        }

        .stat-card:hover {
            transform: translateY(-4px);
        }

    .stat-total {
        background: linear-gradient(135deg, #2563eb, #3b82f6);
    }

    .stat-active {
        background: linear-gradient(135deg, #059669, #10b981);
    }

    .stat-inactive {
        background: linear-gradient(135deg, #dc2626, #ef4444);
    }

    .stat-promotion {
        background: linear-gradient(135deg, #f59e0b, #fbbf24);
    }

    .stat-no-promotion {
        background: linear-gradient(135deg, #9333ea, #a855f7);
    }

    .stat-under-100 {
        background: linear-gradient(135deg, #ef4444, #f97316);
    }

    .stat-over-1000 {
        background: linear-gradient(135deg, #10b981, #34d399);
    }

    /* Thanh tìm kiếm */
    .search-filter {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
        background: #fff;
        padding: 15px;
        border-radius: 0.5rem;
        border: 1px solid #e0e0e0;
        margin-bottom: 20px;
    }

        .search-filter input, .search-filter select {
            border-radius: 0.3rem;
            border: 1px solid #e0e0e0;
            padding: 8px 12px;
            width: 300px;
            height: 38px;
            font-size: 0.9rem;
            background: #f9fafb;
        }

            .search-filter input:focus {
                outline: none;
                border-color: #3b82f6;
                background: #fff;
            }

            .search-filter input::placeholder {
                color: #6b7280;
            }

        .search-filter .btn-outline-primary {
            border-radius: 0.3rem;
            padding: 8px 12px;
            font-weight: 500;
        }

    /* Bảng */
    .table-custom {
        background: #fff;
        border-radius: 0.5rem;
        border: 1px solid #e0e0e0;
        text-align: center;
    }

        .table-custom thead {
            background: linear-gradient(135deg, #1e40af, #3b82f6);
            color: #fff;
        }

        .table-custom tbody tr:hover {
            background: rgba(59, 130, 246, 0.08);
        }

    /* Nút bấm */
    .btn-sm {
        border-radius: 0.3rem;
        font-weight: 500;
        padding: 6px 12px;
    }

    /* Badge trạng thái */
    .badge-active {
        background: #e6f4ea;
        color: #1e7e34;
        padding: 0.4em 0.7em;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .badge-inactive {
        background: #fbe9e7;
        color: #d32f2f;
        padding: 0.4em 0.7em;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        font-weight: 600;
    }

    /* Alert */
    .alert {
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        z-index: 1050;
        border-radius: 0.5rem;
        border-left: 4px solid;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
        animation: slideIn 0.5s ease, fadeOut 0.5s ease 3s forwards;
    }

    keyframes slideIn {
        from

    {
        top: -50px;
        opacity: 0;
    }

    to {
        top: 20px;
        opacity: 1;
    }

    }

    keyframes fadeOut {
        from

    {
        opacity: 1;
    }

    to {
        opacity: 0;
        visibility: hidden;
    }

    }

    /* Pagination */
    .pagination-container {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination {
        gap: 8px;
    }

        .pagination li a {
            width: 36px;
            height: 36px;
            border-radius: 0.3rem;
            text-decoration: none;
            color: #1e40af;
            background: #fff;
            border: 1px solid #e0e0e0;
            font-weight: 500;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .pagination li a:hover {
                background: #3b82f6;
                color: #fff;
                border-color: #3b82f6;
            }

        .pagination li.active a {
            background: #2563eb;
            color: #fff;
            border-color: #2563eb;
        }

        .pagination li.disabled a {
            color: #94a3b8;
            cursor: not-allowed;
            background: #f8fafc;
        }
</style>

<div class="card-container">
    <!-- Notifications -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle-fill me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Thống kê -->
    <div class="stats-container">
        <button class="stat-card stat-total" onclick="filterStatus('all')">
            <i class="fas fa-boxes"></i> Tổng sản phẩm <strong>@Model.Count</strong>
        </button>
        <button class="stat-card stat-active" onclick="filterStatus('active')">
            <i class="fas fa-check-circle"></i> Hoạt động <strong>@activeProducts.Count</strong>
        </button>
        <button class="stat-card stat-inactive" onclick="filterStatus('inactive')">
            <i class="fas fa-ban"></i> Ngừng hoạt động <strong>@inactiveProducts.Count</strong>
        </button>
        <button class="stat-card stat-promotion" onclick="filterStatus('promotion')">
            <i class="fas fa-tags"></i> Được khuyến mại <strong>@productsWithPromotion.Count</strong>
        </button>
        <button class="stat-card stat-no-promotion" onclick="filterStatus('no-promotion')">
            <i class="fas fa-tag"></i> Không khuyến mại <strong>@productsWithoutPromotion.Count</strong>
        </button>
        <button class="stat-card stat-under-100" onclick="filterStatus('under-100')">
            <i class="fas fa-exclamation-triangle"></i> Số lượng thấp (dưới 3) <strong>@productsUnder100.Count</strong>
        </button>
        <button class="stat-card stat-over-1000" onclick="filterStatus('over-1000')">
            <i class="fas fa-check-double"></i> Số lượng cao (trên 100) <strong>@productsOver1000.Count</strong>
        </button>
    </div>

    <!-- Tìm kiếm & thao tác -->
    <div class="search-filter">
        <form asp-action="Index" method="get" class="d-flex gap-1 flex-grow-1">
            <input type="text" name="searchTerm" id="searchInput" class="form-control" placeholder="Tìm kiếm sản phẩm theo tên..." value="@ViewBag.SearchTerm" />
            <input type="hidden" name="activePage" value="@activePage" />
            <input type="hidden" name="inactivePage" value="@inactivePage" />
            <button type="submit" class="btn btn-outline-primary btn-sm" id="searchButton">
                <i class="fas fa-search"></i>
            </button>
        </form>
        <a asp-action="AddProduct" class="btn btn-success btn-sm">
            <i class="fas fa-plus"></i> Thêm sản phẩm
        </a>
        <a asp-action="Index" asp-controller="ProductDetails" class="btn btn-primary btn-sm">
            <i class="fas fa-cogs"></i> Chi tiết sản phẩm
        </a>
    </div>

    <!-- Toggle Buttons -->
    <div class="mb-4 d-flex justify-content-center gap-3">
        <button id="showActive" class="btn btn-primary active" style="border-radius: 0.3rem;">Sản Phẩm Hoạt Động</button>
        <button id="showInactive" class="btn btn-outline-primary" style="border-radius: 0.3rem;">Sản Phẩm Ngừng Hoạt Động</button>
    </div>

    <!-- Active Products -->
    <div id="activeProducts" class="card-container">
        <h5 class="mb-3 text-center">Sản Phẩm Hoạt Động</h5>
        <div class="table-responsive">
            <table class="table table-hover table-light align-middle table-custom">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên Sản Phẩm</th>
                        <th>Giá</th>
                        <th>Số Lượng</th>
                        <th>Hình Ảnh</th>
                        <th>Mô Tả</th>
                        <th>Trạng Thái</th>
                        <th>Hành Động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in pagedActiveProducts)
                    {
                        bool hasActivePromotion = false;
                        decimal basePrice = product.Gia;
                        string promotionName = "";
                        if (product.KhuyenMais != null && product.KhuyenMais.Any())
                        {
                            foreach (var km in product.KhuyenMais)
                            {
                                if (currentDate >= km.Ngay_Bat_Dau && currentDate <= km.Ngay_Ket_Thuc)
                                {
                                    hasActivePromotion = true;
                                    basePrice = km.Gia_Giam ?? product.Gia;
                                    promotionName = km.Ten_Khuyen_Mai;
                                    break;
                                }
                            }
                        }
                        <tr class="product-row" data-name="@(product.Ten_San_Pham?.ToLower() ?? "")">
                            <td>@product.ID_San_Pham</td>
                            <td>@(product.Ten_San_Pham ?? "Không có tên")</td>
                            <td>
                                @if (hasActivePromotion)
                                {
                                    <span class="text-muted text-decoration-line-through me-2">@string.Format("{0:N0} đ", product.Gia)</span>
                                    <span class="text-danger fw-bold">@string.Format("{0:N0} đ", basePrice)</span>
                                    <span class="badge bg-warning text-dark ms-2">@promotionName</span>
                                }
                                else
                                {
                                    <span class="text-primary fw-bold">@string.Format("{0:N0} đ", product.Gia)</span>
                                }
                            </td>
                            <td>@product.So_Luong</td>
                            <td>
                                <img src="@("https://localhost:7169" + (product.Hinh_Anh ?? "/images/placeholder.jpg"))" alt="@(product.Ten_San_Pham ?? "Sản phẩm")" class="img-fluid" style="max-width: 80px; aspect-ratio: 4/3; object-fit: cover; border-radius: 0.3rem;" />
                            </td>
                            <td class="text-truncate" style="max-width: 250px;">@(product.Mo_Ta ?? "Không có mô tả")</td>
                            <td><span class="badge badge-active">Hoạt động</span></td>
                            <td>
                                <a asp-action="Details" asp-route-id="@product.ID_San_Pham" class="btn btn-outline-primary btn-sm me-2">
                                    <i class="bi bi-eye"></i> Chi tiết
                                </a>
                                <a asp-action="EditProduct" asp-route-id="@product.ID_San_Pham" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-pencil"></i> Sửa
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Active Products Pagination -->
        <div class="pagination-container">
            <ul class="pagination">
                <li class="@(activePage == 1 ? "disabled" : "")">
                    <a href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, statusFilter = ViewBag.StatusFilter, promotionFilter = ViewBag.PromotionFilter, quantityFilter = ViewBag.QuantityFilter, activePage = activePage - 1, inactivePage = inactivePage })">&laquo;</a>
                </li>
                @for (int i = 1; i <= totalActivePages; i++)
                {
                    <li class="@(i == activePage ? "active" : "")">
                        <a href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, statusFilter = ViewBag.StatusFilter, promotionFilter = ViewBag.PromotionFilter, quantityFilter = ViewBag.QuantityFilter, activePage = i, inactivePage = inactivePage })">@i</a>
                    </li>
                }
                <li class="@(activePage == totalActivePages ? "disabled" : "")">
                    <a href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, statusFilter = ViewBag.StatusFilter, promotionFilter = ViewBag.PromotionFilter, quantityFilter = ViewBag.QuantityFilter, activePage = activePage + 1, inactivePage = inactivePage })">&raquo;</a>
                </li>
            </ul>
        </div>
    </div>

    <!-- Inactive Products -->
    <div id="inactiveProducts" class="card-container d-none">
        <h5 class="mb-3 text-center">Sản Phẩm Ngừng Hoạt Động</h5>
        <div class="table-responsive">
            <table class="table table-hover table-light align-middle table-custom">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên Sản Phẩm</th>
                        <th>Giá</th>
                        <th>Số Lượng</th>
                        <th>Hình Ảnh</th>
                        <th>Mô Tả</th>
                        <th>Trạng Thái</th>
                        <th>Hành Động</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var product in pagedInactiveProducts)
                    {
                        bool hasActivePromotion = false;
                        decimal basePrice = product.Gia;
                        string promotionName = "";
                        if (product.KhuyenMais != null && product.KhuyenMais.Any())
                        {
                            foreach (var km in product.KhuyenMais)
                            {
                                if (currentDate >= km.Ngay_Bat_Dau && currentDate <= km.Ngay_Ket_Thuc)
                                {
                                    hasActivePromotion = true;
                                    basePrice = km.Gia_Giam ?? product.Gia;
                                    promotionName = km.Ten_Khuyen_Mai;
                                    break;
                                }
                            }
                        }
                        <tr class="product-row" data-name="@(product.Ten_San_Pham?.ToLower() ?? "")">
                            <td>@product.ID_San_Pham</td>
                            <td>@(product.Ten_San_Pham ?? "Không có tên")</td>
                            <td>
                                @if (hasActivePromotion)
                                {
                                    <span class="text-muted text-decoration-line-through me-2">@string.Format("{0:N0} đ", product.Gia)</span>
                                    <span class="text-danger fw-bold">@string.Format("{0:N0} đ", basePrice)</span>
                                    <span class="badge bg-warning text-dark ms-2">@promotionName</span>
                                }
                                else
                                {
                                    <span class="text-primary fw-bold">@string.Format("{0:N0} đ", product.Gia)</span>
                                }
                            </td>
                            <td>@product.So_Luong</td>
                            <td>
                                <img src="@("https://localhost:7169" + (product.Hinh_Anh ?? "/images/placeholder.jpg"))" alt="@(product.Ten_San_Pham ?? "Sản phẩm")" class="img-fluid" style="max-width: 80px; aspect-ratio: 4/3; object-fit: cover; border-radius: 0.3rem;" />
                            </td>
                            <td class="text-truncate" style="max-width: 250px;">@(product.Mo_Ta ?? "Không có mô tả")</td>
                            <td><span class="badge badge-inactive">Không hoạt động</span></td>
                            <td>
                                <a asp-action="Details" asp-route-id="@product.ID_San_Pham" class="btn btn-outline-primary btn-sm me-2">
                                    <i class="bi bi-eye"></i> Chi tiết
                                </a>
                                <a asp-action="EditProduct" asp-route-id="@product.ID_San_Pham" class="btn btn-outline-primary btn-sm">
                                    <i class="bi bi-pencil"></i> Sửa
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- Inactive Products Pagination -->
        <div class="pagination-container">
            <ul class="pagination">
                <li class="@(inactivePage == 1 ? "disabled" : "")">
                    <a href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, statusFilter = ViewBag.StatusFilter, promotionFilter = ViewBag.PromotionFilter, quantityFilter = ViewBag.QuantityFilter, activePage = activePage, inactivePage = inactivePage - 1 })">&laquo;</a>
                </li>
                @for (int i = 1; i <= totalInactivePages; i++)
                {
                    <li class="@(i == inactivePage ? "active" : "")">
                        <a href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, statusFilter = ViewBag.StatusFilter, promotionFilter = ViewBag.PromotionFilter, quantityFilter = ViewBag.QuantityFilter, activePage = activePage, inactivePage = i })">@i</a>
                    </li>
                }
                <li class="@(inactivePage == totalInactivePages ? "disabled" : "")">
                    <a href="@Url.Action("Index", new { searchTerm = ViewBag.SearchTerm, statusFilter = ViewBag.StatusFilter, promotionFilter = ViewBag.PromotionFilter, quantityFilter = ViewBag.QuantityFilter, activePage = activePage, inactivePage = inactivePage + 1 })">&raquo;</a>
                </li>
            </ul>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script>
        $(document).ready(function () {
            const searchInput = $('#searchInput');
            const searchButton = $('#searchButton');
            const showActive = $('#showActive');
            const showInactive = $('#showInactive');
            const activeProducts = $('#activeProducts');
            const inactiveProducts = $('#inactiveProducts');
            const tables = [$('#activeTable'), $('#inactiveTable')];

            function filterProducts() {
                const searchTerm = searchInput.val().toLowerCase().trim();
                tables.forEach(table => {
                    table.find('.product-row').each(function () {
                        const name = $(this).data('name') || '';
                        $(this).toggle(name.includes(searchTerm));
                    });
                });
            }

            searchButton.on('click', filterProducts);
            searchInput.on('keyup', function (e) {
                if (e.key === 'Enter') filterProducts();
            });

            showActive.on('click', function () {
                activeProducts.removeClass('d-none');
                inactiveProducts.addClass('d-none');
                showActive.addClass('btn-primary active').removeClass('btn-outline-primary');
                showInactive.addClass('btn-outline-primary').removeClass('btn-primary active');
            });

            showInactive.on('click', function () {
                inactiveProducts.removeClass('d-none');
                activeProducts.addClass('d-none');
                showInactive.addClass('btn-primary active').removeClass('btn-outline-primary');
                showActive.addClass('btn-outline-primary').removeClass('btn-primary active');
            });
        });

        function filterStatus(type) {
            let url = '@Url.Action("Index", "Product")';
            let search = $('#searchInput').val() || "";
            let activePage = @activePage;
            let inactivePage = @inactivePage;
            if (type === 'all') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&activePage=${activePage}&inactivePage=${inactivePage}`;
            else if (type === 'active') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&statusFilter=true&activePage=${activePage}&inactivePage=${inactivePage}`;
            else if (type === 'inactive') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&statusFilter=false&activePage=${activePage}&inactivePage=${inactivePage}`;
            else if (type === 'promotion') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&promotionFilter=true&activePage=${activePage}&inactivePage=${inactivePage}`;
            else if (type === 'no-promotion') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&promotionFilter=false&activePage=${activePage}&inactivePage=${inactivePage}`;
            else if (type === 'under-100') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&quantityFilter=under-100&activePage=${activePage}&inactivePage=${inactivePage}`;
            else if (type === 'over-1000') window.location.href = `${url}?searchTerm=${encodeURIComponent(search)}&quantityFilter=over-1000&activePage=${activePage}&inactivePage=${inactivePage}`;
        }
    </script>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />