@* @model UpdateProductViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Cập nhật sản phẩm";
}

<style>
    /* Card container */
    .card-container {
        background: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 0.5rem;
        padding: 20px;
        margin-bottom: 20px;
        max-width: 1400px;
        margin-left: auto;
        margin-right: auto;
    }

    /* Form Card */
    .form-card {
        background: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 0.5rem;
        padding: 20px;
    }

    .form-header {
        background: linear-gradient(135deg, #1e40af, #3b82f6);
        color: #fff;
        padding: 20px;
        text-align: center;
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        margin: -20px -20px 20px -20px;
    }

    .form-control, .form-control-file, .form-select {
        border-radius: 0.3rem;
        border: 1px solid #e0e0e0;
        padding: 10px;
        font-size: 0.9rem;
        background: #f9fafb;
    }

        .form-control:focus, .form-control-file:focus, .form-select:focus {
            border-color: #3b82f6;
            background: #fff;
            outline: none;
        }

    .form-floating label {
        color: #6b7280;
        font-size: 0.9rem;
    }

    .form-control.is-invalid, .form-select.is-invalid {
        border-color: #dc3545;
    }

    .form-control.is-valid, .form-select.is-valid {
        border-color: #28a745;
    }

    .form-switch .form-check-input {
        height: 1.8em;
        width: 3.5em;
        background-color: #e9ecef;
        border: 1px solid #e0e0e0;
    }

        .form-switch .form-check-input:checked {
            background-color: #28a745;
            border-color: #28a745;
        }

    .img-fluid {
        border-radius: 0.3rem;
        max-width: 300px;
        aspect-ratio: 4/3;
        object-fit: cover;
    }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-custom {
        border-radius: 0.3rem;
        padding: 10px 20px;
        font-weight: 500;
        font-size: 1rem;
    }

    .btn-submit {
        background: #28a745;
        border: none;
        color: #fff;
    }

    .btn-back {
        background: #6b7280;
        border: none;
        color: #fff;
    }

    .btn-outline-primary {
        border-radius: 0.3rem;
        border-color: #3b82f6;
        color: #3b82f6;
    }

        .btn-outline-primary:hover {
            background-color: #3b82f6;
            color: #fff;
        }

    .text-danger.small {
        font-size: 0.85rem;
        margin-left: 10px;
        display: inline-block;
        vertical-align: middle;
    }

    /* Table for checkboxes */
    .checkbox-table {
        text-align: center;
        width: 100%;
    }

        .checkbox-table td {
            padding: 10px;
            vertical-align: middle;
        }

        .checkbox-table .name-column {
            width: 70%;
            text-align: left;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .checkbox-table .status-column {
            width: 30%;
        }

    .badge-active {
        background: #e6f4ea;
        color: #1e7e34;
        padding: 0.4em 0.7em;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .badge-inactive {
        background: #fbe9e7;
        color: #d32f2f;
        padding: 0.4em 0.7em;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        font-weight: 600;
    }

    /* Topping 3 columns */
    .topping-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .topping-column {
        flex: 1 1 33.33%;
        min-width: 200px;
    }

    /* Notifications animation */
    .alert {
        position: fixed;
        top: 20px;
        right: -100%;
        width: 300px;
        z-index: 1050;
        border-radius: 0.3rem;
        animation: slideInRight 0.5s ease forwards, fadeOut 0.5s ease 3s forwards;
    }

    keyframes slideInRight {
        from

    {
        right: -100%;
    }

    to {
        right: 20px;
    }

    }

    keyframes fadeOut {
        from

    {
        opacity: 1;
    }

    to {
        opacity: 0;
        visibility: hidden;
    }

    }

    /* Responsive */
    media (max-width: 768px) {
        .card-container

    {
        padding: 15px;
    }

    .form-card {
        padding: 15px;
    }

    .action-buttons {
        flex-direction: column;
        gap: 10px;
    }

    .btn-custom {
        width: 100%;
    }

    .img-fluid {
        max-width: 100%;
    }

    .topping-column {
        flex: 1 1 100%;
    }

    .checkbox-table .name-column {
        width: 60%;
    }

    .checkbox-table .status-column {
        width: 40%;
    }

    .alert {
        width: 90%;
        right: -100%;
    }

    }

    body {
        font-family: 'Inter', sans-serif;
        background-color: #f8f9fa;
    }
</style>
<div class="card-container">
    <!-- Notifications giữ nguyên -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle-fill me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <!-- Edit Form -->
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="form-card">
                <div class="form-header">
                    <h2 class="mb-0 fw-bold">Cập Nhật Sản Phẩm</h2>
                </div>
                <form asp-action="EditProduct" enctype="multipart/form-data" id="editProductForm">
                    <!-- Giữ nguyên các input và bảng như mã trước -->
                    <input type="hidden" asp-for="ID_San_Pham" />
                    <input type="hidden" asp-for="CurrentImagePath" />
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-4 text-center"></div>

                    <div class="form-floating mb-4">
                        <input asp-for="TenSanPham" class="form-control" id="tenSanPham" placeholder="Tên sản phẩm" required />
                        <label asp-for="TenSanPham">Tên sản phẩm</label>
                        <span asp-validation-for="TenSanPham" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <input asp-for="Gia" class="form-control" type="text" id="gia" placeholder="Giá" value="@(Model.Gia.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")))" required />
                        <label asp-for="Gia">Giá (VND)</label>
                        <span asp-validation-for="Gia" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <input asp-for="SoLuong" class="form-control" type="number" id="soLuong" placeholder="Số lượng" required />
                        <label asp-for="SoLuong">Số lượng</label>
                        <span asp-validation-for="SoLuong" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <textarea asp-for="MoTa" class="form-control" id="moTa" placeholder="Mô tả" style="height: 150px;"></textarea>
                        <label asp-for="MoTa">Mô tả</label>
                        <span asp-validation-for="MoTa" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <select asp-for="TrangThai" class="form-select" id="trangThai" required>
                            <option value="true" selected="@(Model.TrangThai ? "selected" : null)">Hoạt động</option>
                            <option value="false" selected="@(Model.TrangThai ? null : "selected")">Không hoạt động</option>
                        </select>
                        <label for="trangThai">Trạng thái</label>
                        <span asp-validation-for="TrangThai" class="text-danger small"></span>
                    </div>

                    <div class="mb-4">
                        <label class="form-label fw-bold">Hình ảnh hiện tại</label>
                        @if (!string.IsNullOrEmpty(Model.CurrentImagePath))
                        {
                            <div class="mb-3 text-center">
                                <img src="@("https://localhost:7169" + Model.CurrentImagePath)" alt="Hình ảnh hiện tại" class="img-fluid" />
                            </div>
                        }
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="changeImageSwitch" />
                            <label class="form-check-label" for="changeImageSwitch">Thay đổi hình ảnh</label>
                        </div>
                        <div id="imageUploadSection" style="display: none;">
                            <label asp-for="Image" class="form-label">Chọn hình ảnh mới</label>
                            <input asp-for="Image" type="file" class="form-control" accept="image/*" />
                            <span asp-validation-for="Image" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Kích thước</label>
                            <button type="button" class="btn btn-outline-primary btn-sm select-all" data-prefix="size">Chọn tất cả</button>
                        </div>
                        <table class="table table-hover table-light align-middle checkbox-table">
                            <tbody>
                                @foreach (var size in ViewBag.Sizes)
                                {
                                    <tr>
                                        <td class="name-column">
                                            <input type="checkbox" name="SelectedSizes" value="@size.ID_Size" class="form-check-input size-checkbox" id="size_@size.ID_Size" @(Model.SelectedSizes.Contains(size.ID_Size) ? "checked" : "") />
                                            <label class="form-check-label" for="size_@size.ID_Size">@size.SizeName</label>
                                        </td>
                                        <td class="status-column">
                                            <span class="badge @(size.Trang_Thai ? "badge-active" : "badge-inactive")">@(size.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <span id="sizeError" class="text-danger small error-container"></span>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Topping</label>
                        </div>
                        <div class="topping-container">
                            @{
                                var toppings = ViewBag.Toppings;
                                int itemsPerColumn = (int)Math.Ceiling(toppings.Count / 3.0);
                                for (int col = 0; col < 3; col++)
                                {
                                    <div class="topping-column">
                                        <table class="table table-hover table-light align-middle checkbox-table">
                                            <tbody>
                                                @for (int i = col * itemsPerColumn; i < Math.Min((col + 1) * itemsPerColumn, toppings.Count); i++)
                                                {
                                                    var topping = toppings[i];
                                                    <tr>
                                                        <td class="name-column">
                                                            <input type="checkbox" name="SelectedToppings" value="@topping.ID_Topping" class="form-check-input" id="topping_@topping.ID_Topping" @(Model.SelectedToppings.Contains(topping.ID_Topping) ? "checked" : "") />
                                                            <label class="form-check-label" for="topping_@topping.ID_Topping">@topping.Ten</label>
                                                        </td>
                                                        <td class="status-column">
                                                            <span class="badge @(topping.Trang_Thai ? "badge-active" : "badge-inactive")">@(topping.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Lượng đá</label>
                            <button type="button" class="btn btn-outline-primary btn-sm select-all" data-prefix="luongDa">Chọn tất cả</button>
                        </div>
                        <table class="table table-hover table-light align-middle checkbox-table">
                            <tbody>
                                @foreach (var luongDa in ViewBag.LuongDas)
                                {
                                    <tr>
                                        <td class="name-column">
                                            <input type="checkbox" name="SelectedLuongDas" value="@luongDa.ID_LuongDa" class="form-check-input luongDa-checkbox" id="luongDa_@luongDa.ID_LuongDa" @(Model.SelectedLuongDas.Contains(luongDa.ID_LuongDa) ? "checked" : "") />
                                            <label class="form-check-label" for="luongDa_@luongDa.ID_LuongDa">@luongDa.Ten_LuongDa</label>
                                        </td>
                                        <td class="status-column">
                                            <span class="badge @(luongDa.Trang_Thai ? "badge-active" : "badge-inactive")">@(luongDa.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <span id="luongDaError" class="text-danger small error-container"></span>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Độ ngọt</label>
                            <button type="button" class="btn btn-outline-primary btn-sm select-all" data-prefix="doNgot">Chọn tất cả</button>
                        </div>
                        <table class="table table-hover table-light align-middle checkbox-table">
                            <tbody>
                                @foreach (var doNgot in ViewBag.DoNgots)
                                {
                                    <tr>
                                        <td class="name-column">
                                            <input type="checkbox" name="SelectedDoNgots" value="@doNgot.ID_DoNgot" class="form-check-input doNgot-checkbox" id="doNgot_@doNgot.ID_DoNgot" @(Model.SelectedDoNgots.Contains(doNgot.ID_DoNgot) ? "checked" : "") />
                                            <label class="form-check-label" for="doNgot_@doNgot.ID_DoNgot">@doNgot.Muc_Do</label>
                                        </td>
                                        <td class="status-column">
                                            <span class="badge @(doNgot.Trang_Thai ? "badge-active" : "badge-inactive")">@(doNgot.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <span id="doNgotError" class="text-danger small error-container"></span>
                    </div>

                    <div class="action-buttons">
                        <a asp-action="Index" class="btn-custom btn-back">
                            <i class="bi bi-arrow-left me-2"></i>Quay lại
                        </a>
                        <button type="submit" class="btn-custom btn-submit" disabled>
                            <i class="bi bi-check-circle me-2"></i>Cập nhật
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Format tiền tệ cho input giá
            $('#gia').on('input', function () {
                let value = $(this).val().replace(/[^0-9]/g, '');
                if (value) {
                    let num = parseInt(value, 10);
                    if (!isNaN(num)) {
                        $(this).val(num.toLocaleString('vi-VN'));
                    } else {
                        $(this).val('');
                    }
                } else {
                    $(this).val('');
                }
            });

            // Xóa định dạng khi gửi form
            $('#editProductForm').on('submit', function () {
                let gia = $('#gia').val().replace(/[^0-9]/g, '');
                if (gia) {
                    $('#gia').val(parseInt(gia, 10));
                }
            });

            // Định dạng giá trị ban đầu
            if ($('#gia').val()) {
                let initialValue = $('#gia').val().replace(/[^0-9]/g, '');
                if (initialValue) {
                    $('#gia').val(parseInt(initialValue, 10).toLocaleString('vi-VN'));
                }
            }

            // Validate form
            const form = $("#editProductForm");
            const submitButton = $('.btn-submit');
            form.validate({
                errorClass: "text-danger small",
                highlight: function (element) {
                    $(element).addClass("is-invalid").removeClass("is-valid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid").addClass("is-valid");
                },
                errorPlacement: function (error, element) {
                    if (element.attr("name") === "SelectedSizes") {
                        error.appendTo("#sizeError");
                    } else if (element.attr("name") === "SelectedLuongDas") {
                        error.appendTo("#luongDaError");
                    } else if (element.attr("name") === "SelectedDoNgots") {
                        error.appendTo("#doNgotError");
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                    Gia: {
                        required: true,
                        number: true,
                        min: 1001,
                        notEqual: 1000
                    },
                    SoLuong: {
                        required: true,
                        number: true,
                        min: 1
                    },
                    SelectedSizes: {
                        required: true,
                        minlength: 1
                    },
                    SelectedLuongDas: {
                        required: true,
                        minlength: 1
                    },
                    SelectedDoNgots: {
                        required: true,
                        minlength: 1
                    }
                },
                messages: {
                    Gia: {
                        required: "Vui lòng nhập giá.",
                        number: "Giá phải là số.",
                        min: "Giá phải lớn hơn 1.000 VND.",
                        notEqual: "Giá không được là 1.000 VND."
                    },
                    SoLuong: {
                        required: "Vui lòng nhập số lượng.",
                        number: "Số lượng phải là số.",
                        min: "Số lượng phải lớn hơn 0."
                    },
                    SelectedSizes: {
                        required: "Hãy chọn ít nhất 1 Kích thước.",
                        minlength: "Hãy chọn ít nhất 1 Kích thước."
                    },
                    SelectedLuongDas: {
                        required: "Hãy chọn ít nhất 1 Lượng đá.",
                        minlength: "Hãy chọn ít nhất 1 Lượng đá."
                    },
                    SelectedDoNgots: {
                        required: "Hãy chọn ít nhất 1 Độ ngọt.",
                        minlength: "Hãy chọn ít nhất 1 Độ ngọt."
                    }
                }
            });

            // Kiểm tra form hợp lệ để bật/tắt nút submit
            function checkFormValidity() {
                submitButton.prop('disabled', !form.valid());
            }

            // Kiểm tra ban đầu
            checkFormValidity();

            // Theo dõi thay đổi trong form
            form.find('input, select, textarea').on('input change', function () {
                checkFormValidity();
            });

            // Hiển thị trường upload hình ảnh
            $('#changeImageSwitch').on('change', function () {
                if ($(this).is(':checked')) {
                    $('#imageUploadSection').show();
                    $('#Image').attr('required', 'required');
                } else {
                    $('#imageUploadSection').hide();
                    $('#Image').removeAttr('required');
                }
                checkFormValidity();
            });

            // Chọn tất cả checkbox
            $('.select-all').on('click', function () {
                const prefix = $(this).data('prefix');
                const checkboxes = $(`input[id^="${prefix}_"]`);
                const allChecked = checkboxes.toArray().every(cb => cb.checked);
                checkboxes.prop('checked', !allChecked);
                checkboxes.valid();
                checkFormValidity();
            });
        });
    </script>
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&display=swap" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" /> *@











@model UpdateProductViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Cập nhật sản phẩm";
}

<style>
    .card-container {
        background: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 0.5rem;
        padding: 20px;
        margin-bottom: 20px;
        max-width: 1400px;
        margin-left: auto;
        margin-right: auto;
    }

    .form-card {
        background: #fff;
        border: 1px solid #e0e0e0;
        border-radius: 0.5rem;
        padding: 20px;
    }

    .form-header {
        background: linear-gradient(135deg, #1e40af, #3b82f6);
        color: #fff;
        padding: 20px;
        text-align: center;
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        margin: -20px -20px 20px -20px;
    }

    .form-control, .form-control-file, .form-select {
        border-radius: 0.3rem;
        border: 1px solid #e0e0e0;
        padding: 10px;
        font-size: 0.9rem;
        background: #f9fafb;
    }

        .form-control:focus, .form-control-file:focus, .form-select:focus {
            border-color: #3b82f6;
            background: #fff;
            outline: none;
        }

    .form-floating label {
        color: #6b7280;
        font-size: 0.9rem;
    }

    .form-control.is-invalid, .form-control-file.is-invalid, .form-select.is-invalid {
        border-color: #dc3545;
    }

    .form-control.is-valid, .form-control-file.is-valid, .form-select.is-valid {
        border-color: #28a745;
    }

    .form-switch .form-check-input {
        height: 1.8em;
        width: 3.5em;
        background-color: #e9ecef;
        border: 1px solid #e0e0e0;
    }

        .form-switch .form-check-input:checked {
            background-color: #28a745;
            border-color: #28a745;
        }

    .img-fluid {
        border-radius: 0.3rem;
        max-width: 300px;
        aspect-ratio: 4/3;
        object-fit: cover;
    }

    .action-buttons {
        display: flex;
        justify-content: flex-end;
        gap: 10px;
        margin-top: 20px;
    }

    .btn-custom {
        border-radius: 0.3rem;
        padding: 10px 20px;
        font-weight: 500;
        font-size: 1rem;
    }

    .btn-submit {
        background: #28a745;
        border: none;
        color: #fff;
    }

    .btn-back {
        background: #6b7280;
        border: none;
        color: #fff;
    }

    .btn-outline-primary {
        border-radius: 0.3rem;
        border-color: #3b82f6;
        color: #3b82f6;
    }

        .btn-outline-primary:hover {
            background-color: #3b82f6;
            color: #fff;
        }

    .text-danger.small {
        font-size: 0.85rem;
        margin-left: 10px;
        display: inline-block;
        vertical-align: middle;
    }

    .checkbox-table {
        text-align: center;
        width: 100%;
    }

        .checkbox-table td {
            padding: 10px;
            vertical-align: middle;
        }

        .checkbox-table .name-column {
            width: 70%;
            text-align: left;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .checkbox-table .status-column {
            width: 30%;
        }

    .badge-active {
        background: #e6f4ea;
        color: #1e7e34;
        padding: 0.4em 0.7em;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .badge-inactive {
        background: #fbe9e7;
        color: #d32f2f;
        padding: 0.4em 0.7em;
        border-radius: 0.3rem;
        font-size: 0.85rem;
        font-weight: 600;
    }

    .topping-container {
        display: flex;
        flex-wrap: wrap;
        gap: 10px;
    }

    .topping-column {
        flex: 1 1 33.33%;
        min-width: 200px;
    }

    .alert {
        position: fixed;
        top: 20px;
        right: -100%;
        width: 300px;
        z-index: 1050;
        border-radius: 0.3rem;
        animation: slideInRight 0.5s ease forwards, fadeOut 0.5s ease 3s forwards;
    }

    keyframes slideInRight {
        from

    {
        right: -100%;
    }

    to {
        right: 20px;
    }

    }

    keyframes fadeOut {
        from

    {
        opacity: 1;
    }

    to {
        opacity: 0;
        visibility: hidden;
    }

    }

    media (max-width: 768px) {
        .card-container

    {
        padding: 15px;
    }

    .form-card {
        padding: 15px;
    }

    .action-buttons {
        flex-direction: column;
        gap: 10px;
    }

    .btn-custom {
        width: 100%;
    }

    .img-fluid {
        max-width: 100%;
    }

    .topping-column {
        flex: 1 1 100%;
    }

    .checkbox-table .name-column {
        width: 60%;
    }

    .checkbox-table .status-column {
        width: 40%;
    }

    .alert {
        width: 90%;
        right: -100%;
    }

    }

    body {
        font-family: 'Inter', sans-serif;
        background-color: #f8f9fa;
    }
</style>

<div class="card-container">
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="bi bi-check-circle-fill me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="bi bi-exclamation-circle-fill me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="form-card">
                <div class="form-header">
                    <h2 class="mb-0 fw-bold">Cập Nhật Sản Phẩm</h2>
                </div>
                <form asp-action="EditProduct" enctype="multipart/form-data" id="editProductForm">
                    <input type="hidden" asp-for="ID_San_Pham" />
                    <input type="hidden" asp-for="CurrentImagePath" />
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-4 text-center"></div>

                    <div class="form-floating mb-4">
                        <input asp-for="TenSanPham" class="form-control" id="tenSanPham" placeholder="Tên sản phẩm" required />
                        <label asp-for="TenSanPham">Tên sản phẩm</label>
                        <span asp-validation-for="TenSanPham" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <input asp-for="Gia" class="form-control" type="text" id="gia" placeholder="Giá" value="@(Model.Gia.ToString("N0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN")))" required />
                        <label asp-for="Gia">Giá (VND)</label>
                        <span asp-validation-for="Gia" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <input asp-for="SoLuong" class="form-control" type="number" id="soLuong" placeholder="Số lượng" required />
                        <label asp-for="SoLuong">Số lượng</label>
                        <span asp-validation-for="SoLuong" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <textarea asp-for="MoTa" class="form-control" id="moTa" placeholder="Mô tả" style="height: 150px;"></textarea>
                        <label asp-for="MoTa">Mô tả</label>
                        <span asp-validation-for="MoTa" class="text-danger small"></span>
                    </div>

                    <div class="form-floating mb-4">
                        <select asp-for="TrangThai" class="form-select" id="trangThai" required>
                            <option value="true" selected="@(Model.TrangThai ? "selected" : null)">Hoạt động</option>
                            <option value="false" selected="@(Model.TrangThai ? null : "selected")">Không hoạt động</option>
                        </select>
                        <label for="trangThai">Trạng thái</label>
                        <span asp-validation-for="TrangThai" class="text-danger small"></span>
                    </div>

                    <div class="mb-4">
                        <label class="form-label fw-bold">Hình ảnh hiện tại</label>
                        @if (!string.IsNullOrEmpty(Model.CurrentImagePath))
                        {
                            <div class="mb-3 text-center">
                                <img src="@("https://localhost:7169" + Model.CurrentImagePath)" alt="Hình ảnh hiện tại" class="img-fluid" />
                            </div>
                        }
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="changeImageSwitch" />
                            <label class="form-check-label" for="changeImageSwitch">Thay đổi hình ảnh</label>
                        </div>
                        <div id="imageUploadSection" style="display: none;">
                            <label asp-for="Image" class="form-label">Chọn hình ảnh mới</label>
                            <input asp-for="Image" type="file" class="form-control" accept="image/*" />
                            <span asp-validation-for="Image" class="text-danger small"></span>
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Kích thước</label>
                            <button type="button" class="btn btn-outline-primary btn-sm select-all" data-prefix="size">Chọn tất cả</button>
                        </div>
                        <table class="table table-hover table-light align-middle checkbox-table">
                            <tbody>
                                @foreach (var size in ViewBag.Sizes)
                                {
                                    <tr>
                                        <td class="name-column">
                                            <input type="checkbox" name="SelectedSizes" value="@size.ID_Size" class="form-check-input size-checkbox" id="size_@size.ID_Size" @(Model.SelectedSizes.Contains(size.ID_Size) ? "checked" : "") />
                                            <label class="form-check-label" for="size_@size.ID_Size">@size.SizeName (Giá: @string.Format("{0:N0} đ", size.Gia))</label>
                                        </td>
                                        <td class="status-column">
                                            <span class="badge @(size.Trang_Thai ? "badge-active" : "badge-inactive")">@(size.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <span class="text-danger small size-error" id="sizeError"></span>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Topping</label>
                        </div>
                        <div class="topping-container">
                            @{
                                var toppings = ViewBag.Toppings;
                                int itemsPerColumn = (int)Math.Ceiling(toppings.Count / 3.0);
                                for (int col = 0; col < 3; col++)
                                {
                                    <div class="topping-column">
                                        <table class="table table-hover table-light align-middle checkbox-table">
                                            <tbody>
                                                @for (int i = col * itemsPerColumn; i < Math.Min((col + 1) * itemsPerColumn, toppings.Count); i++)
                                                {
                                                    var topping = toppings[i];
                                                    <tr>
                                                        <td class="name-column">
                                                            <input type="checkbox" name="SelectedToppings" value="@topping.ID_Topping" class="form-check-input" id="topping_@topping.ID_Topping" @(Model.SelectedToppings.Contains(topping.ID_Topping) ? "checked" : "") />
                                                            <label class="form-check-label" for="topping_@topping.ID_Topping">@topping.Ten (Giá: @string.Format("{0:N0} đ", topping.Gia))</label>
                                                        </td>
                                                        <td class="status-column">
                                                            <span class="badge @(topping.Trang_Thai ? "badge-active" : "badge-inactive")">@(topping.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Lượng đá</label>
                            <button type="button" class="btn btn-outline-primary btn-sm select-all" data-prefix="luongDa">Chọn tất cả</button>
                        </div>
                        <table class="table table-hover table-light align-middle checkbox-table">
                            <tbody>
                                @foreach (var luongDa in ViewBag.LuongDas)
                                {
                                    <tr>
                                        <td class="name-column">
                                            <input type="checkbox" name="SelectedLuongDas" value="@luongDa.ID_LuongDa" class="form-check-input luongDa-checkbox" id="luongDa_@luongDa.ID_LuongDa" @(Model.SelectedLuongDas.Contains(luongDa.ID_LuongDa) ? "checked" : "") />
                                            <label class="form-check-label" for="luongDa_@luongDa.ID_LuongDa">@luongDa.Ten_LuongDa</label>
                                        </td>
                                        <td class="status-column">
                                            <span class="badge @(luongDa.Trang_Thai ? "badge-active" : "badge-inactive")">@(luongDa.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <span class="text-danger small luongDa-error" id="luongDaError"></span>
                    </div>

                    <div class="mb-4">
                        <div class="d-flex justify-content-between align-items-center mb-3">
                            <label class="form-label fw-bold">Độ ngọt</label>
                            <button type="button" class="btn btn-outline-primary btn-sm select-all" data-prefix="doNgot">Chọn tất cả</button>
                        </div>
                        <table class="table table-hover table-light align-middle checkbox-table">
                            <tbody>
                                @foreach (var doNgot in ViewBag.DoNgots)
                                {
                                    <tr>
                                        <td class="name-column">
                                            <input type="checkbox" name="SelectedDoNgots" value="@doNgot.ID_DoNgot" class="form-check-input doNgot-checkbox" id="doNgot_@doNgot.ID_DoNgot" @(Model.SelectedDoNgots.Contains(doNgot.ID_DoNgot) ? "checked" : "") />
                                            <label class="form-check-label" for="doNgot_@doNgot.ID_DoNgot">@doNgot.Muc_Do</label>
                                        </td>
                                        <td class="status-column">
                                            <span class="badge @(doNgot.Trang_Thai ? "badge-active" : "badge-inactive")">@(doNgot.Trang_Thai ? "Hoạt động" : "Không hoạt động")</span>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <span class="text-danger small doNgot-error" id="doNgotError"></span>
                    </div>

                    <div class="action-buttons">
                        <a asp-action="Index" class="btn-custom btn-back">
                            <i class="bi bi-arrow-left me-2"></i>Quay lại
                        </a>
                        <button type="submit" class="btn-custom btn-submit">
                            <i class="bi bi-check-circle me-2"></i>Cập nhật
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.5/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            // Custom validator cho group checkbox
            $.validator.addMethod("atLeastOneChecked", function(value, element, min) {
                var name = $(element).attr('name');
                return $('input[name="' + name + '"]:checked').length >= min;
            }, "Phải chọn ít nhất {0}.");

            // Hàm định dạng số tiếng Việt
            function formatNumberVN(number) {
                return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ".");
            }

            // Hàm bỏ định dạng để gửi dữ liệu
            function parseNumberVN(value) {
                return parseFloat(value.replace(/\./g, ""));
            }

            // Định dạng giá khi nhập
            $("#gia").on("input", function () {
                let value = $(this).val().replace(/[^\d]/g, "");
                if (value) {
                    $(this).val(formatNumberVN(value));
                }
            });

            // Xử lý trước khi submit
            $("#editProductForm").on("submit", function () {
                let gia = $("#gia").val();
                if (gia) {
                    $("#gia").val(parseNumberVN(gia));
                }
            });

            // Định dạng giá trị ban đầu
            if ($('#gia').val()) {
                let initialValue = $('#gia').val().replace(/[^0-9]/g, '');
                if (initialValue) {
                    $('#gia').val(parseInt(initialValue, 10).toLocaleString('vi-VN'));
                }
            }

            // Custom validator cho file ảnh
            $.validator.addMethod("imageFile", function (value, element) {
                if (!value) return true;
                const allowedExtensions = ["jpg", "jpeg", "png", "gif", "bmp"];
                const extension = value.split(".").pop().toLowerCase();
                return allowedExtensions.includes(extension);
            }, "Vui lòng chọn file ảnh (jpg, jpeg, png, gif, bmp).");

            // Cấu hình jQuery Validation (xóa rules cũ cho groups)
            var validator = $("#editProductForm").validate({
                errorClass: "text-danger",
                highlight: function (element) {
                    $(element).addClass("is-invalid").removeClass("is-valid");
                },
                unhighlight: function (element) {
                    $(element).removeClass("is-invalid").addClass("is-valid");
                },
                errorPlacement: function (error, element) {
                    var name = element.attr("name");
                    if (name === "SelectedSizes") {
                        error.appendTo("#sizeError");
                    } else if (name === "SelectedLuongDas") {
                        error.appendTo("#luongDaError");
                    } else if (name === "SelectedDoNgots") {
                        error.appendTo("#doNgotError");
                    } else {
                        error.insertAfter(element);
                    }
                },
                rules: {
                    TenSanPham: {
                        required: true,
                        maxlength: 100
                    },
                    Gia: {
                        required: true,
                        number: true,
                        min: 1000
                    },
                    SoLuong: {
                        required: true,
                        number: true,
                        min: 1
                    },
                    Image: {
                        imageFile: true
                    }
                    // Rules cho groups sẽ add động bên dưới
                },
                messages: {
                    TenSanPham: {
                        required: "Tên sản phẩm là bắt buộc",
                        maxlength: "Tên sản phẩm không được vượt quá 100 ký tự"
                    },
                    Gia: {
                        required: "Giá là bắt buộc",
                        number: "Giá phải là số hợp lệ",
                        min: "Giá phải lớn hơn hoặc bằng 1.000"
                    },
                    SoLuong: {
                        required: "Số lượng là bắt buộc",
                        number: "Số lượng phải là số hợp lệ",
                        min: "Số lượng phải lớn hơn hoặc bằng 1"
                    },
                    Image: {
                        imageFile: "Vui lòng chọn file ảnh (jpg, jpeg, png, gif, bmp)"
                    }
                }
            });

            // Add custom rules chỉ cho checkbox đầu tiên của mỗi group
            $('input[name="SelectedSizes"]:first').rules('add', {
                atLeastOneChecked: 1
            });
            $('input[name="SelectedLuongDas"]:first').rules('add', {
                atLeastOneChecked: 1
            });
            $('input[name="SelectedDoNgots"]:first').rules('add', {
                atLeastOneChecked: 1
            });

            // Toggle image upload section
            $('#changeImageSwitch').on('change', function () {
                if ($(this).is(':checked')) {
                    $('#imageUploadSection').show();
                    $('#Image').attr('required', 'required');
                } else {
                    $('#imageUploadSection').hide();
                    $('#Image').removeAttr('required');
                }
            });

            // Select all functionality + trigger validation
            $('.select-all').on('click', function () {
                const prefix = $(this).data('prefix');
                const checkboxes = $(`input[id^="${prefix}_"]`);
                const allChecked = checkboxes.toArray().every(cb => cb.checked);
                checkboxes.prop('checked', !allChecked);
                // Trigger validation cho first checkbox của group
                var firstCheckbox;
                if (prefix === 'size') {
                    firstCheckbox = $('input[name="SelectedSizes"]:first');
                } else if (prefix === 'luongDa') {
                    firstCheckbox = $('input[name="SelectedLuongDas"]:first');
                } else if (prefix === 'doNgot') {
                    firstCheckbox = $('input[name="SelectedDoNgots"]:first');
                }
                if (firstCheckbox.length) {
                    firstCheckbox.valid();
                }
            });

            // Trigger validation on checkbox change để show/hide real-time
            $('input[name="SelectedSizes"], input[name="SelectedLuongDas"], input[name="SelectedDoNgots"]').on('change', function() {
                var name = $(this).attr('name');
                var firstCheckbox = $('input[name="' + name + '"]:first');
                if (firstCheckbox.length) {
                    firstCheckbox.valid();
                }
            });
        });
    </script>
}