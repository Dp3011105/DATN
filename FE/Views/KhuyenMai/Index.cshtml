@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model List<FE.Models.KhuyenMaiCrud>
@{
    ViewData["Title"] = "Quản lý khuyến mãi";
    TimeZoneInfo vnTimeZone;
    try
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");
    }
    catch
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Ho_Chi_Minh");
    }
    var currentDate = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, vnTimeZone);
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý khuyến mãi</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        :root {
            --primary: #3B82F6;
            --primary-dark: #2563EB;
            --secondary: #F59E0B;
            --light-bg: #F8FAFC;
            --card-bg: #FFFFFF;
            --text-primary: #1F2937;
            --text-secondary: #6B7280;
            --success: #10B981;
            --danger: #EF4444;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--light-bg);
            color: var(--text-primary);
        }

        .font-playfair {
            font-family: 'Playfair Display', serif;
        }

        .table-container {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: 16px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            border-radius: 12px;
            overflow: hidden;
        }

            .table th, .table td {
                padding: 1rem;
                text-align: left;
                border-bottom: 1px solid #E5E7EB;
            }

            .table th {
                background-color: #F9FAFB;
                font-weight: 600;
                color: var(--text-primary);
            }

            .table tr:last-child td {
                border-bottom: none;
            }

            .table tr:hover {
                background-color: #F3F4F6;
            }

        .action-btn {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .view-btn {
            background-color: #EFF6FF;
            color: var(--primary);
        }

            .view-btn:hover {
                background-color: var(--primary);
                color: white;
            }

        .edit-btn {
            background-color: #FEF3C7;
            color: #D97706;
        }

            .edit-btn:hover {
                background-color: #F59E0B;
                color: white;
            }

        .delete-btn {
            background-color: #FEF2F2;
            color: var(--danger);
        }

            .delete-btn:hover {
                background-color: var(--danger);
                color: white;
            }

        .add-btn {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .add-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(59, 130, 246, 0.25);
            }

        .modal-content {
            border-radius: 20px;
            border: none;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            background: linear-gradient(135deg, #FFFFFF 0%, #F9FAFB 100%);
        }

        .modal-header {
            border-bottom: 1px solid #E5E7EB;
            padding: 1.5rem 2rem;
        }

        .modal-body {
            padding: 2rem;
        }

        .form-label {
            font-weight: 500;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .form-input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #E5E7EB;
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

            .form-input:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);
            }

        .form-checkbox {
            margin-right: 0.5rem;
        }

        .alert-notification {
            border-radius: 12px;
            padding: 1rem 1.25rem;
            display: flex;
            align-items: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            animation: slideIn 0.5s ease-out;
        }

        .alert-success {
            background-color: #ECFDF5;
            color: #065F46;
            border-left: 4px solid #10B981;
        }

        .alert-error {
            background-color: #FEF2F2;
            color: #991B1B;
            border-left: 4px solid #EF4444;
        }

        .close-button {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--text-secondary);
            transition: all 0.2s ease;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

            .close-button:hover {
                background-color: #F3F4F6;
                color: var(--text-primary);
            }

        .save-btn {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .save-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(59, 130, 246, 0.25);
            }

        .responsive-container {
            padding: 1.5rem;
        }

        

        {
            padding: 1rem;
        }

        .table th, .table td {
            padding: 0.75rem;
            font-size: 0.85rem;
        }

        .action-btn {
            padding: 0.4rem 0.8rem;
            font-size: 0.8rem;
        }

        }
    </style>
</head>
<body class="min-h-screen bg-gray-50">
    <div class="container mx-auto py-8 px-4 sm:px-6 lg:px-8 responsive-container">
        @if (TempData["Success"] != null)
        {
            <div class="alert-notification alert-success animate__animated animate__fadeInDown">
                <i class="bi bi-check-circle-fill mr-3 text-xl"></i>
                <div class="flex-1">@TempData["Success"]</div>
                <button type="button" class="close-button" data-bs-dismiss="alert" aria-label="Close">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert-notification alert-error animate__animated animate__fadeInDown">
                <i class="bi bi-exclamation-circle-fill mr-3 text-xl"></i>
                <div class="flex-1">@TempData["Error"]</div>
                <button type="button" class="close-button" data-bs-dismiss="alert" aria-label="Close">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        }

        <div class="flex justify-between items-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-gray-800 font-playfair">Quản lý khuyến mãi</h1>
            <button id="addPromotionBtn" class="add-btn">
                <i class="bi bi-plus-circle mr-2"></i>Thêm khuyến mãi
            </button>
        </div>

        <div class="table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Tên khuyến mãi</th>
                        <th>Ngày bắt đầu</th>
                        <th>Ngày kết thúc</th>
                        <th>Mô tả</th>
                        <th>Trạng thái</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody id="promotionTableBody">
                    @foreach (var km in Model)
                    {
                        <tr>
                            <td>@km.ID_Khuyen_Mai</td>
                            <td>@km.Ten_Khuyen_Mai</td>
                            <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Bat_Dau, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Ket_Thuc, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@(km.Mo_Ta.Length > 50 ? km.Mo_Ta.Substring(0, 50) + "..." : km.Mo_Ta)</td>
                            <td>
                                <span class="badge @(km.Trang_Thai ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                    @(km.Trang_Thai ? "Hoạt động" : "Không hoạt động")
                                </span>
                            </td>
                            <td>
                                <button class="view-btn action-btn view-promotion" data-id="@km.ID_Khuyen_Mai">Xem</button>
                                <button class="edit-btn action-btn edit-promotion" data-id="@km.ID_Khuyen_Mai">Sửa</button>
                                <button class="delete-btn action-btn delete-promotion" data-id="@km.ID_Khuyen_Mai">Xóa</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div class="modal fade" id="promotionModal" tabindex="-1" aria-labelledby="promotionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="text-2xl font-bold text-gray-800 font-playfair" id="promotionModalLabel">Thêm khuyến mãi</h2>
                    <button type="button" class="close-button" data-bs-dismiss="modal" aria-label="Close">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="promotionForm">
                        <div class="mb-4">
                            <label for="promotionName" class="form-label">Tên khuyến mãi</label>
                            <input type="text" id="promotionName" class="form-input" required>
                        </div>
                        <div class="mb-4">
                            <label for="startDate" class="form-label">Ngày bắt đầu</label>
                            <input type="datetime-local" id="startDate" class="form-input" required>
                        </div>
                        <div class="mb-4">
                            <label for="endDate" class="form-label">Ngày kết thúc</label>
                            <input type="datetime-local" id="endDate" class="form-input" required>
                        </div>
                        <div class="mb-4">
                            <label for="description" class="form-label">Mô tả</label>
                            <textarea id="description" class="form-input" rows="4"></textarea>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">
                                <input type="checkbox" id="status" class="form-checkbox" checked>
                                Hoạt động
                            </label>
                        </div>
                        <div class="flex justify-end">
                            <button type="button" class="save-btn" id="savePromotionBtn">Lưu</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="viewPromotionModal" tabindex="-1" aria-labelledby="viewPromotionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="text-2xl font-bold text-gray-800 font-playfair" id="viewPromotionModalLabel">Chi tiết khuyến mãi</h2>
                    <button type="button" class="close-button" data-bs-dismiss="modal" aria-label="Close">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="mb-4">
                        <label class="form-label">Tên khuyến mãi</label>
                        <p id="viewPromotionName" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Ngày bắt đầu</label>
                        <p id="viewStartDate" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Ngày kết thúc</label>
                        <p id="viewEndDate" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Mô tả</label>
                        <p id="viewDescription" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Trạng thái</label>
                        <p id="viewStatus" class="text-gray-600"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addPromotionBtn = document.getElementById('addPromotionBtn');
            const savePromotionBtn = document.getElementById('savePromotionBtn');
            const promotionModal = new bootstrap.Modal(document.getElementById('promotionModal'));
            const viewPromotionModal = new bootstrap.Modal(document.getElementById('viewPromotionModal'));
            const promotionForm = document.getElementById('promotionForm');
            let isEditMode = false;
            let editPromotionId = null;

            function showAlert(message, type) {
                const alert = document.createElement('div');
                alert.className = `alert-notification alert-${type} animate__animated animate__slideInRight fixed top-4 right-4 z-50 max-w-md`;
                alert.innerHTML = `
                    <i class="bi bi-${type === 'success' ? 'check-circle-fill' : 'exclamation-circle-fill'} mr-3 text-xl"></i>
                    <div>${message}</div>
                    <button type="button" class="close-button" onclick="this.parentElement.remove()">
                        <i class="bi bi-x"></i>
                    </button>
                `;
                document.body.appendChild(alert);
                setTimeout(() => {
                    if (alert.parentElement) {
                        alert.remove();
                    }
                }, 3000);
            }

            function formatDateTime(date) {
                const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
                return new Date(date).toLocaleString('vi-VN', options);
            }

            addPromotionBtn.addEventListener('click', function () {
                isEditMode = false;
                editPromotionId = null;
                document.getElementById('promotionModalLabel').textContent = 'Thêm khuyến mãi';
                promotionForm.reset();
                document.getElementById('status').checked = true;
                promotionModal.show();
            });

            savePromotionBtn.addEventListener('click', async function () {
                const name = document.getElementById('promotionName').value.trim();
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;
                const description = document.getElementById('description').value.trim();
                const status = document.getElementById('status').checked;

                // Client-side validation
                if (!name || name === 'string') {
                    showAlert('Tên khuyến mãi không hợp lệ!', 'error');
                    return;
                }
                if (!startDate || !endDate) {
                    showAlert('Vui lòng điền đầy đủ ngày bắt đầu và ngày kết thúc!', 'error');
                    return;
                }
                if (new Date(startDate) >= new Date(endDate)) {
                    showAlert('Ngày kết thúc phải sau ngày bắt đầu!', 'error');
                    return;
                }
                if (isEditMode && !editPromotionId) {
                    showAlert('Không tìm thấy ID khuyến mãi để sửa!', 'error');
                    return;
                }

                const requestData = {
                    iD_Khuyen_Mai: isEditMode ? parseInt(editPromotionId) : 0,
                    ten_Khuyen_Mai: name,
                    ngay_Bat_Dau: new Date(startDate).toISOString(),
                    ngay_Ket_Thuc: new Date(endDate).toISOString(),
                    mo_Ta: description || '',
                    trang_Thai: status
                };

                try {
                    const method = isEditMode ? 'PUT' : 'POST';
                    const url = isEditMode ? `https://localhost:7169/api/KhuyenMai/${editPromotionId}` : 'https://localhost:7169/api/KhuyenMai';
                    console.log(`Sending ${method} request to ${url} with data:`, JSON.stringify(requestData, null, 2));
                    const response = await fetch(url, {
                        method: method,
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(requestData)
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                        console.error(`Error response: Status ${response.status}, Body: ${errorText || 'No response body'}`);
                        throw new Error(`Không thể ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi: ${errorText || response.statusText}`);
                    }

                    showAlert(`Đã ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi thành công!`, 'success');
                    promotionModal.hide();
                    fetchPromotions();
                } catch (error) {
                    console.error(`Lỗi khi ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi:`, error);
                    showAlert(`Lỗi khi ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi: ${error.message}`, 'error');
                }
            });

            async function fetchPromotions() {
                try {
                    const response = await fetch('https://localhost:7169/api/KhuyenMai', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy danh sách khuyến mãi: ${response.statusText}`);
                    }

                    const promotions = await response.json();
                    const tbody = document.getElementById('promotionTableBody');
                    tbody.innerHTML = '';

                    promotions.forEach(p => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${p.iD_Khuyen_Mai}</td>
                            <td>${p.ten_Khuyen_Mai}</td>
                            <td>${formatDateTime(p.ngay_Bat_Dau)}</td>
                            <td>${formatDateTime(p.ngay_Ket_Thuc)}</td>
                            <td>${p.mo_Ta.length > 50 ? p.mo_Ta.substring(0, 50) + '...' : p.mo_Ta}</td>
                            <td>
                                <span class="badge ${p.trang_Thai ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                                    ${p.trang_Thai ? 'Hoạt động' : 'Không hoạt động'}
                                </span>
                            </td>
                            <td>
                                <button class="view-btn action-btn view-promotion" data-id="${p.iD_Khuyen_Mai}">Xem</button>
                                <button class="edit-btn action-btn edit-promotion" data-id="${p.iD_Khuyen_Mai}">Sửa</button>
                                <button class="delete-btn action-btn delete-promotion" data-id="${p.iD_Khuyen_Mai}">Xóa</button>
                            </td>
                        `;
                        tbody.appendChild(row);
                    });

                    document.querySelectorAll('.view-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            fetchPromotionDetails(this.dataset.id);
                        });
                    });

                    document.querySelectorAll('.edit-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            fetchPromotionForEdit(this.dataset.id);
                        });
                    });

                    document.querySelectorAll('.delete-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            deletePromotion(this.dataset.id);
                        });
                    });
                } catch (error) {
                    console.error('Lỗi khi lấy danh sách khuyến mãi:', error);
                    showAlert('Lỗi khi tải danh sách khuyến mãi!', 'error');
                }
            }

            async function fetchPromotionDetails(id) {
                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy chi tiết khuyến mãi: ${response.statusText}`);
                    }

                    const p = await response.json();
                    document.getElementById('viewPromotionName').textContent = p.ten_Khuyen_Mai;
                    document.getElementById('viewStartDate').textContent = formatDateTime(p.ngay_Bat_Dau);
                    document.getElementById('viewEndDate').textContent = formatDateTime(p.ngay_Ket_Thuc);
                    document.getElementById('viewDescription').textContent = p.mo_Ta || 'Không có mô tả';
                    document.getElementById('viewStatus').textContent = p.trang_Thai ? 'Hoạt động' : 'Không hoạt động';
                    viewPromotionModal.show();
                } catch (error) {
                    console.error('Lỗi khi lấy chi tiết khuyến mãi:', error);
                    showAlert('Lỗi khi tải chi tiết khuyến mãi!', 'error');
                }
            }

            async function fetchPromotionForEdit(id) {
                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy chi tiết khuyến mãi để sửa: ${response.statusText}`);
                    }

                    const p = await response.json();
                    document.getElementById('promotionModalLabel').textContent = 'Sửa khuyến mãi';
                    document.getElementById('promotionName').value = p.ten_Khuyen_Mai;
                    document.getElementById('startDate').value = new Date(p.ngay_Bat_Dau).toISOString().slice(0, 16);
                    document.getElementById('endDate').value = new Date(p.ngay_Ket_Thuc).toISOString().slice(0, 16);
                    document.getElementById('description').value = p.mo_Ta || '';
                    document.getElementById('status').checked = p.trang_Thai;
                    isEditMode = true;
                    editPromotionId = p.iD_Khuyen_Mai;
                    console.log('Editing promotion with ID:', editPromotionId);
                    promotionModal.show();
                } catch (error) {
                    console.error('Lỗi khi lấy chi tiết để sửa:', error);
                    showAlert('Lỗi khi tải dữ liệu để sửa!', 'error');
                }
            }

            async function deletePromotion(id) {
                if (!confirm('Bạn có chắc chắn muốn xóa khuyến mãi này?')) return;

                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                        throw new Error(`Không thể xóa khuyến mãi: ${errorText || response.statusText}`);
                    }

                    showAlert('Đã xóa khuyến mãi thành công!', 'success');
                    fetchPromotions();
                } catch (error) {
                    console.error('Lỗi khi xóa khuyến mãi:', error);
                    showAlert('Lỗi khi xóa khuyến mãi!', 'error');
                }
            }

            fetchPromotions();
        });
    </script>
</body>
</html>