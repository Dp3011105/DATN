@* @{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model List<FE.Models.KhuyenMaiCrud>
@{
    ViewData["Title"] = "Quản lý khuyến mãi";
    TimeZoneInfo vnTimeZone;
    try
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");
    }
    catch
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Ho_Chi_Minh");
    }
    var currentDate = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, vnTimeZone);
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý khuyến mãi</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        :root {
            --primary: #3B82F6;
            --primary-dark: #2563EB;
            --secondary: #F59E0B;
            --light-bg: #F8FAFC;
            --card-bg: #FFFFFF;
            --text-primary: #1F2937;
            --text-secondary: #6B7280;
            --success: #10B981;
            --danger: #EF4444;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--light-bg);
            color: var(--text-primary);
        }

        .font-playfair {
            font-family: 'Playfair Display', serif;
        }

        .table-container {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: 16px;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
        }

        .table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
            border-radius: 12px;
            overflow: hidden;
        }

            .table th, .table td {
                padding: 1rem;
                text-align: left;
                border-bottom: 1px solid #E5E7EB;
            }

            .table th {
                background-color: #F9FAFB;
                font-weight: 600;
                color: var(--text-primary);
            }

            .table tr:last-child td {
                border-bottom: none;
            }

            .table tr:hover {
                background-color: #F3F4F6;
            }

        .action-btn {
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-size: 0.875rem;
            font-weight: 500;
            transition: all 0.2s ease;
        }

        .view-btn {
            background-color: #EFF6FF;
            color: var(--primary);
        }

            .view-btn:hover {
                background-color: var(--primary);
                color: white;
            }

        .edit-btn {
            background-color: #FEF3C7;
            color: #D97706;
        }

            .edit-btn:hover {
                background-color: #F59E0B;
                color: white;
            }

        .stop-btn, .activate-btn {
            background-color: #FEF2F2;
            color: var(--danger);
        }

            .stop-btn:hover, .activate-btn:hover {
                background-color: var(--danger);
                color: white;
            }

        .add-btn {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .add-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(59, 130, 246, 0.25);
            }

        .modal-content {
            border-radius: 20px;
            border: none;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            background: linear-gradient(135deg, #FFFFFF 0%, #F9FAFB 100%);
        }

        .modal-header {
            border-bottom: 1px solid #E5E7EB;
            padding: 1.5rem 2rem;
        }

        .modal-body {
            padding: 2rem;
        }

        .form-label {
            font-weight: 500;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .form-input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #E5E7EB;
            border-radius: 8px;
            font-size: 0.9rem;
            transition: all 0.2s ease;
        }

            .form-input:focus {
                outline: none;
                border-color: var(--primary);
                box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.25);
            }

        .form-checkbox {
            margin-right: 0.5rem;
        }

        .alert-notification {
            border-radius: 12px;
            padding: 1rem 1.25rem;
            display: flex;
            align-items: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
            animation: slideIn 0.5s ease-out;
        }

        .alert-success {
            background-color: #ECFDF5;
            color: #065F46;
            border-left: 4px solid #10B981;
        }

        .alert-error {
            background-color: #FEF2F2;
            color: #991B1B;
            border-left: 4px solid #EF4444;
        }

        .close-button {
            background: none;
            border: none;
            font-size: 1.5rem;
            color: var(--text-secondary);
            transition: all 0.2s ease;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

            .close-button:hover {
                background-color: #F3F4F6;
                color: var(--text-primary);
            }

        .save-btn {
            background: linear-gradient(135deg, var(--primary), var(--primary-dark));
            color: white;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }

            .save-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 4px 8px rgba(59, 130, 246, 0.25);
            }

        .tab {
            overflow: hidden;
            border-bottom: 2px solid #E5E7EB;
            margin-bottom: 1.5rem;
        }

            .tab button {
                background-color: transparent;
                float: left;
                border: none;
                outline: none;
                cursor: pointer;
                padding: 0.75rem 1.5rem;
                transition: 0.3s;
                font-size: 1rem;
                font-weight: 500;
                color: var(--text-secondary);
            }

                .tab button:hover {
                    color: var(--primary);
                }

                .tab button.active {
                    color: var(--primary);
                    border-bottom: 2px solid var(--primary);
                }

        .tabcontent {
            display: none;
            animation: fadeEffect 0.5s;
        }

            .tabcontent.active {
                display: block;
            }

       

        {
            opacity: 0;
        }

        to {
            opacity: 1;
        }

        }

      

        {
            padding: 1rem;
        }

        .table th, .table td {
            padding: 0.75rem;
            font-size: 0.85rem;
        }

        .action-btn {
            padding: 0.4rem 0.8rem;
            font-size: 0.8rem;
        }

        }
    </style>
</head>
<body class="min-h-screen bg-gray-50">
    <div class="container mx-auto py-8 px-4 sm:px-6 lg:px-8 responsive-container">
        @if (TempData["Success"] != null)
        {
            <div class="alert-notification alert-success animate__animated animate__fadeInDown">
                <i class="bi bi-check-circle-fill mr-3 text-xl"></i>
                <div class="flex-1">@TempData["Success"]</div>
                <button type="button" class="close-button" data-bs-dismiss="alert" aria-label="Close">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        }
        @if (TempData["Error"] != null)
        {
            <div class="alert-notification alert-error animate__animated animate__fadeInDown">
                <i class="bi bi-exclamation-circle-fill mr-3 text-xl"></i>
                <div class="flex-1">@TempData["Error"]</div>
                <button type="button" class="close-button" data-bs-dismiss="alert" aria-label="Close">
                    <i class="bi bi-x"></i>
                </button>
            </div>
        }

        <div class="flex justify-between items-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-gray-800 font-playfair">Quản lý khuyến mãi</h1>
            <button id="addPromotionBtn" class="add-btn">
                <i class="bi bi-plus-circle mr-2"></i>Thêm khuyến mãi
            </button>
        </div>

        <div class="tab">
            <button class="tablinks active" data-tab="ActivePromotions">Khuyến mãi hoạt động</button>
            <button class="tablinks" data-tab="StoppedPromotions">Khuyến mãi ngừng hoạt động</button>
        </div>

        <div id="ActivePromotions" class="tabcontent active">
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên khuyến mãi</th>
                            <th>Ngày bắt đầu</th>
                            <th>Ngày kết thúc</th>
                            <th>Mô tả</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="activePromotionTableBody">
                        @foreach (var km in Model.Where(k => k.Trang_Thai))
                        {
                            <tr>
                                <td>@km.ID_Khuyen_Mai</td>
                                <td>@km.Ten_Khuyen_Mai</td>
                                <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Bat_Dau, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Ket_Thuc, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@(km.Mo_Ta.Length > 50 ? km.Mo_Ta.Substring(0, 50) + "..." : km.Mo_Ta)</td>
                                <td>
                                    <span class="badge bg-green-100 text-green-800">Hoạt động</span>
                                </td>
                                <td>
                                    <button class="view-btn action-btn view-promotion" data-id="@km.ID_Khuyen_Mai">Xem</button>
                                    <button class="edit-btn action-btn edit-promotion" data-id="@km.ID_Khuyen_Mai">Sửa</button>
                                    <button class="stop-btn action-btn stop-promotion" data-id="@km.ID_Khuyen_Mai">Ngừng</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div id="StoppedPromotions" class="tabcontent">
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên khuyến mãi</th>
                            <th>Ngày bắt đầu</th>
                            <th>Ngày kết thúc</th>
                            <th>Mô tả</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="stoppedPromotionTableBody">
                        @foreach (var km in Model.Where(k => !k.Trang_Thai))
                        {
                            <tr>
                                <td>@km.ID_Khuyen_Mai</td>
                                <td>@km.Ten_Khuyen_Mai</td>
                                <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Bat_Dau, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Ket_Thuc, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@(km.Mo_Ta.Length > 50 ? km.Mo_Ta.Substring(0, 50) + "..." : km.Mo_Ta)</td>
                                <td>
                                    <span class="badge bg-red-100 text-red-800">Không hoạt động</span>
                                </td>
                                <td>
                                    <button class="view-btn action-btn view-promotion" data-id="@km.ID_Khuyen_Mai">Xem</button>
                                    <button class="edit-btn action-btn edit-promotion" data-id="@km.ID_Khuyen_Mai">Sửa</button>
                                    <button class="activate-btn action-btn activate-promotion" data-id="@km.ID_Khuyen_Mai">Kích hoạt</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <div class="modal fade" id="promotionModal" tabindex="-1" aria-labelledby="promotionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="text-2xl font-bold text-gray-800 font-playfair" id="promotionModalLabel">Thêm khuyến mãi</h2>
                    <button type="button" class="close-button" data-bs-dismiss="modal" aria-label="Close">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="promotionForm">
                        <div class="mb-4">
                            <label for="promotionName" class="form-label">Tên khuyến mãi</label>
                            <input type="text" id="promotionName" class="form-input" required>
                        </div>
                        <div class="mb-4">
                            <label for="startDate" class="form-label">Ngày bắt đầu</label>
                            <input type="datetime-local" id="startDate" class="form-input" required>
                        </div>
                        <div class="mb-4">
                            <label for="endDate" class="form-label">Ngày kết thúc</label>
                            <input type="datetime-local" id="endDate" class="form-input" required>
                        </div>
                        <div class="mb-4">
                            <label for="description" class="form-label">Mô tả</label>
                            <textarea id="description" class="form-input" rows="4"></textarea>
                        </div>
                        <div class="mb-4">
                            <label class="form-label">
                                <input type="checkbox" id="status" class="form-checkbox" checked>
                                Hoạt động
                            </label>
                        </div>
                        <div class="flex justify-end">
                            <button type="button" class="save-btn" id="savePromotionBtn">Lưu</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="viewPromotionModal" tabindex="-1" aria-labelledby="viewPromotionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="text-2xl font-bold text-gray-800 font-playfair" id="viewPromotionModalLabel">Chi tiết khuyến mãi</h2>
                    <button type="button" class="close-button" data-bs-dismiss="modal" aria-label="Close">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="mb-4">
                        <label class="form-label">Tên khuyến mãi</label>
                        <p id="viewPromotionName" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Ngày bắt đầu</label>
                        <p id="viewStartDate" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Ngày kết thúc</label>
                        <p id="viewEndDate" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Mô tả</label>
                        <p id="viewDescription" class="text-gray-600"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Trạng thái</label>
                        <p id="viewStatus" class="text-gray-600"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addPromotionBtn = document.getElementById('addPromotionBtn');
            const savePromotionBtn = document.getElementById('savePromotionBtn');
            const promotionModal = new bootstrap.Modal(document.getElementById('promotionModal'));
            const viewPromotionModal = new bootstrap.Modal(document.getElementById('viewPromotionModal'));
            const promotionForm = document.getElementById('promotionForm');
            let isEditMode = false;
            let editPromotionId = null;

            function showAlert(message, type) {
                const alert = document.createElement('div');
                alert.className = `alert-notification alert-${type} animate__animated animate__slideInRight fixed top-4 right-4 z-50 max-w-md`;
                alert.innerHTML = `
                    <i class="bi bi-${type === 'success' ? 'check-circle-fill' : 'exclamation-circle-fill'} mr-3 text-xl"></i>
                    <div>${message}</div>
                    <button type="button" class="close-button" onclick="this.parentElement.remove()">
                        <i class="bi bi-x"></i>
                    </button>
                `;
                document.body.appendChild(alert);
                setTimeout(() => {
                    if (alert.parentElement) {
                        alert.remove();
                    }
                }, 3000);
            }

            function formatDateTime(date) {
                const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
                return new Date(date).toLocaleString('vi-VN', options);
            }

            function openTab(evt, tabName) {
                const tabcontent = document.getElementsByClassName('tabcontent');
                for (let i = 0; i < tabcontent.length; i++) {
                    tabcontent[i].classList.remove('active');
                }
                const tablinks = document.getElementsByClassName('tablinks');
                for (let i = 0; i < tablinks.length; i++) {
                    tablinks[i].classList.remove('active');
                }
                document.getElementById(tabName).classList.add('active');
                evt.currentTarget.classList.add('active');
            }

            // Gán sự kiện cho các nút tab
            document.querySelectorAll('.tablinks').forEach(button => {
                button.addEventListener('click', function (event) {
                    openTab(event, this.dataset.tab);
                });
            });

            addPromotionBtn.addEventListener('click', function () {
                isEditMode = false;
                editPromotionId = null;
                document.getElementById('promotionModalLabel').textContent = 'Thêm khuyến mãi';
                promotionForm.reset();
                document.getElementById('status').checked = true;
                promotionModal.show();
            });

            savePromotionBtn.addEventListener('click', async function () {
                const name = document.getElementById('promotionName').value.trim();
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;
                const description = document.getElementById('description').value.trim();
                const status = document.getElementById('status').checked;

                if (!name || name === 'string') {
                    showAlert('Tên khuyến mãi không hợp lệ!', 'error');
                    return;
                }
                if (!startDate || !endDate) {
                    showAlert('Vui lòng điền đầy đủ ngày bắt đầu và ngày kết thúc!', 'error');
                    return;
                }
                if (new Date(startDate) >= new Date(endDate)) {
                    showAlert('Ngày kết thúc phải sau ngày bắt đầu!', 'error');
                    return;
                }
                if (isEditMode && !editPromotionId) {
                    showAlert('Không tìm thấy ID khuyến mãi để sửa!', 'error');
                    return;
                }

                const requestData = {
                    iD_Khuyen_Mai: isEditMode ? parseInt(editPromotionId) : 0,
                    ten_Khuyen_Mai: name,
                    ngay_Bat_Dau: new Date(startDate).toISOString(),
                    ngay_Ket_Thuc: new Date(endDate).toISOString(),
                    mo_Ta: description || '',
                    trang_Thai: status
                };

                try {
                    const method = isEditMode ? 'PUT' : 'POST';
                    const url = isEditMode ? `https://localhost:7169/api/KhuyenMai/${editPromotionId}` : 'https://localhost:7169/api/KhuyenMai';
                    const response = await fetch(url, {
                        method: method,
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(requestData)
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                        throw new Error(`Không thể ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi: ${errorText || response.statusText}`);
                    }

                    showAlert(`Đã ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi thành công!`, 'success');
                    promotionModal.hide();
                    fetchPromotions();
                } catch (error) {
                    console.error(`Lỗi khi ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi:`, error);
                    showAlert(`Lỗi khi ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi: ${error.message}`, 'error');
                }
            });

            async function fetchPromotions() {
                try {
                    const response = await fetch('https://localhost:7169/api/KhuyenMai', {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy danh sách khuyến mãi: ${response.statusText}`);
                    }

                    const promotions = await response.json();
                    const activeTbody = document.getElementById('activePromotionTableBody');
                    const stoppedTbody = document.getElementById('stoppedPromotionTableBody');
                    activeTbody.innerHTML = '';
                    stoppedTbody.innerHTML = '';

                    promotions.forEach(p => {
                        const tbody = p.trang_Thai ? activeTbody : stoppedTbody;
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${p.iD_Khuyen_Mai}</td>
                            <td>${p.ten_Khuyen_Mai}</td>
                            <td>${formatDateTime(p.ngay_Bat_Dau)}</td>
                            <td>${formatDateTime(p.ngay_Ket_Thuc)}</td>
                            <td>${p.mo_Ta.length > 50 ? p.mo_Ta.substring(0, 50) + '...' : p.mo_Ta}</td>
                            <td>
                                <span class="badge ${p.trang_Thai ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}">
                                    ${p.trang_Thai ? 'Hoạt động' : 'Không hoạt động'}
                                </span>
                            </td>
                            <td>
                                <button class="view-btn action-btn view-promotion" data-id="${p.iD_Khuyen_Mai}">Xem</button>
                                <button class="edit-btn action-btn edit-promotion" data-id="${p.iD_Khuyen_Mai}">Sửa</button>
                                ${p.trang_Thai ?
                                    `<button class="stop-btn action-btn stop-promotion" data-id="${p.iD_Khuyen_Mai}">Ngừng</button>` :
                                    `<button class="activate-btn action-btn activate-promotion" data-id="${p.iD_Khuyen_Mai}">Kích hoạt</button>`}
                            </td>
                        `;
                        tbody.appendChild(row);
                    });

                    document.querySelectorAll('.view-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            fetchPromotionDetails(this.dataset.id);
                        });
                    });

                    document.querySelectorAll('.edit-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            fetchPromotionForEdit(this.dataset.id);
                        });
                    });

                    document.querySelectorAll('.stop-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            updatePromotionStatus(this.dataset.id, false);
                        });
                    });

                    document.querySelectorAll('.activate-promotion').forEach(btn => {
                        btn.addEventListener('click', function () {
                            updatePromotionStatus(this.dataset.id, true);
                        });
                    });
                } catch (error) {
                    console.error('Lỗi khi lấy danh sách khuyến mãi:', error);
                    showAlert('Lỗi khi tải danh sách khuyến mãi!', 'error');
                }
            }

            async function fetchPromotionDetails(id) {
                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy chi tiết khuyến mãi: ${response.statusText}`);
                    }

                    const p = await response.json();
                    document.getElementById('viewPromotionName').textContent = p.ten_Khuyen_Mai;
                    document.getElementById('viewStartDate').textContent = formatDateTime(p.ngay_Bat_Dau);
                    document.getElementById('viewEndDate').textContent = formatDateTime(p.ngay_Ket_Thuc);
                    document.getElementById('viewDescription').textContent = p.mo_Ta || 'Không có mô tả';
                    document.getElementById('viewStatus').textContent = p.trang_Thai ? 'Hoạt động' : 'Không hoạt động';
                    viewPromotionModal.show();
                } catch (error) {
                    console.error('Lỗi khi lấy chi tiết khuyến mãi:', error);
                    showAlert('Lỗi khi tải chi tiết khuyến mãi!', 'error');
                }
            }

            async function fetchPromotionForEdit(id) {
                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy chi tiết khuyến mãi để sửa: ${response.statusText}`);
                    }

                    const p = await response.json();
                    document.getElementById('promotionModalLabel').textContent = 'Sửa khuyến mãi';
                    document.getElementById('promotionName').value = p.ten_Khuyen_Mai;
                    document.getElementById('startDate').value = new Date(p.ngay_Bat_Dau).toISOString().slice(0, 16);
                    document.getElementById('endDate').value = new Date(p.ngay_Ket_Thuc).toISOString().slice(0, 16);
                    document.getElementById('description').value = p.mo_Ta || '';
                    document.getElementById('status').checked = p.trang_Thai;
                    isEditMode = true;
                    editPromotionId = p.iD_Khuyen_Mai;
                    promotionModal.show();
                } catch (error) {
                    console.error('Lỗi khi lấy chi tiết để sửa:', error);
                    showAlert('Lỗi khi tải dữ liệu để sửa!', 'error');
                }
            }

            async function updatePromotionStatus(id, status) {
                if (!confirm(`Bạn có chắc chắn muốn ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi này?`)) return;

                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (!response.ok) {
                        throw new Error(`Không thể lấy dữ liệu khuyến mãi: ${response.statusText}`);
                    }

                    const promotion = await response.json();
                    const requestData = {
                        iD_Khuyen_Mai: parseInt(id),
                        ten_Khuyen_Mai: promotion.ten_Khuyen_Mai,
                        ngay_Bat_Dau: promotion.ngay_Bat_Dau,
                        ngay_Ket_Thuc: promotion.ngay_Ket_Thuc,
                        mo_Ta: promotion.mo_Ta,
                        trang_Thai: status
                    };

                    const updateResponse = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(requestData)
                    });

                    if (!updateResponse.ok) {
                        const errorText = await updateResponse.text();
                        throw new Error(`Không thể ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi: ${errorText || updateResponse.statusText}`);
                    }

                    showAlert(`Đã ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi thành công!`, 'success');
                    fetchPromotions();
                } catch (error) {
                    console.error(`Lỗi khi ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi:`, error);
                    showAlert(`Lỗi khi ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi!`, 'error');
                }
            }

            fetchPromotions();
        });
    </script>
</body>
</html> *@








@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model List<FE.Models.KhuyenMaiCrud>
@{
    ViewData["Title"] = "Quản lý khuyến mãi";
    TimeZoneInfo vnTimeZone;
    try
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");
    }
    catch
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Ho_Chi_Minh");
    }
    var currentDate = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, vnTimeZone);
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý khuyến mãi</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:wght@400;700&family=Roboto:wght@300;400;500&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        :root {
            --primary: #1D4ED8;
            --primary-dark: #1E40AF;
            --secondary: #D97706;
            --success: #059669;
            --danger: #DC2626;
            --light-bg: #F8FAFC;
            --card-bg: #FFFFFF;
            --text-primary: #111827;
            --text-secondary: #4B5563;
        }

        body {
            font-family: 'Roboto', sans-serif;
            background-color: var(--light-bg);
            color: var(--text-primary);
        }

        .font-playfair {
            font-family: 'Playfair Display', serif;
        }

        /* Stat Cards */
        .stat-card {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            border-radius: 20px;
            padding: 1.5rem;
            text-align: center;
            box-shadow: 0 8px 25px rgba(29, 78, 216, 0.15);
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

            .stat-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                right: 0;
                height: 4px;
                background: linear-gradient(90deg, white 0%, rgba(255,255,255,0.5) 100%);
            }

            .stat-card:hover {
                transform: scale(1.05);
                box-shadow: 0 12px 35px rgba(29, 78, 216, 0.25);
            }

            .stat-card.success {
                background: linear-gradient(135deg, var(--success) 0%, #047857 100%);
                box-shadow: 0 8px 25px rgba(5, 150, 105, 0.15);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }

                .stat-card.success:hover {
                    box-shadow: 0 12px 35px rgba(5, 150, 105, 0.25);
                }

            .stat-card.warning {
                background: linear-gradient(135deg, var(--secondary) 0%, #B45309 100%);
                box-shadow: 0 8px 25px rgba(217, 119, 6, 0.15);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }

                .stat-card.warning:hover {
                    box-shadow: 0 12px 35px rgba(217, 119, 6, 0.25);
                }

            .stat-card.danger {
                background: linear-gradient(135deg, var(--danger) 0%, #B91C1C 100%);
                box-shadow: 0 8px 25px rgba(220, 38, 38, 0.15);
                text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
            }

                .stat-card.danger:hover {
                    box-shadow: 0 12px 35px rgba(220, 38, 38, 0.25);
                }

        .stat-number {
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.4);
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.95;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        /* Table */
        .table-container {
            background: var(--card-bg);
            padding: 1.5rem;
            border-radius: 20px;
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.08);
            margin-bottom: 2rem;
            transition: all 0.3s ease;
        }

            .table-container:hover {
                box-shadow: 0 12px 35px rgba(0, 0, 0, 0.12);
            }

        .table thead th {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            font-weight: 600;
            border: none;
            padding: 1rem;
            border-radius: 16px 16px 0 0;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        .table tbody tr {
            transition: all 0.3s ease;
        }

            .table tbody tr:hover {
                background: linear-gradient(135deg, #EFF6FF 0%, #DBEAFE 100%);
                transform: translateY(-1px);
                box-shadow: 0 4px 12px rgba(29, 78, 216, 0.1);
            }

        .table td {
            padding: 1rem;
            border-bottom: 1px solid #E5E7EB;
            vertical-align: middle;
        }

        .badge {
            padding: 0.5rem 1rem;
            border-radius: 50px;
            font-size: 0.8rem;
            font-weight: 500;
            color: white;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        .badge-success {
            background: linear-gradient(135deg, var(--success) 0%, #047857 100%);
        }

        .badge-danger {
            background: linear-gradient(135deg, var(--danger) 0%, #B91C1C 100%);
        }

        /* Buttons - Pill Shape */
        .btn-pill {
            border-radius: 50px;
            padding: 0.5rem 1.5rem;
            font-weight: 500;
            transition: all 0.3s ease;
            border: none;
            font-size: 0.875rem;
        }

            .btn-pill:hover {
                transform: translateY(-2px);
                box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);
            }

        .btn-primary-pill {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        .btn-secondary-pill {
            background: linear-gradient(135deg, #F3F4F6 0%, #E5E7EB 100%);
            color: var(--text-primary);
        }

        .btn-success-pill {
            background: linear-gradient(135deg, var(--success) 0%, #047857 100%);
            color: white;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        .btn-danger-pill {
            background: linear-gradient(135deg, var(--danger) 0%, #B91C1C 100%);
            color: white;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        .btn-warning-pill {
            background: linear-gradient(135deg, var(--secondary) 0%, #B45309 100%);
            color: white;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        /* Modal Enhancements */
        .modal {
            backdrop-filter: blur(8px);
            -webkit-backdrop-filter: blur(8px);
        }

            .modal.fade .modal-dialog {
                transition: all 0.4s ease;
                transform: scale(0.9) translateY(20px);
            }

            .modal.show .modal-dialog {
                transform: scale(1) translateY(0);
            }

        .modal-content {
            border-radius: 20px;
            border: none;
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.2);
            background: linear-gradient(135deg, #FFFFFF 0%, #F8FAFC 100%);
            overflow: hidden;
        }

        .modal-header {
            background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
            color: white;
            border: none;
            padding: 1.5rem 2rem;
            text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
        }

        .modal-body {
            padding: 2rem;
        }

        .form-label {
            font-weight: 500;
            color: var(--text-primary);
            margin-bottom: 0.5rem;
        }

        .form-control {
            border-radius: 12px;
            border: 1px solid #E5E7EB;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

            .form-control:focus {
                border-color: var(--primary);
                box-shadow: 0 0 0 0.25rem rgba(29, 78, 216, 0.25);
            }

        /* Alerts */
        .alert-notification {
            border-radius: 16px;
            padding: 1rem 1.5rem;
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
            animation: slideInDown 0.5s ease-out;
            color: #000;
            font-weight: 500;
        }

        .alert-success {
            background: linear-gradient(135deg, #D1FAE5 0%, #A7F3D0 100%);
            border-left: 4px solid var(--success);
            color: #065F46;
        }

        .alert-danger {
            background: linear-gradient(135deg, #FECACA 0%, #FCA5A5 100%);
            border-left: 4px solid var(--danger);
            color: #991B1B;
        }

        .btn-close-custom {
            background: rgba(255,255,255,0.2);
            border: none;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            color: white;
            transition: all 0.3s ease;
        }

            .btn-close-custom:hover {
                background: rgba(255,255,255,0.3);
                transform: scale(1.1);
            }

        /* Tabs */
        .nav-tabs {
            border: none;
            margin-bottom: 1.5rem;
        }

            .nav-tabs .nav-link {
                border: none;
                border-radius: 12px 12px 0 0;
                color: var(--text-secondary);
                font-weight: 500;
                transition: all 0.3s ease;
                margin-right: 0.5rem;
            }

                .nav-tabs .nav-link:hover {
                    color: var(--primary);
                    background: linear-gradient(135deg, #EFF6FF 0%, #DBEAFE 100%);
                }

                .nav-tabs .nav-link.active {
                    color: white;
                    background: linear-gradient(135deg, var(--primary) 0%, var(--primary-dark) 100%);
                    border-color: transparent;
                    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
                }

        .tab-content {
            animation: fadeIn 0.5s ease-in;
        }

        /* Toast Alert Position Fix */
        .toast-alert {
            position: fixed;
            top: 20px;
            left: 20px;
            z-index: 1055;
            max-width: 350px;
        }

        /* Smaller Screens Adjustments (No media ) */
        .stat-number {
            font-size: 2rem;
        }

        .table th, .table td {
            padding: 0.75rem;
            font-size: 0.85rem;
        }

        .btn-pill {
            padding: 0.4rem 1rem;
            font-size: 0.8rem;
        }
    </style>
</head>
<body class="min-vh-100 bg-light">
    <div class="container-fluid px-4 py-4">
        <!-- Header -->
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="h2 fw-bold text-dark font-playfair mb-0">Quản lý khuyến mãi</h1>
            <button id="addPromotionBtn" class="btn btn-primary-pill d-flex align-items-center">
                <i class="bi bi-plus-circle me-2"></i>Thêm khuyến mãi
            </button>
        </div>

        <!-- Stat Cards -->
        <div class="row mb-4 g-4">
            <div class="col-lg-3 col-md-6">
                <div class="stat-card">
                    <div class="stat-number">@Model.Count</div>
                    <div class="stat-label">Tổng khuyến mãi</div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="stat-card success">
                    <div class="stat-number">@Model.Count(k => k.Trang_Thai)</div>
                    <div class="stat-label">Hoạt động</div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="stat-card danger">
                    <div class="stat-number">@Model.Count(k => !k.Trang_Thai)</div>
                    <div class="stat-label">Ngừng hoạt động</div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="stat-card warning">
                    <div class="stat-number">@Model.Count(k => TimeZoneInfo.ConvertTimeFromUtc(k.Ngay_Ket_Thuc, vnTimeZone) < currentDate)</div>
                    <div class="stat-label">Hết hạn</div>
                </div>
            </div>
        </div>

        <!-- Tabs -->
        <ul class="nav nav-tabs mb-4" id="promotionTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="active-tab" data-bs-toggle="tab" data-bs-target="#activePromotions" type="button" role="tab">Khuyến mãi hoạt động</button>
            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="stopped-tab" data-bs-toggle="tab" data-bs-target="#stoppedPromotions" type="button" role="tab">Khuyến mãi ngừng hoạt động</button>
            </li>
        </ul>

        <div class="tab-content" id="promotionTabContent">
            <!-- Active Promotions Tab -->
            <div class="tab-pane fade show active" id="activePromotions" role="tabpanel">
                <div class="table-container">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Tên khuyến mãi</th>
                                <th>Ngày bắt đầu</th>
                                <th>Ngày kết thúc</th>
                                <th>Mô tả</th>
                                <th>Trạng thái</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody id="activePromotionTableBody">
                            @foreach (var km in Model.Where(k => k.Trang_Thai))
                            {
                                <tr>
                                    <td>@km.ID_Khuyen_Mai</td>
                                    <td>@km.Ten_Khuyen_Mai</td>
                                    <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Bat_Dau, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Ket_Thuc, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@(km.Mo_Ta.Length > 50 ? km.Mo_Ta.Substring(0, 50) + "..." : km.Mo_Ta)</td>
                                    <td><span class="badge badge-success">Hoạt động</span></td>
                                    <td>
                                        <button class="btn btn-secondary-pill me-2 view-promotion" data-id="@km.ID_Khuyen_Mai"><i class="bi bi-eye"></i> Xem</button>
                                        <button class="btn btn-warning-pill me-2 edit-promotion" data-id="@km.ID_Khuyen_Mai"><i class="bi bi-pencil"></i> Sửa</button>
                                        <button class="btn btn-danger-pill stop-promotion" data-id="@km.ID_Khuyen_Mai"><i class="bi bi-stop-circle"></i> Ngừng</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Stopped Promotions Tab -->
            <div class="tab-pane fade" id="stoppedPromotions" role="tabpanel">
                <div class="table-container">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Tên khuyến mãi</th>
                                <th>Ngày bắt đầu</th>
                                <th>Ngày kết thúc</th>
                                <th>Mô tả</th>
                                <th>Trạng thái</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody id="stoppedPromotionTableBody">
                            @foreach (var km in Model.Where(k => !k.Trang_Thai))
                            {
                                <tr>
                                    <td>@km.ID_Khuyen_Mai</td>
                                    <td>@km.Ten_Khuyen_Mai</td>
                                    <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Bat_Dau, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@TimeZoneInfo.ConvertTimeFromUtc(km.Ngay_Ket_Thuc, vnTimeZone).ToString("dd/MM/yyyy HH:mm")</td>
                                    <td>@(km.Mo_Ta.Length > 50 ? km.Mo_Ta.Substring(0, 50) + "..." : km.Mo_Ta)</td>
                                    <td><span class="badge badge-danger">Không hoạt động</span></td>
                                    <td>
                                        <button class="btn btn-secondary-pill me-2 view-promotion" data-id="@km.ID_Khuyen_Mai"><i class="bi bi-eye"></i> Xem</button>
                                        <button class="btn btn-warning-pill me-2 edit-promotion" data-id="@km.ID_Khuyen_Mai"><i class="bi bi-pencil"></i> Sửa</button>
                                        <button class="btn btn-success-pill activate-promotion" data-id="@km.ID_Khuyen_Mai"><i class="bi bi-play-circle"></i> Kích hoạt</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Add/Edit Promotion Modal -->
    <div class="modal fade" id="promotionModal" tabindex="-1" aria-labelledby="promotionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title fs-4 fw-bold mb-0 font-playfair" id="promotionModalLabel">Thêm khuyến mãi</h2>
                    <button type="button" class="btn-close-custom" data-bs-dismiss="modal" aria-label="Close">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="promotionForm">
                        <div class="mb-3">
                            <label for="promotionName" class="form-label">Tên khuyến mãi</label>
                            <input type="text" class="form-control" id="promotionName" required>
                        </div>
                        <div class="mb-3">
                            <label for="startDate" class="form-label">Ngày bắt đầu</label>
                            <input type="datetime-local" class="form-control" id="startDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="endDate" class="form-label">Ngày kết thúc</label>
                            <input type="datetime-local" class="form-control" id="endDate" required>
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Mô tả</label>
                            <textarea class="form-control" id="description" rows="4"></textarea>
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="status" checked>
                            <label class="form-check-label" for="status">Hoạt động</label>
                        </div>
                        <div class="d-flex justify-content-end">
                            <button type="button" class="btn btn-primary-pill" id="savePromotionBtn">Lưu</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- View Promotion Modal -->
    <div class="modal fade" id="viewPromotionModal" tabindex="-1" aria-labelledby="viewPromotionModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h2 class="modal-title fs-4 fw-bold mb-0 font-playfair" id="viewPromotionModalLabel">Chi tiết khuyến mãi</h2>
                    <button type="button" class="btn-close-custom" data-bs-dismiss="modal" aria-label="Close">
                        <i class="bi bi-x"></i>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Tên khuyến mãi</label>
                        <p class="form-control-plaintext" id="viewPromotionName"></p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ngày bắt đầu</label>
                        <p class="form-control-plaintext" id="viewStartDate"></p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Ngày kết thúc</label>
                        <p class="form-control-plaintext" id="viewEndDate"></p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Mô tả</label>
                        <p class="form-control-plaintext" id="viewDescription"></p>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Trạng thái</label>
                        <p class="form-control-plaintext" id="viewStatus"></p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Toast Container for Alerts -->
    <div class="toast-container position-fixed top-0 start-0 p-3">
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const addPromotionBtn = document.getElementById('addPromotionBtn');
            const savePromotionBtn = document.getElementById('savePromotionBtn');
            const promotionModal = new bootstrap.Modal(document.getElementById('promotionModal'));
            const viewPromotionModal = new bootstrap.Modal(document.getElementById('viewPromotionModal'));
            const promotionForm = document.getElementById('promotionForm');
            let isEditMode = false;
            let editPromotionId = null;

            function showAlert(message, type) {
                const toastContainer = document.querySelector('.toast-container');
                const toast = document.createElement('div');
                toast.className = `toast align-items-center text-white bg-${type === 'success' ? 'success' : 'danger'} border-0 alert-notification toast-alert animate__animated animate__slideInDown`;
                toast.setAttribute('role', 'alert');
                toast.innerHTML = `
                    <div class="d-flex">
                        <div class="toast-body">
                            <i class="bi bi-${type === 'success' ? 'check-circle-fill' : 'exclamation-circle-fill'} me-2"></i>
                            ${message}
                        </div>
                        <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
                    </div>
                `;
                toastContainer.appendChild(toast);
                const bsToast = new bootstrap.Toast(toast);
                bsToast.show();
                toast.addEventListener('hidden.bs.toast', () => toast.remove());
            }

            function formatDateTime(date) {
                const options = { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' };
                return new Date(date).toLocaleString('vi-VN', options);
            }

            addPromotionBtn.addEventListener('click', function () {
                isEditMode = false;
                editPromotionId = null;
                document.getElementById('promotionModalLabel').textContent = 'Thêm khuyến mãi';
                promotionForm.reset();
                document.getElementById('status').checked = true;
                promotionModal.show();
            });

            savePromotionBtn.addEventListener('click', async function () {
                const name = document.getElementById('promotionName').value.trim();
                const startDate = document.getElementById('startDate').value;
                const endDate = document.getElementById('endDate').value;
                const description = document.getElementById('description').value.trim();
                const status = document.getElementById('status').checked;

                if (!name || name === 'string') {
                    showAlert('Tên khuyến mãi không hợp lệ!', 'error');
                    return;
                }
                if (!startDate || !endDate) {
                    showAlert('Vui lòng điền đầy đủ ngày bắt đầu và ngày kết thúc!', 'error');
                    return;
                }
                if (new Date(startDate) >= new Date(endDate)) {
                    showAlert('Ngày kết thúc phải sau ngày bắt đầu!', 'error');
                    return;
                }
                if (isEditMode && !editPromotionId) {
                    showAlert('Không tìm thấy ID khuyến mãi để sửa!', 'error');
                    return;
                }

                const requestData = {
                    iD_Khuyen_Mai: isEditMode ? parseInt(editPromotionId) : 0,
                    ten_Khuyen_Mai: name,
                    ngay_Bat_Dau: new Date(startDate).toISOString(),
                    ngay_Ket_Thuc: new Date(endDate).toISOString(),
                    mo_Ta: description || '',
                    trang_Thai: status
                };

                try {
                    const method = isEditMode ? 'PUT' : 'POST';
                    const url = isEditMode ? `https://localhost:7169/api/KhuyenMai/${editPromotionId}` : 'https://localhost:7169/api/KhuyenMai';
                    const response = await fetch(url, {
                        method: method,
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(requestData)
                    });

                    if (!response.ok) {
                        const errorText = await response.text();
                        throw new Error(`Không thể ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi: ${errorText || response.statusText}`);
                    }

                    showAlert(`Đã ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi thành công!`, 'success');
                    promotionModal.hide();
                    fetchPromotions();
                } catch (error) {
                    console.error(`Lỗi khi ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi:`, error);
                    showAlert(`Lỗi khi ${isEditMode ? 'sửa' : 'thêm'} khuyến mãi: ${error.message}`, 'error');
                }
            });

            async function fetchPromotions() {
                try {
                    const response = await fetch('https://localhost:7169/api/KhuyenMai', {
                        method: 'GET',
                        headers: { 'Content-Type': 'application/json' }
                    });

                    if (!response.ok) throw new Error(`Không thể lấy danh sách khuyến mãi: ${response.statusText}`);

                    const promotions = await response.json();
                    const activeTbody = document.getElementById('activePromotionTableBody');
                    const stoppedTbody = document.getElementById('stoppedPromotionTableBody');
                    activeTbody.innerHTML = '';
                    stoppedTbody.innerHTML = '';

                    promotions.forEach(p => {
                        const tbody = p.trang_Thai ? activeTbody : stoppedTbody;
                        const row = document.createElement('tr');
                        const badgeClass = p.trang_Thai ? 'badge-success' : 'badge-danger';
                        const statusText = p.trang_Thai ? 'Hoạt động' : 'Không hoạt động';
                        const actionBtn = p.trang_Thai
                            ? `<button class="btn btn-danger-pill stop-promotion" data-id="${p.iD_Khuyen_Mai}"><i class="bi bi-stop-circle"></i> Ngừng</button>`
                            : `<button class="btn btn-success-pill activate-promotion" data-id="${p.iD_Khuyen_Mai}"><i class="bi bi-play-circle"></i> Kích hoạt</button>`;
                        row.innerHTML = `
                            <td>${p.iD_Khuyen_Mai}</td>
                            <td>${p.ten_Khuyen_Mai}</td>
                            <td>${formatDateTime(p.ngay_Bat_Dau)}</td>
                            <td>${formatDateTime(p.ngay_Ket_Thuc)}</td>
                            <td>${p.mo_Ta.length > 50 ? p.mo_Ta.substring(0, 50) + '...' : p.mo_Ta}</td>
                            <td><span class="badge ${badgeClass}">${statusText}</span></td>
                            <td>
                                <button class="btn btn-secondary-pill me-2 view-promotion" data-id="${p.iD_Khuyen_Mai}"><i class="bi bi-eye"></i> Xem</button>
                                <button class="btn btn-warning-pill me-2 edit-promotion" data-id="${p.iD_Khuyen_Mai}"><i class="bi bi-pencil"></i> Sửa</button>
                                ${actionBtn}
                            </td>
                        `;
                        tbody.appendChild(row);
                    });

                    // Re-attach event listeners
                    document.querySelectorAll('.view-promotion').forEach(btn => btn.addEventListener('click', function() { fetchPromotionDetails(this.dataset.id); }));
                    document.querySelectorAll('.edit-promotion').forEach(btn => btn.addEventListener('click', function() { fetchPromotionForEdit(this.dataset.id); }));
                    document.querySelectorAll('.stop-promotion').forEach(btn => btn.addEventListener('click', function() { updatePromotionStatus(this.dataset.id, false); }));
                    document.querySelectorAll('.activate-promotion').forEach(btn => btn.addEventListener('click', function() { updatePromotionStatus(this.dataset.id, true); }));
                } catch (error) {
                    console.error('Lỗi khi lấy danh sách khuyến mãi:', error);
                    showAlert('Lỗi khi tải danh sách khuyến mãi!', 'error');
                }
            }

            async function fetchPromotionDetails(id) {
                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`);
                    if (!response.ok) throw new Error(`Không thể lấy chi tiết khuyến mãi: ${response.statusText}`);
                    const p = await response.json();
                    document.getElementById('viewPromotionName').textContent = p.ten_Khuyen_Mai;
                    document.getElementById('viewStartDate').textContent = formatDateTime(p.ngay_Bat_Dau);
                    document.getElementById('viewEndDate').textContent = formatDateTime(p.ngay_Ket_Thuc);
                    document.getElementById('viewDescription').textContent = p.mo_Ta || 'Không có mô tả';
                    document.getElementById('viewStatus').textContent = p.trang_Thai ? 'Hoạt động' : 'Không hoạt động';
                    viewPromotionModal.show();
                } catch (error) {
                    console.error('Lỗi khi lấy chi tiết khuyến mãi:', error);
                    showAlert('Lỗi khi tải chi tiết khuyến mãi!', 'error');
                }
            }

            async function fetchPromotionForEdit(id) {
                try {
                    const response = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`);
                    if (!response.ok) throw new Error(`Không thể lấy chi tiết khuyến mãi để sửa: ${response.statusText}`);
                    const p = await response.json();
                    document.getElementById('promotionModalLabel').textContent = 'Sửa khuyến mãi';
                    document.getElementById('promotionName').value = p.ten_Khuyen_Mai;
                    document.getElementById('startDate').value = new Date(p.ngay_Bat_Dau).toISOString().slice(0, 16);
                    document.getElementById('endDate').value = new Date(p.ngay_Ket_Thuc).toISOString().slice(0, 16);
                    document.getElementById('description').value = p.mo_Ta || '';
                    document.getElementById('status').checked = p.trang_Thai;
                    isEditMode = true;
                    editPromotionId = p.iD_Khuyen_Mai;
                    promotionModal.show();
                } catch (error) {
                    console.error('Lỗi khi lấy chi tiết để sửa:', error);
                    showAlert('Lỗi khi tải dữ liệu để sửa!', 'error');
                }
            }

            async function updatePromotionStatus(id, status) {
                if (!confirm(`Bạn có chắc chắn muốn ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi này?`)) return;
                try {
                    const getResponse = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`);
                    if (!getResponse.ok) throw new Error(`Không thể lấy dữ liệu khuyến mãi: ${getResponse.statusText}`);
                    const promotion = await getResponse.json();
                    const requestData = {
                        iD_Khuyen_Mai: parseInt(id),
                        ten_Khuyen_Mai: promotion.ten_Khuyen_Mai,
                        ngay_Bat_Dau: promotion.ngay_Bat_Dau,
                        ngay_Ket_Thuc: promotion.ngay_Ket_Thuc,
                        mo_Ta: promotion.mo_Ta,
                        trang_Thai: status
                    };
                    const updateResponse = await fetch(`https://localhost:7169/api/KhuyenMai/${id}`, {
                        method: 'PUT',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify(requestData)
                    });
                    if (!updateResponse.ok) {
                        const errorText = await updateResponse.text();
                        throw new Error(`Không thể ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi: ${errorText || updateResponse.statusText}`);
                    }
                    showAlert(`Đã ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi thành công!`, 'success');
                    fetchPromotions();
                } catch (error) {
                    console.error(`Lỗi khi ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi:`, error);
                    showAlert(`Lỗi khi ${status ? 'kích hoạt' : 'ngừng'} khuyến mãi!`, 'error');
                }
            }

            // Initial fetch
            fetchPromotions();
        });
    </script>
</body>
</html>