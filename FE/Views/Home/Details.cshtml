@model List<SanPham>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<h2 class="text-center mb-4">Menu Trà Sữa</h2>

<div class="container">
    <div class="row">
        <!-- Phần danh sách sản phẩm bên trái -->
        <div class="col-md-9">
            <div class="row">
                @foreach (var product in Model.Where(p => p.Trang_Thai && p.ID_San_Pham > 0))
                {
                    <div class="col-md-4 mb-4">
                        <div class="card h-100 shadow-sm">
                            <img src="@("https://localhost:7169" + product.Hinh_Anh)"
                                 class="card-img-top"
                                 alt="@product.Ten_San_Pham"
                                 style="height: 200px; object-fit: cover; cursor: pointer;"
                                 data-bs-toggle="modal"
                                 data-bs-target="#productModal_@product.ID_San_Pham" />
                            <div class="card-body text-center">
                                <h5 class="card-title">@product.Ten_San_Pham</h5>
                                <p class="text-danger fw-bold">@string.Format("{0:N0} đ", product.Gia)</p>
                                <p class="text-muted" style="min-height: 40px;">@product.Mo_Ta</p>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- Phần giỏ hàng bên phải -->
        <div class="col-md-3">
            <div class="card shadow-sm border-0">
                <div class="card-header bg-primary text-white d-flex align-items-center justify-content-between">
                    <h5 class="mb-0 flex-grow-1">Giỏ Hàng</h5>
                    <div class="form-check mb-0">
                        <input class="form-check-input" type="checkbox" id="select-all" checked>
                        <label class="form-check-label text-white ms-1 small" for="select-all">Chọn tất cả</label>
                    </div>
                    <i class="bi bi-cart-fill ms-2"></i>
                </div>
                <div class="card-body p-3">
                    @{
                        var cart = ViewBag.Cart as GioHang;
                        bool hasOutOfStock = false;
                        decimal totalPrice = 0;

                        if (cart != null && cart.GioHang_ChiTiets.Any())
                        {
                            <ul class="list-group list-group-flush">
                                @foreach (var item in cart.GioHang_ChiTiets)
                                {
                                    decimal itemPrice = item.San_Pham.Gia;
                                    if (item.Size != null) itemPrice += item.Size.Gia;
                                    itemPrice += item.GioHangChiTiet_Toppings.Sum(t => t.Topping.Gia);
                                    decimal itemTotal = itemPrice * item.So_Luong;
                                    totalPrice += itemTotal; // Tổng ban đầu (sẽ cập nhật động bằng JS)

                                    if (item.San_Pham.So_Luong == 0)
                                    {
                                        hasOutOfStock = true;
                                    }

                                    <li class="list-group-item border rounded mb-2 p-3 hover-bg-light">
                                        <div class="d-flex align-items-start">
                                            <input type="checkbox" class="form-check-input me-2 select-item" data-price="@itemTotal" checked />
                                            <div class="flex-grow-1">
                                                <strong>@item.San_Pham.Ten_San_Pham</strong>
                                                <span class="badge bg-secondary ms-2">x @item.So_Luong</span>
                                                @if (item.San_Pham.So_Luong == 0)
                                                {
                                                    <span class="badge bg-danger ms-2">Hết hàng</span>
                                                }
                                                <div class="text-muted small mt-1">
                                                    @if (item.Size != null)
                                                    {
                                                        <div>Size: @item.Size.SizeName (@string.Format("{0:N0} đ", item.Size.Gia))</div>
                                                    }
                                                    @if (item.DoNgot != null)
                                                    {
                                                        <div>Độ ngọt: @item.DoNgot.Muc_Do</div>
                                                    }
                                                    @if (item.LuongDa != null)
                                                    {
                                                        <div>Lượng đá: @item.LuongDa.Ten_LuongDa</div>
                                                    }
                                                    @if (item.GioHangChiTiet_Toppings.Any())
                                                    {
                                                        <div>Toppings: @string.Join(", ", item.GioHangChiTiet_Toppings.Select(t => $"{t.Topping.Ten} ({string.Format("{0:N0} đ", t.Topping.Gia)}"))</div>
                                                    }
                                                </div>
                                                <div class="text-primary fw-bold mt-1">
                                                    @string.Format("{0:N0} đ", itemTotal)
                                                </div>
                                            </div>
                                            <button class="btn btn-sm btn-outline-danger remove-cart-item" data-item-id="@item.ID_GioHang_ChiTiet">
                                                <i class="bi bi-trash me-1"></i>Xóa
                                            </button>
                                        </div>
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <div class="text-center text-muted py-4">
                                <i class="bi bi-cart-x display-6"></i>
                                <p class="mt-2">Giỏ hàng hiện đang trống.</p>
                            </div>
                        }
                    }
                    <hr class="my-3" />
                    <div class="d-flex justify-content-between align-items-center">
                        <strong>Tổng tiền:</strong>
                        <strong class="text-primary" id="total-price">@string.Format("{0:N0} đ", totalPrice)</strong>
                    </div>
                    @if (hasOutOfStock || (cart == null || !cart.GioHang_ChiTiets.Any()))
                    {
                        <button class="btn btn-success w-100 mt-3" disabled>
                            <i class="bi bi-lock-fill me-2"></i>Thanh toán
                        </button>
                        @if (hasOutOfStock)
                        {
                            <p class="text-danger small mt-2">Có sản phẩm hết hàng, vui lòng xóa để tiếp tục.</p>
                        }
                    }
                    else
                    {
                        <a href="@Url.Action("Checkout", "Cart")" class="btn btn-success w-100 mt-3">
                            <i class="bi bi-check-circle-fill me-2"></i>Thanh toán
                        </a>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal chi tiết sản phẩm (giữ nguyên) -->
@foreach (var product in Model.Where(p => p.Trang_Thai && p.ID_San_Pham > 0))
{
    <div class="modal fade" id="productModal_@product.ID_San_Pham" tabindex="-1" aria-labelledby="productModalLabel_@product.ID_San_Pham" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productModalLabel_@product.ID_San_Pham">@product.Ten_San_Pham</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-md-4">
                            <img src="@("https://localhost:7169" + product.Hinh_Anh)" alt="@product.Ten_San_Pham" class="img-fluid rounded" />
                        </div>
                        <div class="col-md-8">
                            <p><strong>Giá:</strong> @string.Format("{0:N0} đ", product.Gia)</p>
                            <p><strong>Số lượng còn lại:</strong> @product.So_Luong</p>
                            <p><strong>Mô tả:</strong> @product.Mo_Ta</p>

                            <!-- Form chọn tùy chọn -->
                            <form asp-controller="Cart" asp-action="AddToCart" asp-route-id="@product.ID_San_Pham" method="post">
                                <!-- Số lượng -->
                                @* <div class="mb-3">
                                    <label class="form-label"><strong>Số lượng:</strong></label>
                                    <input type="number" name="so_Luong" class="form-control" min="1" value="1" required />
                                </div> *@
                                <!-- Số lượng -->
                                <div class="mb-3">
                                    <label class="form-label"><strong>Số lượng:</strong></label>
                                    <input type="number"
                                           name="so_Luong"
                                           class="form-control"
                                           min="1"
                                           max="@product.So_Luong"
                                           value="1"
                                           required />
                                </div>


                                <!-- Chọn kích thước (chọn 1) -->
                                <div class="mb-3">
                                    <label class="form-label"><strong>Kích thước:</strong></label>
                                    <select name="selectedSize" class="form-select" required>
                                        <option value="">Chọn kích thước</option>
                                        @foreach (var size in product.Sizes.Where(s => s.Trang_Thai))
                                        {
                                            <option value="@size.ID_Size">@size.SizeName (@string.Format("{0:N0} đ", size.Gia))</option>
                                        }
                                    </select>
                                </div>

                                <!-- Chọn lượng đá (chọn 1) -->
                                <div class="mb-3">
                                    <label class="form-label"><strong>Lượng đá:</strong></label>
                                    <select name="selectedLuongDa" class="form-select" required>
                                        <option value="">Chọn lượng đá</option>
                                        @foreach (var luongDa in product.LuongDas.Where(ld => ld.Trang_Thai))
                                        {
                                            <option value="@luongDa.ID_LuongDa">@luongDa.Ten_LuongDa</option>
                                        }
                                    </select>
                                </div>

                                <!-- Chọn độ ngọt (chọn 1) -->
                                <div class="mb-3">
                                    <label class="form-label"><strong>Độ ngọt:</strong></label>
                                    <select name="selectedDoNgot" class="form-select" required>
                                        <option value="">Chọn độ ngọt</option>
                                        @foreach (var doNgot in product.DoNgots.Where(dn => dn.Trang_Thai))
                                        {
                                            <option value="@doNgot.ID_DoNgot">@doNgot.Muc_Do</option>
                                        }
                                    </select>
                                </div>

                                <!-- Chọn topping (chọn nhiều) -->
                                <div class="mb-3">
                                    <label class="form-label"><strong>Topping:</strong></label>
                                    @foreach (var topping in product.Toppings.Where(t => t.Trang_Thai))
                                    {
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" name="selectedToppings" value="@topping.ID_Topping" id="topping_@topping.ID_Topping">
                                            <label class="form-check-label" for="topping_@topping.ID_Topping">
                                                @topping.Ten (@string.Format("{0:N0} đ", topping.Gia))
                                            </label>
                                        </div>
                                    }
                                </div>

                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-cart-plus me-2"></i>Thêm vào giỏ hàng
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Khởi tạo modal
            var modals = document.querySelectorAll('.modal');
            modals.forEach(function (modal) {
                new bootstrap.Modal(modal);
            });

            // Xử lý xóa item trong giỏ hàng
            var userId = @ViewBag.UserId; // Lấy từ ViewBag
            document.querySelectorAll('.remove-cart-item').forEach(button => {
                button.addEventListener('click', function () {
                    const itemId = this.getAttribute('data-item-id');
                    if (userId && confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                        fetch(`https://localhost:7169/api/Gio_Hang/DeleteFromCart/${userId}/${itemId}`, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        })
                        .then(response => {
                            if (response.ok) {
                                window.location.reload(); // Reload trang để cập nhật giỏ hàng
                            } else {
                                alert('Xóa sản phẩm thất bại. Vui lòng thử lại.');
                            }
                        })
                        .catch(error => {
                            console.error('Error:', error);
                            alert('Có lỗi xảy ra khi xóa sản phẩm.');
                        });
                    } else if (!userId) {
                        alert('Vui lòng đăng nhập để xóa sản phẩm.');
                    }
                });
            });

            // Xử lý chọn tất cả
            const selectAll = document.getElementById('select-all');
            const selectItems = document.querySelectorAll('.select-item');
            selectAll.addEventListener('change', function () {
                selectItems.forEach(item => {
                    item.checked = this.checked;
                });
                updateTotalPrice();
            });

            // Xử lý chọn từng item
            selectItems.forEach(item => {
                item.addEventListener('change', function () {
                    if (!this.checked) {
                        selectAll.checked = false;
                    } else if (Array.from(selectItems).every(i => i.checked)) {
                        selectAll.checked = true;
                    }
                    updateTotalPrice();
                });
            });

            // Hàm cập nhật tổng tiền
            function updateTotalPrice() {
                let total = 0;
                selectItems.forEach(item => {
                    if (item.checked) {
                        total += parseFloat(item.getAttribute('data-price'));
                    }
                });
                document.getElementById('total-price').textContent = total.toLocaleString('vi-VN') + ' đ';
            }

            // Khởi tạo tổng tiền ban đầu
            updateTotalPrice();
        });
    </script>
}

<style>
    .hover-bg-light:hover {
        background-color: #f8f9fa;
        transition: background-color 0.2s;
    }

    .list-group-item {
        border-radius: 0.5rem !important;
    }

    .bi {
        font-size: 1.2rem;
    }
</style>