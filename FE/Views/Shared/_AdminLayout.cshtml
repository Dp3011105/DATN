@using Microsoft.AspNetCore.Identity
@using System.Security.Claims

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Admin Panel</title>

    <!-- Bootstrap & FontAwesome -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />

    <style>
        :root {
            --sidebar-w: 250px;
            --sidebar-w-collapsed: 60px;
            --sidebar-bg-start: #1e3a8a;
            --sidebar-bg-end: #3b82f6;
            --sidebar-text: #ffffff;
            --sidebar-hover: rgba(255,255,255,0.12);
        }

        body {
            overflow-x: hidden;
        }

        /* ==== SIDEBAR ==== */
        .sidebar {
            background: linear-gradient(180deg, var(--sidebar-bg-start), var(--sidebar-bg-end)) !important;
            min-height: 100vh;
            width: var(--sidebar-w);
            padding: 20px 20px 84px 20px;
            transition: width .3s ease;
            position: fixed;
            top: 0;
            left: 0;
            z-index: 1000;
            color: var(--sidebar-text);
        }

            .sidebar a,
            .sidebar .nav-link,
            .sidebar .nav-link i,
            .sidebar .sidebar-header h3,
            .sidebar .sidebar-header p,
            .sidebar .sidebar-text {
                color: var(--sidebar-text) !important;
            }

            .sidebar .nav-link {
                transition: all .25s ease;
                padding: 10px 12px;
                border-radius: 8px;
                margin-bottom: 6px;
                display: flex;
                align-items: center;
                gap: 10px;
            }

                .sidebar .nav-link:hover, .sidebar .nav-link:focus {
                    background: var(--sidebar-hover);
                    text-decoration: none;
                }

                .sidebar .nav-link .ms-auto {
                    transition: transform .2s ease;
                }

                .sidebar .nav-link[aria-expanded="true"] .ms-auto {
                    transform: rotate(180deg);
                }

            .sidebar .collapse .nav-link {
                padding-left: 34px;
                opacity: .95;
            }

            .sidebar.collapsed {
                width: var(--sidebar-w-collapsed);
            }

                .sidebar.collapsed .sidebar-text,
                .sidebar.collapsed .sidebar-header h3,
                .sidebar.collapsed .sidebar-header p {
                    display: none;
                }

                .sidebar.collapsed .nav-link {
                    justify-content: center;
                    padding: 10px;
                }

                /* Hide caret and disable submenu toggles when collapsed */
                .sidebar.collapsed [data-bs-toggle="collapse"] .fa-chevron-down {
                    display: none !important;
                }

                .sidebar.collapsed [data-bs-toggle="collapse"] {
                    pointer-events: none;
                }

                .sidebar.collapsed .collapse {
                    display: none !important;
                }

        .toggle-btn {
            position: absolute;
            top: 20px;
            right: -15px;
            background: #fff;
            border: 1px solid #ddd;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            z-index: 1001;
        }

        /* ==== MAIN ==== */
        .main-content {
            margin-left: var(--sidebar-w);
            transition: margin-left .3s ease, width .3s ease;
            width: calc(100% - var(--sidebar-w));
        }

            .main-content.collapsed {
                margin-left: var(--sidebar-w-collapsed);
                width: calc(100% - var(--sidebar-w-collapsed));
            }

        .nav-link.active {
            background: rgba(255,255,255,.22);
        }

        /* ==== LOGOUT (bottom-fixed) ==== */
        .logout-wrap {
            position: fixed;
            bottom: 16px;
            left: 0;
            width: var(--sidebar-w);
            padding: 0 20px;
            z-index: 1001;
            transition: width .3s ease, padding .3s ease;
        }

        .sidebar.collapsed .logout-wrap {
            width: var(--sidebar-w-collapsed);
            padding: 0 8px;
        }

        .btn-logout-full {
            width: 100%;
        }

        .btn-logout-icon {
            display: none !important;
            width: 44px;
            height: 44px;
            border-radius: 9999px;
            align-items: center;
            justify-content: center;
            padding: 0;
        }

        .sidebar.collapsed .btn-logout-full {
            display: none !important;
        }

        .sidebar.collapsed .btn-logout-icon {
            display: flex !important;
        }
        /* prevent double tooltip overlap */
        .sidebar:not(.collapsed) .btn-logout-icon[title] {
            pointer-events: none;
        }

        /* =========================================================
                   ORDER NOTIFIER (bottom-left like Windows notifications)
                   ========================================================= */
        #order-notif-tray {
            position: fixed;
            left: 16px;
            bottom: 16px;
            z-index: 1100;
            display: flex;
            flex-direction: column-reverse;
            gap: 10px;
            pointer-events: none; /* tray không chặn click; card sẽ bật lại pointer */
            max-width: calc(100vw - 32px);
        }

            #order-notif-tray.collapsed .order-toast:nth-child(n+4) {
                display: none;
            }
            /* chỉ show 3 cái mới nhất khi thu gọn */
            #order-notif-tray.expanded {
                max-height: 60vh;
                overflow: auto;
                padding-right: 8px;
            }

        .order-toast {
            width: 360px;
            max-width: calc(100vw - 32px);
            background: #fff;
            border-left: 6px solid #0d6efd;
            border-radius: 12px;
            box-shadow: 0 12px 24px rgba(0,0,0,.15);
            padding: 12px 14px;
            display: flex;
            gap: 12px;
            align-items: flex-start;
            cursor: pointer;
            pointer-events: auto;
            opacity: 0;
            transform: translateX(-12px) translateY(12px);
            animation: orderToastIn .25s ease forwards;
        }

            .order-toast:hover {
                box-shadow: 0 12px 28px rgba(0,0,0,.2);
            }

            .order-toast .icon {
                font-size: 18px;
                margin-top: 2px;
                color: #0d6efd;
            }

            .order-toast .title {
                font-weight: 600;
                line-height: 1.3;
            }

            .order-toast .meta {
                font-size: 12px;
                color: #6c757d;
            }

            .order-toast .badge {
                background: #e9ecef;
                color: #333;
            }

            .order-toast .close-btn {
                margin-left: auto;
                border: none;
                background: transparent;
                font-size: 18px;
                line-height: 1;
                opacity: .55;
            }

                .order-toast .close-btn:hover {
                    opacity: .9;
                }

        @@keyframes orderToastIn {
            to {
                opacity: 1;
                transform: translateX(0) translateY(0);
            }
        }

        @@keyframes orderToastOut {
            to {
                opacity: 0;
                transform: translateX(-12px) translateY(12px);
            }
        }

        .order-toast.is-hiding {
            animation: orderToastOut .2s ease forwards;
        }

        /* Hiệu ứng "stack" khi ở trạng thái thu gọn */
        #order-notif-tray.collapsed .order-toast {
            position: relative;
        }

            #order-notif-tray.collapsed .order-toast:nth-child(2) {
                transform: translateY(-6px) scale(.985);
                opacity: .92;
            }

            #order-notif-tray.collapsed .order-toast:nth-child(3) {
                transform: translateY(-12px) scale(.97);
                opacity: .85;
            }

        /* Ẩn khay khi không có thông báo */
        #order-notif-tray:empty {
            display: none;
        }
    </style>

    @RenderSection("Styles", required: false)
</head>
<body>
    <div class="d-flex">
        <!-- ==== SIDEBAR ==== -->
        <nav class="sidebar" id="sidebar">
            <div class="toggle-btn" onclick="toggleSidebar()">
                <i class="fas fa-bars"></i>
            </div>

            <div class="sidebar-header text-white text-center mb-4">
                <h3>Admin Panel</h3>
            </div>

            <!-- Use an accordion parent so only one group can be opened at a time -->
            <div id="sidebarAccordion">
                <ul class="navbar-nav flex-column">

                    <!-- Thống kê -->
                    <li class="nav-item">
                        <a href="@Url.Action("Index", "ThongKe")" class="nav-link" title="Thống kê" data-bs-toggle="tooltip" data-bs-placement="right">
                            <i class="fas fa-chart-bar nav-icon"></i>
                            <span class="sidebar-text">Thống kê</span>
                        </a>
                    </li>

                    <!-- Nhóm: Sản phẩm & Khuyến mãi -->
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="collapse" href="#productMenu" role="button" aria-expanded="false" aria-controls="productMenu" title="Sản phẩm & Khuyến mãi" data-bs-toggle-second="tooltip" data-bs-placement="right">
                            <i class="fas fa-box-open nav-icon"></i>
                            <span class="sidebar-text">Sản phẩm & Khuyến mãi</span>
                            <i class="fas fa-chevron-down ms-auto"></i>
                        </a>
                        <div class="collapse" id="productMenu" data-bs-parent="#sidebarAccordion">
                            <ul class="list-unstyled">
                                <li><a href="@Url.Action("Index", "Product")" class="nav-link">Quản lý sản phẩm</a></li>
                                <li><a href="@Url.Action("Index", "KhuyenMai")" class="nav-link">Quản lý khuyến mãi</a></li>
                                <li><a href="@Url.Action("Index", "KhuyenMaiSanPham")" class="nav-link">Khuyến mãi sản phẩm</a></li>
                            </ul>
                        </div>
                    </li>

                    <!-- Nhóm: Nhân sự & Khách hàng & Voucher -->
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="collapse" href="#peopleMenu" role="button" aria-expanded="false" aria-controls="peopleMenu" title="Nhân sự & Khách hàng" data-bs-toggle-second="tooltip" data-bs-placement="right">
                            <i class="fas fa-user-friends nav-icon"></i>
                            <span class="sidebar-text">Nhân sự & Khách hàng</span>
                            <i class="fas fa-chevron-down ms-auto"></i>
                        </a>
                        <div class="collapse" id="peopleMenu" data-bs-parent="#sidebarAccordion">
                            <ul class="list-unstyled">
                                <li><a href="@Url.Action("Index", "NhanVien")" class="nav-link">Quản lý nhân viên</a></li>
                                <li><a href="@Url.Action("Index", "KhachHang")" class="nav-link">Quản lý khách hàng</a></li>
                                <li><a href="@Url.Action("Index", "VoucherFE")" class="nav-link">Quản lý Voucher</a></li>
                                <li><a href="@Url.Action("Index", "GanVoucherFE")" class="nav-link">Gắn Voucher</a></li>
                            </ul>
                        </div>
                    </li>

                    <!-- Nhóm: Hệ thống -->
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="collapse" href="#systemMenu" role="button" aria-expanded="false" aria-controls="systemMenu" title="Hệ thống" data-bs-toggle-second="tooltip" data-bs-placement="right">
                            <i class="fas fa-cogs nav-icon"></i>
                            <span class="sidebar-text">Hệ thống</span>
                            <i class="fas fa-chevron-down ms-auto"></i>
                        </a>
                        <div class="collapse" id="systemMenu" data-bs-parent="#sidebarAccordion">
                            <ul class="list-unstyled">
                                <li><a href="@Url.Action("Index", "TaiKhoan")" class="nav-link">Quản lý tài khoản</a></li>
                                <li><a href="@Url.Action("Index", "VaiTro")" class="nav-link">Quản lý vai trò</a></li>
                                <li><a href="@Url.Action("Index", "QuanLyVaiTroNhanVien")" class="nav-link">Phân quyền</a></li>
                            </ul>
                        </div>
                    </li>

                    <!-- Nhóm: Đơn hàng -->
                    <li class="nav-item">
                        <a class="nav-link" data-bs-toggle="collapse" href="#orderMenu" role="button" aria-expanded="false" aria-controls="orderMenu" title="Đơn hàng" data-bs-toggle-second="tooltip" data-bs-placement="right">
                            <i class="fas fa-cart-shopping nav-icon"></i>
                            <span class="sidebar-text">Đơn hàng</span>
                            <i class="fas fa-chevron-down ms-auto"></i>
                        </a>
                        <div class="collapse" id="orderMenu" data-bs-parent="#sidebarAccordion">
                            <ul class="list-unstyled">
                                <li><a href="@Url.Action("Index", "BanHangTaiQuay")" class="nav-link">Bán hàng trực tiếp</a></li>
                                <li><a href="@Url.Action("Index", "QuanLyDonHang")" class="nav-link">Quản Lý Đơn Hàng</a></li>
                            </ul>
                        </div>
                    </li>

                  
                    <!-- Logout (fixed bottom) -->
                    <div class="logout-wrap">
                        <form asp-controller="Account" asp-action="LogoutAdmin" method="post" id="logoutForm">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-logout-full" onclick="return confirmLogout()">
                                <i class="fas fa-sign-out-alt me-2"></i>
                                <span class="sidebar-text">Đăng xuất</span>
                            </button>
                            <button type="submit" class="btn btn-danger btn-logout-icon" data-bs-toggle="tooltip" title="Đăng xuất" onclick="return confirmLogout()">
                                <i class="fas fa-sign-out-alt"></i>
                            </button>
                        </form>
                    </div>

                </ul>
            </div>
        </nav>

        <!-- ==== MAIN ==== -->
        <main class="main-content" id="main-content">
            <div class="container-fluid py-4">
                @RenderBody()
            </div>
        </main>
    </div>

    <!-- ===== ORDER NOTIFIER TRAY (bottom-left) ===== -->
    <div id="order-notif-tray" class="collapsed" aria-live="polite" aria-atomic="false"></div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function closeAllSidebarCollapses() {
            // Close any open submenu and sync aria-expanded
            document.querySelectorAll('#sidebar .collapse.show').forEach(function (el) {
                var inst = bootstrap.Collapse.getOrCreateInstance(el);
                inst.hide();
            });
            document.querySelectorAll('#sidebar [data-bs-toggle="collapse"][aria-expanded="true"]').forEach(function (t) {
                t.setAttribute('aria-expanded', 'false');
            });
        }

        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('main-content');
            const willCollapse = !sidebar.classList.contains('collapsed');

            if (willCollapse) {
                // Going to collapsed state -> force close all submenus
                closeAllSidebarCollapses();
            }

            sidebar.classList.toggle('collapsed');
            mainContent.classList.toggle('collapsed');
            localStorage.setItem('sidebarState', sidebar.classList.contains('collapsed') ? 'collapsed' : 'expanded');
        }

        function confirmLogout(){
            return confirm('Bạn có chắc muốn đăng xuất?');
        }

        (function () {
            // Restore sidebar state on load
            const state = localStorage.getItem('sidebarState');
            const sidebar = document.getElementById('sidebar');
            const mainContent = document.getElementById('main-content');
            if (state === 'collapsed') {
                sidebar.classList.add('collapsed');
                mainContent.classList.add('collapsed');
                closeAllSidebarCollapses();
            }

            // Enable tooltips for items that remain visible when collapsed
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('#sidebar [data-bs-toggle="tooltip"], #sidebar [data-bs-toggle-second="tooltip"]'));
            tooltipTriggerList.forEach(function (el) {
                new bootstrap.Tooltip(el, { placement: 'right', trigger: 'hover', boundary: document.body });
            });

            // Extra safety: when any submenu is shown, auto-hide others (if data-bs-parent isn't respected for some reason)
            document.querySelectorAll('#sidebar .collapse').forEach(function (el) {
                el.addEventListener('show.bs.collapse', function () {
                    document.querySelectorAll('#sidebar .collapse.show').forEach(function (other) {
                        if (other !== el) bootstrap.Collapse.getOrCreateInstance(other).hide();
                    });
                });
            });
        })();
    </script>

    <!-- ===== ORDER NOTIFIER SCRIPT ===== -->
    <script>
        (function () {
          const tray = document.getElementById('order-notif-tray');
          const orderIndexUrl = '@Url.Action("Index", "QuanLyDonHang")';

          // timer registry per toast
          const timers = new WeakMap(); // el -> {remaining, startedAt, tId, active}

          function escapeHTML(s){
            return (s??'').toString().replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m]));
          }

          function ensureCollapsed(){ tray.classList.add('collapsed'); tray.classList.remove('expanded'); }
          function expandTray(){ pauseAll(); tray.classList.remove('collapsed'); tray.classList.add('expanded'); }
          function collapseTray(){ tray.classList.remove('expanded'); tray.classList.add('collapsed'); resumeAll(); }

          let hoverTimer = null;
          tray.addEventListener('mouseenter', () => { hoverTimer = setTimeout(expandTray, 3000); });
          tray.addEventListener('mouseleave', () => {
            if (hoverTimer) { clearTimeout(hoverTimer); hoverTimer = null; }
            collapseTray();
          });

          function startAutoHide(el, ms){
            const startedAt = Date.now();
            const tId = setTimeout(() => dismiss(el), ms);
            timers.set(el, { remaining: ms, startedAt, tId, active: true });
          }
          function pauseAll(){
            document.querySelectorAll('#order-notif-tray .order-toast').forEach(el=>{
              const t = timers.get(el);
              if (t && t.active){
                clearTimeout(t.tId);
                const elapsed = Date.now() - t.startedAt;
                t.remaining = Math.max(0, t.remaining - elapsed);
                t.active = false;
                timers.set(el, t);
              }
            });
          }
          function resumeAll(){
            document.querySelectorAll('#order-notif-tray .order-toast').forEach(el=>{
              const t = timers.get(el);
              if (t && !t.active && t.remaining > 0){
                t.startedAt = Date.now();
                t.tId = setTimeout(() => dismiss(el), t.remaining);
                t.active = true;
                timers.set(el, t);
              }
            });
          }

          function dismiss(el){
            if (!el || !el.parentElement) return;
            const t = timers.get(el);
            if (t) { clearTimeout(t.tId); timers.delete(el); }
            el.classList.add('is-hiding');
            setTimeout(()=>{ el.remove(); }, 220);
          }

          function buildToast({ orderId, orderName, customerName }){
            const el = document.createElement('div');
            el.className = 'order-toast';
            el.innerHTML = `
              <div class="icon"><i class="fas fa-bell"></i></div>
              <div class="content">
                <div class="title">Đã có 1 đơn hàng mới</div>
                <div class="meta">
                  <span class="badge me-1">#${escapeHTML(orderName || 'Không rõ')}</span>
                  ${customerName ? '— ' + escapeHTML(customerName) : ''}
                </div>
              </div>
              <button class="close-btn" type="button" aria-label="Đóng">&times;</button>
            `;

            el.addEventListener('click', (ev) => {
              if (ev.target.closest('.close-btn')) {
                ev.stopPropagation();
                dismiss(el);
                return;
              }
              // Điều hướng tới trang quản lý đơn hàng
              window.location.href = orderIndexUrl;
            });

            return el;
          }

          function pushToast(data){
            const el = buildToast(data);
            tray.prepend(el); // newest on bottom visually because of column-reverse
            ensureCollapsed();
            startAutoHide(el, 10000); // 10s auto-hide
          }

          // ===== Helpers: xác định "không phải tại quầy" & lấy tên đơn/khách =====
          function getString(obj, ...cands){
            if (!obj) return null;
            for (const k of cands){
              if (obj[k] != null && String(obj[k]).trim() !== '') return String(obj[k]).trim();
            }
            return null;
          }

          function isCounterOrder(order){
            const yesBools = ['Tai_Quay','IsAtCounter','Ban_Tai_Quan'];
            for (const k of yesBools){ if (order && typeof order[k] === 'boolean' && order[k]) return true; }

            const channels = ['Kenh_Dat','Kieu_Don','Loai_Don','Channel','Loai'];
            const val = (getString(order, ...channels) || '').toLowerCase();
            if (val.includes('quầy') || val.includes('quay')) return true; // chứa 'quầy'/'quay' => tại quầy
            return false;
          }

          function getOrderName(order){
            return getString(order, 'Ma_Hoa_Don','Ten_Don_Hang','Code','So_Hoa_Don','Ma','OrderCode','OrderNo')
                   || (order?.ID_Hoa_Don ?? order?.Id ?? order?.id ?? 'Moi');
          }
          function getCustomerName(order){
            const kh = order?.KhachHang || order?.Customer || order?.NguoiMua || null;
            return getString(order, 'Ten_Khach','TenKhach','CustomerName','Ten','Name')
                || getString(kh||{}, 'Ho_Ten','Ten','Name')
                || getString(kh||{}, 'So_Dien_Thoai','Phone');
          }

          // ===== API công khai: gọi ở nơi có đơn mới =====
          // window.notifyNewOnlineOrder(orderDtoTừBE);
          window.notifyNewOnlineOrder = function(order){
            try{
              if (!order || isCounterOrder(order)) return; // bỏ qua đơn tại quầy
              pushToast({
                orderId: order?.ID_Hoa_Don ?? order?.Id ?? order?.id,
                orderName: getOrderName(order),
                customerName: getCustomerName(order)
              });
            }catch{ /* noop */ }
          };

          // ===== TÍCH HỢP (chọn 1) =====
          // 1) SignalR:
          // const connection = new signalR.HubConnectionBuilder().withUrl("/hubs/orders").build();
          // connection.on("NewOrderCreated", order => window.notifyNewOnlineOrder(order));
          // connection.start();

          // 2) Polling demo:
          // let lastTs = Date.now();
          // setInterval(async ()=>{
          //   const res = await fetch('/api/HoaDon/new?since=' + lastTs);
          //   if (!res.ok) return;
          //   const arr = await res.json();
          //   arr.forEach(o => window.notifyNewOnlineOrder(o));
          //   if (arr.length) lastTs = Date.now();
          // }, 5000);

          // DEMO nhanh (xoá khi lên prod):
          // setTimeout(()=> window.notifyNewOnlineOrder({ Ma_Hoa_Don:'DH-001', KhachHang:{Ho_Ten:'Nguyễn A'}, Kenh_Dat:'Online' }), 800);
          // setTimeout(()=> window.notifyNewOnlineOrder({ Ma_Hoa_Don:'DH-002', KhachHang:{Ho_Ten:'Trần B'}, Kenh_Dat:'Website' }), 1400);
          // setTimeout(()=> window.notifyNewOnlineOrder({ Ma_Hoa_Don:'DH-003', KhachHang:{Ho_Ten:'Lê C'}, Kenh_Dat:'App' }), 2000);
        })();
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>
