@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@model dynamic

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý chi tiết sản phẩm</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <h1 class="mb-4">Quản lý chi tiết sản phẩm</h1>

        <!-- Tabs for different sections -->
        <ul class="nav nav-tabs" id="productTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="doNgot-tab" data-bs-toggle="tab" href="#doNgot" role="tab">Độ ngọt</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="size-tab" data-bs-toggle="tab" href="#size" role="tab">Size</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="topping-tab" data-bs-toggle="tab" href="#topping" role="tab">Topping</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="luongDa-tab" data-bs-toggle="tab" href="#luongDa" role="tab">Lượng đá</a>
            </li>
        </ul>

        <div class="tab-content mt-3">
            <!-- Độ ngọt -->
            <div class="tab-pane fade show active" id="doNgot" role="tabpanel">
                <button class="btn btn-primary mb-3" onclick="showAddModal('DoNgot')">Thêm độ ngọt</button>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Mức độ</th>
                            <th>Ghi chú</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="doNgotTable">
                        @foreach (var item in Model.DoNgots)
                        {
                            <tr>
                                <td>@item.ID_DoNgot</td>
                                <td>@item.Muc_Do</td>
                                <td>@item.Ghi_Chu</td>
                                <td>@(item.Trang_Thai ? "Hoạt động" : "Không hoạt động")</td>
                                <td>
                                    <button class="btn btn-info btn-sm" onclick="showDetailModal('DoNgot', @item.ID_DoNgot)">Chi tiết</button>
                                    <button class="btn btn-warning btn-sm" onclick="showEditModal('DoNgot', @item.ID_DoNgot)">Sửa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Size -->
            <div class="tab-pane fade" id="size" role="tabpanel">
                <button class="btn btn-primary mb-3" onclick="showAddModal('Size')">Thêm size</button>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên size</th>
                            <th>Giá</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="sizeTable">
                        @foreach (var item in Model.Sizes)
                        {
                            <tr>
                                <td>@item.ID_Size</td>
                                <td>@item.SizeName</td>
                                <td>@item.Gia</td>
                                <td>@(item.Trang_Thai ? "Hoạt động" : "Không hoạt động")</td>
                                <td>
                                    <button class="btn btn-info btn-sm" onclick="showDetailModal('Size', @item.ID_Size)">Chi tiết</button>
                                    <button class="btn btn-warning btn-sm" onclick="showEditModal('Size', @item.ID_Size)">Sửa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Topping -->
            <div class="tab-pane fade" id="topping" role="tabpanel">
                <button class="btn btn-primary mb-3" onclick="showAddModal('Topping')">Thêm topping</button>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên</th>
                            <th>Giá</th>
                            <th>Số lượng</th>
                            <th>Ghi chú</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="toppingTable">
                        @foreach (var item in Model.Toppings)
                        {
                            <tr>
                                <td>@item.ID_Topping</td>
                                <td>@item.Ten</td>
                                <td>@item.Gia</td>
                                <td>@item.So_Luong</td>
                                <td>@item.Ghi_Chu</td>
                                <td>@(item.Trang_Thai ? "Hoạt động" : "Không hoạt động")</td>
                                <td>
                                    <button class="btn btn-info btn-sm" onclick="showDetailModal('Topping', @item.ID_Topping)">Chi tiết</button>
                                    <button class="btn btn-warning btn-sm" onclick="showEditModal('Topping', @item.ID_Topping)">Sửa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Lượng đá -->
            <div class="tab-pane fade" id="luongDa" role="tabpanel">
                <button class="btn btn-primary mb-3" onclick="showAddModal('LuongDa')">Thêm lượng đá</button>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Tên lượng đá</th>
                            <th>Trạng thái</th>
                            <th>Hành động</th>
                        </tr>
                    </thead>
                    <tbody id="luongDaTable">
                        @foreach (var item in Model.LuongDas)
                        {
                            <tr>
                                <td>@item.ID_LuongDa</td>
                                <td>@item.Ten_LuongDa</td>
                                <td>@(item.Trang_Thai ? "Hoạt động" : "Không hoạt động")</td>
                                <td>
                                    <button class="btn btn-info btn-sm" onclick="showDetailModal('LuongDa', @item.ID_LuongDa)">Chi tiết</button>
                                    <button class="btn btn-warning btn-sm" onclick="showEditModal('LuongDa', @item.ID_LuongDa)">Sửa</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Modal for Add/Edit/View -->
        <div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productModalLabel">Chi tiết</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="modalBody">
                        <!-- Form will be dynamically populated -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="button" class="btn btn-primary" id="saveButton" style="display: none;">Lưu</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Hàm kiểm tra CORS hoặc mixed content
        function checkCorsError(xhr, error) {
            if (xhr.status === 0) {
                return "Yêu cầu bị chặn, có thể do CORS hoặc mixed content (HTTP/HTTPS). Vui lòng kiểm tra: \n" +
                       "- Server API có cấu hình CORS cho phép origin '" + window.location.origin + "'.\n" +
                       "- Frontend và API có cùng giao thức (HTTP/HTTPS).\n" +
                       "- Mạng hoặc firewall không chặn yêu cầu.";
            }
            return `Lỗi: ${xhr.status} - ${xhr.statusText}. Phản hồi: ${xhr.responseText || 'Không có phản hồi chi tiết'}`;
        }

        // Hàm tạo form động cho modal
        function getForm(type, data, readOnly = false) {
            console.log(`Tạo form cho ${type} với dữ liệu:`, JSON.stringify(data, null, 2));
            let form = '';
            if (type === 'DoNgot') {
                form = `
                    <div class="mb-3">
                        <label>Mức độ</label>
                        <input type="text" class="form-control" id="muc_do" value="${data.muc_Do || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label>Ghi chú</label>
                        <input type="text" class="form-control" id="ghi_chu" value="${data.ghi_Chu || ''}" ${readOnly ? 'readonly' : ''}>
                    </div>
                    <div class="mb-3">
                        <label>Trạng thái</label>
                        <select class="form-control" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            } else if (type === 'Size') {
                form = `
                    <div class="mb-3">
                        <label>Tên size</label>
                        <input type="text" class="form-control" id="sizeName" value="${data.sizeName || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label>Giá</label>
                        <input type="number" class="form-control" id="gia" value="${data.gia || 0}" ${readOnly ? 'readonly' : ''} required min="0">
                    </div>
                    <div class="mb-3">
                        <label>Trạng thái</label>
                        <select class="form-control" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            } else if (type === 'Topping') {
                form = `
                    <div class="mb-3">
                        <label>Tên</label>
                        <input type="text" class="form-control" id="ten" value="${data.ten || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label>Giá</label>
                        <input type="number" class="form-control" id="gia" value="${data.gia || 0}" ${readOnly ? 'readonly' : ''} required min="0">
                    </div>
                    <div class="mb-3">
                        <label>Số lượng</label>
                        <input type="number" class="form-control" id="so_luong" value="${data.so_Luong || 0}" ${readOnly ? 'readonly' : ''} required min="0">
                    </div>
                    <div class="mb-3">
                        <label>Ghi chú</label>
                        <input type="text" class="form-control" id="ghi_chu" value="${data.ghi_Chu || ''}" ${readOnly ? 'readonly' : ''}>
                    </div>
                    <div class="mb-3">
                        <label>Trạng thái</label>
                        <select class="form-control" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            } else if (type === 'LuongDa') {
                form = `
                    <div class="mb-3">
                        <label>Tên lượng đá</label>
                        <input type="text" class="form-control" id="ten_luongDa" value="${data.ten_LuongDa || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label>Trạng thái</label>
                        <select class="form-control" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            }
            return form;
        }

        // Hàm hiển thị modal thêm mới
        function showAddModal(type) {
            console.log(`Mở modal thêm mới cho ${type}. Origin hiện tại: ${window.location.origin}`);
            $('#productModalLabel').text('Thêm mới ' + type);
            $('#saveButton').show();
            $('#modalBody').html(getForm(type, {}));
            $('#saveButton').off('click').on('click', function () {
                console.log(`Bắt đầu lưu dữ liệu cho thêm mới ${type}`);
                if (validateForm(type)) {
                    saveData(type, 0);
                }
            });
            $('#productModal').modal('show');
        }

        // Hàm hiển thị modal chi tiết
        function showDetailModal(type, id) {
            console.log(`Mở modal chi tiết cho ${type} với ID: ${id}. Origin hiện tại: ${window.location.origin}`);
            $('#productModalLabel').text('Chi tiết ' + type);
            $('#saveButton').hide();
            $.ajax({
                url: `https://localhost:7169/api/${type}/${id}`,
                type: 'GET',
                success: function (data) {
                    console.log(`Phản hồi từ API ${type}/${id}:`, JSON.stringify(data, null, 2));
                    $('#modalBody').html(getForm(type, data, true));
                    $('#productModal').modal('show');
                },
                error: function (xhr, status, error) {
                    let responseText = xhr.responseText ? (JSON.parse(xhr.responseText) || xhr.responseText) : 'Không có phản hồi chi tiết';
                    console.error(`Lỗi khi lấy chi tiết ${type}/${id}:`, {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        response: responseText,
                        error: error,
                        url: `https://localhost:7169/api/${type}/${id}`,
                        origin: window.location.origin
                    });
                    alert(`Lỗi khi lấy chi tiết ${type} (ID: ${id}): ${checkCorsError(xhr, error)}`);
                }
            });
        }

        // Hàm hiển thị modal sửa
        function showEditModal(type, id) {
            console.log(`Mở modal sửa cho ${type} với ID: ${id}. Origin hiện tại: ${window.location.origin}`);
            $('#productModalLabel').text('Sửa ' + type);
            $('#saveButton').show();
            $.ajax({
                url: `https://localhost:7169/api/${type}/${id}`,
                type: 'GET',
                success: function (data) {
                    console.log(`Phản hồi từ API ${type}/${id}:`, JSON.stringify(data, null, 2));
                    $('#modalBody').html(getForm(type, data));
                    $('#saveButton').off('click').on('click', function () {
                        console.log(`Bắt đầu lưu dữ liệu cho sửa ${type}`);
                        if (validateForm(type)) {
                            saveData(type, id);
                        }
                    });
                    $('#productModal').modal('show');
                },
                error: function (xhr, status, error) {
                    let responseText = xhr.responseText ? (JSON.parse(xhr.responseText) || xhr.responseText) : 'Không có phản hồi chi tiết';
                    console.error(`Lỗi khi lấy dữ liệu sửa ${type}/${id}:`, {
                        status: xhr.status,
                        statusText: xhr.statusText,
                        response: responseText,
                        error: error,
                        url: `https://localhost:7169/api/${type}/${id}`,
                        origin: window.location.origin
                    });
                    alert(`Lỗi khi lấy dữ liệu sửa ${type} (ID: ${id}): ${checkCorsError(xhr, error)}`);
                }
            });
        }

        // Hàm validate dữ liệu trước khi gửi
        function validateForm(type) {
            let isValid = true;
            if (type === 'DoNgot') {
                if (!$('#muc_do').val().trim()) {
                    alert('Mức độ không được để trống!');
                    isValid = false;
                }
            } else if (type === 'Size') {
                if (!$('#sizeName').val().trim()) {
                    alert('Tên size không được để trống!');
                    isValid = false;
                }
                if (!$('#gia').val() || parseFloat($('#gia').val()) < 0) {
                    alert('Giá phải là số không âm!');
                    isValid = false;
                }
            } else if (type === 'Topping') {
                if (!$('#ten').val().trim()) {
                    alert('Tên topping không được để trống!');
                    isValid = false;
                }
                if (!$('#gia').val() || parseFloat($('#gia').val()) < 0) {
                    alert('Giá phải là số không âm!');
                    isValid = false;
                }
                if (!$('#so_luong').val() || parseInt($('#so_luong').val()) < 0) {
                    alert('Số lượng phải là số không âm!');
                    isValid = false;
                }
            } else if (type === 'LuongDa') {
                if (!$('#ten_luongDa').val().trim()) {
                    alert('Tên lượng đá không được để trống!');
                    isValid = false;
                }
            }
            console.log(`Kết quả validate form ${type}:`, isValid);
            return isValid;
        }

        // Hàm lưu dữ liệu (thêm hoặc sửa)
        function saveData(type, id) {
            let data = {};
            if (type === 'DoNgot') {
                data = {
                    iD_DoNgot: id,
                    muc_Do: $('#muc_do').val().trim(),
                    ghi_Chu: $('#ghi_chu').val().trim(),
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            } else if (type === 'Size') {
                data = {
                    iD_Size: id,
                    sizeName: $('#sizeName').val().trim(),
                    gia: parseFloat($('#gia').val()) || 0,
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            } else if (type === 'Topping') {
                data = {
                    iD_Topping: id,
                    ten: $('#ten').val().trim(),
                    gia: parseFloat($('#gia').val()) || 0,
                    so_Luong: parseInt($('#so_luong').val()) || 0,
                    ghi_Chu: $('#ghi_chu').val().trim(),
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            } else if (type === 'LuongDa') {
                data = {
                    iD_LuongDa: id,
                    ten_LuongDa: $('#ten_luongDa').val().trim(),
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            }

            console.log(`Dữ liệu JSON gửi đi cho ${type} (ID: ${id}):`, JSON.stringify(data, null, 2));

            let url = `https://localhost:7169/api/${type}${id > 0 ? '/' + id : ''}`;
            let method = id > 0 ? 'PUT' : 'POST';

            $.ajax({
                url: url,
                type: method,
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function (response) {
                    console.log(`Lưu dữ liệu ${type} thành công. Phản hồi từ API:`, JSON.stringify(response, null, 2));
                    $('#productModal').modal('hide');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    let responseText = xhr.responseText ? (JSON.parse(xhr.responseText) || xhr.responseText) : 'Không có phản hồi chi tiết';
                    console.error(`Lỗi khi lưu dữ liệu ${type}:`, {
                        url: url,
                        method: method,
                        data: JSON.stringify(data, null, 2),
                        status: xhr.status,
                        statusText: xhr.statusText,
                        response: responseText,
                        error: error,
                        origin: window.location.origin
                    });
                    alert(`Lỗi khi lưu dữ liệu ${type} (ID: ${id}): ${checkCorsError(xhr, error)}`);
                }
            });
        }
    </script>
</body>
</html>