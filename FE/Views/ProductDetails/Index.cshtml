@model FE.Models.ProductDetailViewModel
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewData["Title"] = "Quản lý chi tiết sản phẩm";

    // Get current date in Vietnam time zone
    TimeZoneInfo vnTimeZone;
    try
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("SE Asia Standard Time");
    }
    catch
    {
        vnTimeZone = TimeZoneInfo.FindSystemTimeZoneById("Asia/Ho_Chi_Minh");
    }
    var currentDate = TimeZoneInfo.ConvertTimeFromUtc(DateTime.UtcNow, vnTimeZone);

    // Pagination parameters
    int pageSize = 10; // Number of items per page
    int doNgotActivePage = ViewBag.DoNgotActivePage != null ? (int)ViewBag.DoNgotActivePage : 1;
    int doNgotInactivePage = ViewBag.DoNgotInactivePage != null ? (int)ViewBag.DoNgotInactivePage : 1;
    int sizeActivePage = ViewBag.SizeActivePage != null ? (int)ViewBag.SizeActivePage : 1;
    int sizeInactivePage = ViewBag.SizeInactivePage != null ? (int)ViewBag.SizeInactivePage : 1;
    int toppingActivePage = ViewBag.ToppingActivePage != null ? (int)ViewBag.ToppingActivePage : 1;
    int toppingInactivePage = ViewBag.ToppingInactivePage != null ? (int)ViewBag.ToppingInactivePage : 1;
    int luongDaActivePage = ViewBag.LuongDaActivePage != null ? (int)ViewBag.LuongDaActivePage : 1;
    int luongDaInactivePage = ViewBag.LuongDaInactivePage != null ? (int)ViewBag.LuongDaInactivePage : 1;

    // Filter and paginate data
    var doNgotActive = Model.DoNgots.Where(x => x.Trang_Thai).ToList();
    var doNgotInactive = Model.DoNgots.Where(x => !x.Trang_Thai).ToList();
    var sizeActive = Model.Sizes.Where(x => x.Trang_Thai).ToList();
    var sizeInactive = Model.Sizes.Where(x => !x.Trang_Thai).ToList();
    var toppingActive = Model.Toppings.Where(x => x.Trang_Thai).ToList();
    var toppingInactive = Model.Toppings.Where(x => !x.Trang_Thai).ToList();
    var luongDaActive = Model.LuongDas.Where(x => x.Trang_Thai).ToList();
    var luongDaInactive = Model.LuongDas.Where(x => !x.Trang_Thai).ToList();

    int totalDoNgotActivePages = (int)Math.Ceiling((double)doNgotActive.Count / pageSize);
    int totalDoNgotInactivePages = (int)Math.Ceiling((double)doNgotInactive.Count / pageSize);
    int totalSizeActivePages = (int)Math.Ceiling((double)sizeActive.Count / pageSize);
    int totalSizeInactivePages = (int)Math.Ceiling((double)sizeInactive.Count / pageSize);
    int totalToppingActivePages = (int)Math.Ceiling((double)toppingActive.Count / pageSize);
    int totalToppingInactivePages = (int)Math.Ceiling((double)toppingInactive.Count / pageSize);
    int totalLuongDaActivePages = (int)Math.Ceiling((double)luongDaActive.Count / pageSize);
    int totalLuongDaInactivePages = (int)Math.Ceiling((double)luongDaInactive.Count / pageSize);

    var pagedDoNgotActive = doNgotActive.Skip((doNgotActivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedDoNgotInactive = doNgotInactive.Skip((doNgotInactivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedSizeActive = sizeActive.Skip((sizeActivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedSizeInactive = sizeInactive.Skip((sizeInactivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedToppingActive = toppingActive.Skip((toppingActivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedToppingInactive = toppingInactive.Skip((toppingInactivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedLuongDaActive = luongDaActive.Skip((luongDaActivePage - 1) * pageSize).Take(pageSize).ToList();
    var pagedLuongDaInactive = luongDaInactive.Skip((luongDaInactivePage - 1) * pageSize).Take(pageSize).ToList();
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Quản lý chi tiết sản phẩm</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" />
</head>
<body>
    <div class="container-fluid my-5">
        <!-- Statistics -->
        <div class="stats-container">
            <button class="stat-card stat-total" onclick="filterStatus('all')">
                <i class="fas fa-boxes"></i>
                Tổng mục
                <strong>@(Model.DoNgots.Count + Model.Sizes.Count + Model.Toppings.Count + Model.LuongDas.Count)</strong>
            </button>
            <button class="stat-card stat-active" onclick="filterStatus('active')">
                <i class="fas fa-check-circle"></i>
                Hoạt động
                <strong>@(doNgotActive.Count + sizeActive.Count + toppingActive.Count + luongDaActive.Count)</strong>
            </button>
            <button class="stat-card stat-inactive" onclick="filterStatus('inactive')">
                <i class="fas fa-ban"></i>
                Không hoạt động
                <strong>@(doNgotInactive.Count + sizeInactive.Count + toppingInactive.Count + luongDaInactive.Count)</strong>
            </button>
        </div>

        <!-- Tabs for different sections -->
        <ul class="nav nav-tabs mb-4" id="productTabs" role="tablist">
            <li class="nav-item">
                <a class="nav-link active" id="doNgot-tab" data-bs-toggle="tab" href="#doNgot" role="tab">Độ ngọt</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="size-tab" data-bs-toggle="tab" href="#size" role="tab">Size</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="topping-tab" data-bs-toggle="tab" href="#topping" role="tab">Topping</a>
            </li>
            <li class="nav-item">
                <a class="nav-link" id="luongDa-tab" data-bs-toggle="tab" href="#luongDa" role="tab">Lượng đá</a>
            </li>
        </ul>

        <div class="tab-content">
            <!-- Độ ngọt -->
            <div class="tab-pane fade show active" id="doNgot" role="tabpanel">
                <div class="d-flex justify-content-between mb-3">
                    <button class="btn btn-primary btn-sm rounded-pill shadow-sm animate__animated animate__pulse animate__infinite" onclick="showAddModal('DoNgot')">
                        <i class="fas fa-plus me-2"></i>Thêm độ ngọt
                    </button>
                    <div class="input-group w-50">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="doNgotSearch" placeholder="Tìm kiếm độ ngọt..." onkeyup="searchTable('doNgot')">
                    </div>
                </div>
                <ul class="nav nav-pills mb-3" id="doNgotStatusTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active rounded-pill" id="doNgot-active-tab" data-bs-toggle="pill" href="#doNgot-active" role="tab">Hoạt động</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-pill" id="doNgot-inactive-tab" data-bs-toggle="pill" href="#doNgot-inactive" role="tab">Không hoạt động</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="doNgot-active" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Mức độ</th>
                                    <th>Ghi chú</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="doNgotTableActive">
                                @foreach (var item in pagedDoNgotActive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_DoNgot</td>
                                        <td>@item.Muc_Do</td>
                                        <td>@item.Ghi_Chu</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('DoNgot', @item.ID_DoNgot)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('DoNgot', @item.ID_DoNgot)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Độ ngọt Active -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(doNgotActivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage = doNgotActivePage - 1, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalDoNgotActivePages; i++)
                                {
                                    <li class="@(i == doNgotActivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage = i, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(doNgotActivePage == totalDoNgotActivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage = doNgotActivePage + 1, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="doNgot-inactive" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Mức độ</th>
                                    <th>Ghi chú</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="doNgotTableInactive">
                                @foreach (var item in pagedDoNgotInactive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_DoNgot</td>
                                        <td>@item.Muc_Do</td>
                                        <td>@item.Ghi_Chu</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('DoNgot', @item.ID_DoNgot)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('DoNgot', @item.ID_DoNgot)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Độ ngọt Inactive -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(doNgotInactivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage = doNgotInactivePage - 1, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalDoNgotInactivePages; i++)
                                {
                                    <li class="@(i == doNgotInactivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage = i, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(doNgotInactivePage == totalDoNgotInactivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage = doNgotInactivePage + 1, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Size -->
            <div class="tab-pane fade" id="size" role="tabpanel">
                <div class="d-flex justify-content-between mb-3">
                    <button class="btn btn-primary btn-sm rounded-pill shadow-sm animate__animated animate__pulse animate__infinite" onclick="showAddModal('Size')">
                        <i class="fas fa-plus me-2"></i>Thêm size
                    </button>
                    <div class="input-group w-50">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="sizeSearch" placeholder="Tìm kiếm size..." onkeyup="searchTable('size')">
                    </div>
                </div>
                <ul class="nav nav-pills mb-3" id="sizeStatusTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active rounded-pill" id="size-active-tab" data-bs-toggle="pill" href="#size-active" role="tab">Hoạt động</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-pill" id="size-inactive-tab" data-bs-toggle="pill" href="#size-inactive" role="tab">Không hoạt động</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="size-active" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Tên size</th>
                                    <th>Giá</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="sizeTableActive">
                                @foreach (var item in pagedSizeActive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_Size</td>
                                        <td>@item.SizeName</td>
                                        <td>@string.Format("{0:N0} đ", item.Gia)</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('Size', @item.ID_Size)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('Size', @item.ID_Size)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Size Active -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(sizeActivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage = sizeActivePage - 1, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalSizeActivePages; i++)
                                {
                                    <li class="@(i == sizeActivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage = i, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(sizeActivePage == totalSizeActivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage = sizeActivePage + 1, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="size-inactive" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Tên size</th>
                                    <th>Giá</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="sizeTableInactive">
                                @foreach (var item in pagedSizeInactive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_Size</td>
                                        <td>@item.SizeName</td>
                                        <td>@string.Format("{0:N0} đ", item.Gia)</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('Size', @item.ID_Size)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('Size', @item.ID_Size)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Size Inactive -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(sizeInactivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage = sizeInactivePage - 1, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalSizeInactivePages; i++)
                                {
                                    <li class="@(i == sizeInactivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage = i, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(sizeInactivePage == totalSizeInactivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage = sizeInactivePage + 1, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Topping -->
            <div class="tab-pane fade" id="topping" role="tabpanel">
                <div class="d-flex justify-content-between mb-3">
                    <button class="btn btn-primary btn-sm rounded-pill shadow-sm animate__animated animate__pulse animate__infinite" onclick="showAddModal('Topping')">
                        <i class="fas fa-plus me-2"></i>Thêm topping
                    </button>
                    <div class="input-group w-50">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="toppingSearch" placeholder="Tìm kiếm topping..." onkeyup="searchTable('topping')">
                    </div>
                </div>
                <ul class="nav nav-pills mb-3" id="toppingStatusTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active rounded-pill" id="topping-active-tab" data-bs-toggle="pill" href="#topping-active" role="tab">Hoạt động</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-pill" id="topping-inactive-tab" data-bs-toggle="pill" href="#topping-inactive" role="tab">Không hoạt động</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="topping-active" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Tên</th>
                                    <th>Giá</th>
                                    <th>Số lượng</th>
                                    <th>Hình ảnh</th>
                                    <th>Ghi chú</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="toppingTableActive">
                                @foreach (var item in pagedToppingActive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_Topping</td>
                                        <td>@item.Ten</td>
                                        <td>@string.Format("{0:N0} đ", item.Gia)</td>
                                        <td>@item.So_Luong</td>
                                        <td>
                                            @{
                                                var imageUrl = string.IsNullOrEmpty(item.Hinh_Anh) ? "" : "https://localhost:7169" + item.Hinh_Anh;
                                                if (!string.IsNullOrEmpty(imageUrl))
                                                {
                                                    <img src="@imageUrl" alt="@item.Ten" style="width: 50px; height: 50px; object-fit: cover;" class="rounded shadow-sm" onerror="this.src='https://via.placeholder.com/50'; this.alt='Hình không tải được';" />
                                                }
                                                else
                                                {
                                                    <span>Không có hình</span>
                                                }
                                            }
                                        </td>
                                        <td>@item.Ghi_Chu</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('Topping', @item.ID_Topping)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('Topping', @item.ID_Topping)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Topping Active -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(toppingActivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage = toppingActivePage - 1, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalToppingActivePages; i++)
                                {
                                    <li class="@(i == toppingActivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage = i, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(toppingActivePage == totalToppingActivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage = toppingActivePage + 1, toppingInactivePage, luongDaActivePage, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="topping-inactive" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Tên</th>
                                    <th>Giá</th>
                                    <th>Số lượng</th>
                                    <th>Hình ảnh</th>
                                    <th>Ghi chú</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="toppingTableInactive">
                                @foreach (var item in pagedToppingInactive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_Topping</td>
                                        <td>@item.Ten</td>
                                        <td>@string.Format("{0:N0} đ", item.Gia)</td>
                                        <td>@item.So_Luong</td>
                                        <td>
                                            @{
                                                var imageUrl = string.IsNullOrEmpty(item.Hinh_Anh) ? "" : "https://localhost:7169" + item.Hinh_Anh;
                                                if (!string.IsNullOrEmpty(imageUrl))
                                                {
                                                    <img src="@imageUrl" alt="@item.Ten" style="width: 50px; height: 50px; object-fit: cover;" class="rounded shadow-sm" onerror="this.src='https://via.placeholder.com/50'; this.alt='Hình không tải được';" />
                                                }
                                                else
                                                {
                                                    <span>Không có hình</span>
                                                }
                                            }
                                        </td>
                                        <td>@item.Ghi_Chu</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('Topping', @item.ID_Topping)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('Topping', @item.ID_Topping)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Topping Inactive -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(toppingInactivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage = toppingInactivePage - 1, luongDaActivePage, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalToppingInactivePages; i++)
                                {
                                    <li class="@(i == toppingInactivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage = i, luongDaActivePage, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(toppingInactivePage == totalToppingInactivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage = toppingInactivePage + 1, luongDaActivePage, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Lượng đá -->
            <div class="tab-pane fade" id="luongDa" role="tabpanel">
                <div class="d-flex justify-content-between mb-3">
                    <button class="btn btn-primary btn-sm rounded-pill shadow-sm animate__animated animate__pulse animate__infinite" onclick="showAddModal('LuongDa')">
                        <i class="fas fa-plus me-2"></i>Thêm lượng đá
                    </button>
                    <div class="input-group w-50">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="luongDaSearch" placeholder="Tìm kiếm lượng đá..." onkeyup="searchTable('luongDa')">
                    </div>
                </div>
                <ul class="nav nav-pills mb-3" id="luongDaStatusTabs" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active rounded-pill" id="luongDa-active-tab" data-bs-toggle="pill" href="#luongDa-active" role="tab">Hoạt động</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link rounded-pill" id="luongDa-inactive-tab" data-bs-toggle="pill" href="#luongDa-inactive" role="tab">Không hoạt động</a>
                    </li>
                </ul>
                <div class="tab-content">
                    <div class="tab-pane fade show active" id="luongDa-active" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Tên lượng đá</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="luongDaTableActive">
                                @foreach (var item in pagedLuongDaActive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_LuongDa</td>
                                        <td>@item.Ten_LuongDa</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('LuongDa', @item.ID_LuongDa)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('LuongDa', @item.ID_LuongDa)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Lượng đá Active -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(luongDaActivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage = luongDaActivePage - 1, luongDaInactivePage })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalLuongDaActivePages; i++)
                                {
                                    <li class="@(i == luongDaActivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage = i, luongDaInactivePage })">@i</a>
                                    </li>
                                }
                                <li class="@(luongDaActivePage == totalLuongDaActivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage = luongDaActivePage + 1, luongDaInactivePage })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <div class="tab-pane fade" id="luongDa-inactive" role="tabpanel">
                        <table class="table table-hover table-bordered shadow-sm table-custom">
                            <thead class="table-dark">
                                <tr>
                                    <th>ID</th>
                                    <th>Tên lượng đá</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody id="luongDaTableInactive">
                                @foreach (var item in pagedLuongDaInactive)
                                {
                                    <tr class="animate__animated animate__fadeIn">
                                        <td>@item.ID_LuongDa</td>
                                        <td>@item.Ten_LuongDa</td>
                                        <td>
                                            <button class="btn btn-info btn-sm me-1 rounded-pill" onclick="showDetailModal('LuongDa', @item.ID_LuongDa)">
                                                <i class="bi bi-eye"></i> Chi tiết
                                            </button>
                                            <button class="btn btn-warning btn-sm rounded-pill" onclick="showEditModal('LuongDa', @item.ID_LuongDa)">
                                                <i class="bi bi-pencil"></i> Sửa
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <!-- Pagination for Lượng đá Inactive -->
                        <div class="pagination-container">
                            <ul class="pagination">
                                <li class="@(luongDaInactivePage == 1 ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage = luongDaInactivePage - 1 })">&laquo;</a>
                                </li>
                                @for (int i = 1; i <= totalLuongDaInactivePages; i++)
                                {
                                    <li class="@(i == luongDaInactivePage ? "active" : "")">
                                        <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage = i })">@i</a>
                                    </li>
                                }
                                <li class="@(luongDaInactivePage == totalLuongDaInactivePages ? "disabled" : "")">
                                    <a href="@Url.Action("Index", new { doNgotActivePage, doNgotInactivePage, sizeActivePage, sizeInactivePage, toppingActivePage, toppingInactivePage, luongDaActivePage, luongDaInactivePage = luongDaInactivePage + 1 })">&raquo;</a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal for Add/Edit/View -->
        <div class="modal fade" id="productModal" tabindex="-1" aria-labelledby="productModalLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="productModalLabel">Chi tiết</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body" id="modalBody">
                        <!-- Form will be dynamically populated -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary rounded-pill" data-bs-dismiss="modal">Đóng</button>
                        <button type="button" class="btn btn-primary rounded-pill" id="saveButton" style="display: none;">Lưu</button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <style>
        /* Container chính */
        .container-fluid {
            background: linear-gradient(135deg, #f8fafc, #e2e8f0);
            border-radius: 18px;
            padding: 25px;
            box-shadow: 0 12px 35px rgba(0, 0, 0, 0.1);
        }

        /* Thống kê */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 18px;
            margin-bottom: 25px;
        }

        .stat-card {
            padding: 25px 15px;
            border-radius: 18px;
            text-align: center;
            font-weight: 600;
            font-size: 1rem;
            color: #fff;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            transition: all 0.4s ease;
        }

            .stat-card i {
                font-size: 1.8rem;
                margin-bottom: 10px;
                opacity: 0.9;
            }

            .stat-card strong {
                display: block;
                font-size: 1.5rem;
                margin-top: 5px;
            }

            .stat-card:hover {
                transform: translateY(-6px) scale(1.05);
                box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
            }

        .stat-total {
            background: linear-gradient(135deg, #2563eb, #3b82f6);
        }

        .stat-active {
            background: linear-gradient(135deg, #059669, #10b981);
        }

        .stat-inactive {
            background: linear-gradient(135deg, #dc2626, #ef4444);
        }

        /* Tabs */
        .nav-tabs .nav-link {
            border-radius: 25px;
            margin-right: 5px;
            transition: all 0.3s ease;
        }

            .nav-tabs .nav-link.active {
                background-color: #2563eb;
                color: white;
            }

        .nav-pills .nav-link {
            border-radius: 25px;
            margin-right: 5px;
        }

            .nav-pills .nav-link.active {
                background-color: #059669;
                color: white;
            }

        /* Table */
        .table-custom {
            border-radius: 12px;
            overflow: hidden;
            background: #fff;
            box-shadow: 0 8px 20px rgba(0,0,0,0.08);
        }

            .table-custom thead {
                background: linear-gradient(135deg, #1e40af, #3b82f6);
                color: #fff;
            }

            .table-custom tbody tr {
                transition: all 0.3s ease;
            }

                .table-custom tbody tr:hover {
                    background: rgba(59, 130, 246, 0.08);
                    transform: translateX(5px);
                }

        .table th, .table td {
            vertical-align: middle;
        }

        /* Buttons */
        .btn-sm {
            border-radius: 25px;
            font-weight: 500;
            padding: 0.35rem 0.9rem;
            transition: all 0.3s ease;
        }

            .btn-sm:hover {
                transform: translateY(-3px) scale(1.05);
                box-shadow: 0 6px 15px rgba(0,0,0,0.2);
            }

        /* Form controls */
        .form-control, .form-select {
            border-radius: 25px;
            box-shadow: inset 0 2px 5px rgba(0, 0, 0, 0.08);
            border: 1px solid #d1d5db;
            transition: all 0.3s ease;
        }

            .form-control:focus {
                outline: none;
                border-color: #3b82f6;
                box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
                background: #fff;
            }

            .form-control::placeholder {
                color: #6b7280;
                font-size: 0.9rem;
                opacity: 1;
            }

        /* Modal */
        .modal-content {
            border-radius: 15px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
        }

        .form-switch .form-check-input {
            height: 1.5em;
            width: 3em;
        }

        /* Pagination */
        .pagination-container {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-top: 20px;
            padding: 10px 0;
        }

        .pagination {
            display: flex;
            list-style: none;
            padding: 0;
            margin: 0;
            gap: 8px;
        }

            .pagination li {
                display: inline-block;
            }

                .pagination li a {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    width: 38px;
                    height: 38px;
                    border-radius: 8px;
                    text-decoration: none;
                    color: #1e40af;
                    background: #fff;
                    border: 1px solid #e2e8f0;
                    font-weight: 500;
                    transition: all 0.3s ease;
                }

                    .pagination li a:hover {
                        background: #3b82f6;
                        color: #fff;
                        border-color: #3b82f6;
                        transform: translateY(-2px);
                    }

                .pagination li.active a {
                    background: #2563eb;
                    color: #fff;
                    border-color: #2563eb;
                    font-weight: 600;
                }

                .pagination li.disabled a {
                    color: #94a3b8;
                    cursor: not-allowed;
                    border-color: #e2e8f0;
                    background: #f8fafc;
                }
    </style>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Hàm kiểm tra CORS hoặc mixed content
        function checkCorsError(xhr, error) {
            if (xhr.status === 0) {
                return "Yêu cầu bị chặn, có thể do CORS hoặc mixed content (HTTP/HTTPS). Vui lòng kiểm tra: \n" +
                       "- Server API có cấu hình CORS cho phép origin '" + window.location.origin + "'.\n" +
                       "- Frontend và API có cùng giao thức (HTTP/HTTPS).\n" +
                       "- Mạng hoặc firewall không chặn yêu cầu.";
            }
            return `Lỗi: ${xhr.status} - ${xhr.statusText}. Phản hồi: ${xhr.responseText || 'Không có phản hồi chi tiết'}`;
        }

        // Hàm tạo form động cho modal
        function getForm(type, data, readOnly = false) {
            let form = '';
            if (type === 'DoNgot') {
                form = `
                    <div class="mb-3">
                        <label class="form-label fw-bold">Mức độ</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="muc_do" value="${data.muc_Do || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Ghi chú</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="ghi_chu" value="${data.ghi_Chu || ''}" ${readOnly ? 'readonly' : ''}>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Trạng thái</label>
                        <select class="form-select rounded-pill shadow-sm" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            } else if (type === 'Size') {
                form = `
                    <div class="mb-3">
                        <label class="form-label fw-bold">Tên size</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="sizeName" value="${data.sizeName || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Giá</label>
                        <input type="number" class="form-control rounded-pill shadow-sm" id="gia" value="${data.gia || 0}" ${readOnly ? 'readonly' : ''} required min="0">
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Trạng thái</label>
                        <select class="form-select rounded-pill shadow-sm" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            } else if (type === 'Topping') {
                const imageUrl = data.hinh_Anh ? `https://localhost:7169${data.hinh_Anh}` : '';
                form = `
                    <div class="mb-3">
                        <label class="form-label fw-bold">Tên</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="ten" value="${data.ten || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Giá</label>
                        <input type="number" class="form-control rounded-pill shadow-sm" id="gia" value="${data.gia || 0}" ${readOnly ? 'readonly' : ''} required min="0">
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Số lượng</label>
                        <input type="number" class="form-control rounded-pill shadow-sm" id="so_luong" value="${data.so_Luong || 0}" ${readOnly ? 'readonly' : ''} required min="0">
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Hình ảnh</label>
                        ${readOnly && data.hinh_Anh ? `<img src="${imageUrl}" alt="Hình topping" class="img-fluid rounded shadow-sm mb-2" style="max-width: 150px; aspect-ratio: 4/3; object-fit: cover;" onerror="this.src='https://via.placeholder.com/150'; this.alt='Hình không tải được';" />` : ''}
                        ${!readOnly ? `
                            <div class="form-check form-switch mb-2">
                                <input class="form-check-input" type="checkbox" id="changeImageSwitch" />
                                <label class="form-check-label" for="changeImageSwitch">Thay đổi hình ảnh</label>
                            </div>
                            <div id="imageUploadSection" style="display: none;">
                                <input type="file" class="form-control rounded-pill shadow-sm" id="hinh_anh" accept="image/*" />
                            </div>` : ''}
                        ${readOnly && !data.hinh_Anh ? `<span>Không có hình</span>` : ''}
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Ghi chú</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="ghi_chu" value="${data.ghi_Chu || ''}" ${readOnly ? 'readonly' : ''}>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Trạng thái</label>
                        <select class="form-select rounded-pill shadow-sm" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            } else if (type === 'LuongDa') {
                form = `
                    <div class="mb-3">
                        <label class="form-label fw-bold">Tên lượng đá</label>
                        <input type="text" class="form-control rounded-pill shadow-sm" id="ten_luongDa" value="${data.ten_LuongDa || ''}" ${readOnly ? 'readonly' : ''} required>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Trạng thái</label>
                        <select class="form-select rounded-pill shadow-sm" id="trang_thai" ${readOnly ? 'disabled' : ''}>
                            <option value="true" ${data.trang_Thai ? 'selected' : ''}>Hoạt động</option>
                            <option value="false" ${!data.trang_Thai ? 'selected' : ''}>Không hoạt động</option>
                        </select>
                    </div>`;
            }
            return form;
        }

        // Hàm upload hình ảnh
        async function uploadImage(file) {
            if (!file) return null;
            const formData = new FormData();
            formData.append("image", file);
            try {
                const response = await $.ajax({
                    url: "https://localhost:7169/api/SanPham/upload-image",
                    type: "POST",
                    data: formData,
                    processData: false,
                    contentType: false
                });
                console.log("Upload hình ảnh thành công:", response);
                return response;
            } catch (error) {
                console.error("Lỗi khi upload hình ảnh:", error);
                alert("Lỗi khi upload hình ảnh: " + checkCorsError(error, error));
                return null;
            }
        }

        // Hàm xóa hình ảnh
        async function deleteImage(imagePath) {
            if (!imagePath) return;
            try {
                await $.ajax({
                    url: `https://localhost:7169/api/SanPham/delete-image?imagePath=${encodeURIComponent(imagePath)}`,
                    type: "DELETE",
                    headers: { 'Accept': '*/*' }
                });
                console.log("Xóa hình ảnh thành công:", imagePath);
            } catch (error) {
                console.error("Lỗi khi xóa hình ảnh:", error);
                alert("Lỗi khi xóa hình ảnh: " + checkCorsError(error, error));
            }
        }

        // Hàm hiển thị modal thêm mới
        function showAddModal(type) {
            $('#productModalLabel').text('Thêm mới ' + type);
            $('#saveButton').show();
            $('#modalBody').html(getForm(type, {}));
            $('#saveButton').off('click').on('click', async function () {
                if (validateForm(type)) {
                    await saveData(type, 0);
                }
            });
            $('#productModal').modal('show');
            toggleImageUpload();
        }

        // Hàm hiển thị modal chi tiết
        function showDetailModal(type, id) {
            $('#productModalLabel').text('Chi tiết ' + type);
            $('#saveButton').hide();
            $.ajax({
                url: `https://localhost:7169/api/${type}/${id}`,
                type: 'GET',
                success: function (data) {
                    $('#modalBody').html(getForm(type, data, true));
                    $('#productModal').modal('show');
                },
                error: function (xhr, status, error) {
                    alert(`Lỗi khi lấy chi tiết ${type} (ID: ${id}): ${checkCorsError(xhr, error)}`);
                }
            });
        }

        // Hàm hiển thị modal sửa
        function showEditModal(type, id) {
            $('#productModalLabel').text('Sửa ' + type);
            $('#saveButton').show();
            $.ajax({
                url: `https://localhost:7169/api/${type}/${id}`,
                type: 'GET',
                success: function (data) {
                    $('#modalBody').html(getForm(type, data));
                    $('#saveButton').off('click').on('click', async function () {
                        if (validateForm(type)) {
                            await saveData(type, id);
                        }
                    });
                    $('#productModal').modal('show');
                    toggleImageUpload();
                },
                error: function (xhr, status, error) {
                    alert(`Lỗi khi lấy dữ liệu sửa ${type} (ID: ${id}): ${checkCorsError(xhr, error)}`);
                }
            });
        }

        // Hàm toggle trường upload hình ảnh cho Topping
        function toggleImageUpload() {
            $('#changeImageSwitch').on('change', function () {
                if ($(this).is(':checked')) {
                    $('#imageUploadSection').show();
                    $('#hinh_anh').attr('required', 'required');
                } else {
                    $('#imageUploadSection').hide();
                    $('#hinh_anh').removeAttr('required');
                }
            });
        }

        // Hàm validate dữ liệu trước khi gửi
        function validateForm(type) {
            let isValid = true;
            if (type === 'DoNgot') {
                if (!$('#muc_do').val().trim()) {
                    alert('Mức độ không được để trống!');
                    isValid = false;
                }
            } else if (type === 'Size') {
                if (!$('#sizeName').val().trim()) {
                    alert('Tên size không được để trống!');
                    isValid = false;
                }
                if (!$('#gia').val() || parseFloat($('#gia').val()) < 0) {
                    alert('Giá phải là số không âm!');
                    isValid = false;
                }
            } else if (type === 'Topping') {
                if (!$('#ten').val().trim()) {
                    alert('Tên topping không được để trống!');
                    isValid = false;
                }
                if (!$('#gia').val() || parseFloat($('#gia').val()) < 0) {
                    alert('Giá phải là số không âm!');
                    isValid = false;
                }
                if (!$('#so_luong').val() || parseInt($('#so_luong').val()) < 0) {
                    alert('Số lượng phải là số không âm!');
                    isValid = false;
                }
                if ($('#changeImageSwitch').is(':checked') && !$('#hinh_anh')[0].files.length) {
                    alert('Vui lòng chọn hình ảnh mới!');
                    isValid = false;
                }
            } else if (type === 'LuongDa') {
                if (!$('#ten_luongDa').val().trim()) {
                    alert('Tên lượng đá không được để trống!');
                    isValid = false;
                }
            }
            return isValid;
        }

        // Hàm lưu dữ liệu (thêm hoặc sửa)
        async function saveData(type, id) {
            let data = {};
            if (type === 'DoNgot') {
                data = {
                    iD_DoNgot: id,
                    muc_Do: $('#muc_do').val().trim(),
                    ghi_Chu: $('#ghi_chu').val().trim(),
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            } else if (type === 'Size') {
                data = {
                    iD_Size: id,
                    sizeName: $('#sizeName').val().trim(),
                    gia: parseFloat($('#gia').val()) || 0,
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            } else if (type === 'Topping') {
                let imagePath = id > 0 ? (await $.ajax({ url: `https://localhost:7169/api/Topping/${id}` })).hinh_Anh : null;
                const fileInput = $('#hinh_anh')[0];
                if ($('#changeImageSwitch').is(':checked') && fileInput && fileInput.files.length > 0) {
                    if (id > 0 && imagePath) {
                        await deleteImage(imagePath);
                    }
                    imagePath = await uploadImage(fileInput.files[0]);
                    if (!imagePath) return;
                }
                data = {
                    iD_Topping: id,
                    ten: $('#ten').val().trim(),
                    gia: parseFloat($('#gia').val()) || 0,
                    so_Luong: parseInt($('#so_luong').val()) || 0,
                    hinh_Anh: imagePath || (id > 0 ? imagePath : ''),
                    ghi_Chu: $('#ghi_chu').val().trim(),
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            } else if (type === 'LuongDa') {
                data = {
                    iD_LuongDa: id,
                    ten_LuongDa: $('#ten_luongDa').val().trim(),
                    trang_Thai: $('#trang_thai').val() === 'true'
                };
            }

            let url = `https://localhost:7169/api/${type}${id > 0 ? '/' + id : ''}`;
            let method = id > 0 ? 'PUT' : 'POST';

            $.ajax({
                url: url,
                type: method,
                contentType: 'application/json',
                data: JSON.stringify(data),
                success: function () {
                    $('#productModal').modal('hide');
                    location.reload();
                },
                error: function (xhr, status, error) {
                    alert(`Lỗi khi lưu dữ liệu ${type} (ID: ${id}): ${checkCorsError(xhr, error)}`);
                }
            });
        }

        // Hàm tìm kiếm trong bảng
        function searchTable(type) {
            const searchInput = $(`#${type}Search`).val().toLowerCase();
            $(`#${type}TableActive tr, #${type}TableInactive tr`).each(function () {
                const rowText = $(this).text().toLowerCase();
                $(this).toggle(rowText.includes(searchInput));
            });
        }

        // Hàm lọc trạng thái
        function filterStatus(type) {
            const tabs = ['doNgot', 'size', 'topping', 'luongDa'];
            tabs.forEach(tab => {
                if (type === 'all') {
                    $(`#${tab}-active-tab`).tab('show');
                } else if (type === 'active') {
                    $(`#${tab}-active-tab`).tab('show');
                } else if (type === 'inactive') {
                    $(`#${tab}-inactive-tab`).tab('show');
                }
            });
        }

        // Debug dữ liệu khi tải trang
        $(document).ready(function () {
            console.log("Dữ liệu Model:", @Html.Raw(Json.Serialize(Model)));
        });
    </script>
</body>
</html>
```