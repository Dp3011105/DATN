@model FE.Controllers.QuanLyDonHangViewModel
@using System.Globalization
@using System.Linq
@{
    ViewData["Title"] = "Quản lý đơn hàng";
    var vi = new CultureInfo("vi-VN");
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />

@functions {
    string MapTrangThaiFromDb(string db) => db switch
    {
        "Chua_Xac_Nhan" or "Dang_Xu_Ly" => "Chờ xác nhận",
        "Da_Xac_Nhan" => "Chờ giao",
        "Dang_Giao_Hang" => "Vận chuyển",
        "Hoan_Thanh" => "Hoàn thành",
        "Huy_Don" => "Đã huỷ",
        _ => db ?? ""
    };

    string BadgeClass(string human) => human switch
    {
        "Chờ xác nhận" => "text-bg-warning",
        "Chờ giao" => "text-bg-primary",
        "Vận chuyển" => "text-bg-info",
        "Hoàn thành" => "text-bg-success",
        "Đã huỷ" => "text-bg-danger",
        _ => "text-bg-secondary"
    };

    string VND(decimal n) => string.Format(new CultureInfo("vi-VN"), "{0:c0}", n);

    // Ghép các phần địa chỉ nhưng bỏ trống các phần null/empty
    string JoinNonEmpty(params string[] parts)
        => string.Join(", ", parts.Where(s => !string.IsNullOrWhiteSpace(s)));
}

<div class="container-fluid py-3">
    <h3 class="mb-3">Quản lý đơn hàng</h3>

    @if (TempData["msg"] is string msg && !string.IsNullOrWhiteSpace(msg))
    {
        <div class="alert alert-info py-2">@msg</div>
    }

    <!-- Filter GET -->
    <form method="get" class="d-flex align-items-center gap-2 mb-3">
        <input name="tuKhoa" id="tuKhoa" class="form-control" style="max-width:360px"
               value="@Model.TuKhoa" placeholder="Tìm theo mã / tên khách..." />

        <select name="trangThai" id="selTrangThai" class="form-select" style="max-width:160px">
            @foreach (var t in Model.TrangThaiList)
            {
                <option value="@t" selected="@(t == Model.TrangThai)">@t</option>
            }
        </select>

        <button class="btn btn-secondary" type="submit">Tải lại</button>
    </form>

    <div class="table-responsive">
        <table class="table table-hover align-middle">
            <thead>
                <tr>
                    <th>Mã đơn</th>
                    <th>Khách hàng</th>
                    <th>Ngày tạo</th>
                    <th>Thanh toán</th>
                    <th>Loại HD</th>
                    <th>Địa chỉ</th> <!-- thêm cột -->
                    <th class="text-end">Tổng tiền</th>
                    <th>Trạng thái</th>
                    <th class="text-end" style="width:300px">Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @if (Model.DanhSachHoaDon == null || Model.DanhSachHoaDon.Count == 0)
                {
                    <tr><td colspan="9" class="text-muted">Không có dữ liệu</td></tr> <!-- sửa colspan = 9 -->
                }
                else
                {
                    foreach (var hd in Model.DanhSachHoaDon)
                    {
                        var human = MapTrangThaiFromDb(hd.Trang_Thai ?? "");

                        // Tính địa chỉ hiển thị theo yêu cầu
                        string diaChiHienThi;
                        if (string.Equals(hd.Loai_Hoa_Don, "TaiQuay", StringComparison.OrdinalIgnoreCase))
                        {
                            diaChiHienThi = "Tại quầy";
                        }
                        else
                        {
                            // Ưu tiên địa chỉ tự nhập
                            var fromText = hd.Dia_Chi_Tu_Nhap;
                            // Fallback địa chỉ từ DB (nếu có navigation DiaChi)
                            string fromDb = null;
                            try
                            {
                                fromDb = (hd.DiaChi != null)
                                    ? JoinNonEmpty(hd.DiaChi.Dia_Chi, hd.DiaChi.Tinh_Thanh)
                                    : null;
                            }
                            catch { /* tránh null-ref nếu model không có DiaChi */ }

                            diaChiHienThi = !string.IsNullOrWhiteSpace(fromText)
                                ? fromText
                                : (!string.IsNullOrWhiteSpace(fromDb) ? fromDb : "—");
                        }

                        <tr>
                            <td>
                                <a class="text-decoration-none fw-semibold"
                                   href="@Url.Action("ChiTiet", "QuanLyDonHang", new { id = hd.ID_Hoa_Don })">
                                    @hd.Ma_Hoa_Don
                                </a>
                            </td>
                            <td>@(hd.KhachHang?.Ho_Ten ?? "Khách lẻ")</td>
                            <td>@hd.Ngay_Tao.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@(hd.HinhThucThanhToan?.Phuong_Thuc_Thanh_Toan ?? "N/A")</td>
                            <td>@(string.IsNullOrWhiteSpace(hd.Loai_Hoa_Don) ? "—" : hd.Loai_Hoa_Don)</td>
                            <td>@diaChiHienThi</td> <!-- cell địa chỉ -->
                            <td class="text-end">@VND(hd.Tong_Tien)</td>
                            <td><span class="badge @BadgeClass(human)">@human</span></td>
                            <td class="text-end">

                                <a class="btn btn-sm btn-outline-secondary me-1"
                                   href="@Url.Action("ChiTiet", "QuanLyDonHang", new { id = hd.ID_Hoa_Don })">Chi tiết</a>

                                @* B1: Xác nhận (từ Chờ xác nhận -> Đang giao hàng) *@
                                @if (string.Equals(hd.Trang_Thai, "Chua_Xac_Nhan", StringComparison.OrdinalIgnoreCase))
                                {
                                    <form method="post" class="d-inline" action="@Url.Action("XacNhan","QuanLyDonHang")">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@hd.ID_Hoa_Don" />
                                        <button class="btn btn-sm btn-primary me-1" type="submit">Xác nhận</button>
                                    </form>
                                }

                                @* B2: Khi đang giao hàng -> cho phép hoàn tất *@
                                @if (string.Equals(hd.Trang_Thai, "Dang_Giao_Hang", StringComparison.OrdinalIgnoreCase))
                                {
                                    <form method="post" class="d-inline" action="@Url.Action("GiaoHangThanhCong","QuanLyDonHang")">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@hd.ID_Hoa_Don" />
                                        <button class="btn btn-sm btn-success me-1" type="submit">Giao hàng thành công</button>
                                    </form>
                                }

                                @* Hủy: ẩn nếu đã hoàn thành hoặc đã hủy *@
                                @if (!string.Equals(hd.Trang_Thai, "Hoan_Thanh", StringComparison.OrdinalIgnoreCase)
                                                        && !string.Equals(hd.Trang_Thai, "Huy_Don", StringComparison.OrdinalIgnoreCase))
                                {
                                    <form method="post" class="d-inline"
                                          action="@Url.Action("Huy","QuanLyDonHang")"
                                          onsubmit="return confirm('Bạn chắc chắn muốn hủy đơn này?');">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="id" value="@hd.ID_Hoa_Don" />
                                        <button class="btn btn-sm btn-outline-danger" type="submit">Hủy</button>
                                    </form>
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
